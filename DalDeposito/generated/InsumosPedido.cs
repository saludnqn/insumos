using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DalDeposito
{
	/// <summary>
	/// Strongly-typed collection for the InsumosPedido class.
	/// </summary>
    [Serializable]
	public partial class InsumosPedidoCollection : ActiveList<InsumosPedido, InsumosPedidoCollection>
	{	   
		public InsumosPedidoCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>InsumosPedidoCollection</returns>
		public InsumosPedidoCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                InsumosPedido o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the Insumos_Pedidos table.
	/// </summary>
	[Serializable]
	public partial class InsumosPedido : ActiveRecord<InsumosPedido>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public InsumosPedido()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public InsumosPedido(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public InsumosPedido(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public InsumosPedido(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("Insumos_Pedidos", TableType.Table, DataService.GetInstance("depProvider"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarCodigo = new TableSchema.TableColumn(schema);
				colvarCodigo.ColumnName = "Codigo";
				colvarCodigo.DataType = DbType.Int32;
				colvarCodigo.MaxLength = 0;
				colvarCodigo.AutoIncrement = false;
				colvarCodigo.IsNullable = false;
				colvarCodigo.IsPrimaryKey = true;
				colvarCodigo.IsForeignKey = false;
				colvarCodigo.IsReadOnly = false;
				colvarCodigo.DefaultSetting = @"";
				colvarCodigo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCodigo);
				
				TableSchema.TableColumn colvarSistema = new TableSchema.TableColumn(schema);
				colvarSistema.ColumnName = "Sistema";
				colvarSistema.DataType = DbType.Byte;
				colvarSistema.MaxLength = 0;
				colvarSistema.AutoIncrement = false;
				colvarSistema.IsNullable = false;
				colvarSistema.IsPrimaryKey = false;
				colvarSistema.IsForeignKey = false;
				colvarSistema.IsReadOnly = false;
				
						colvarSistema.DefaultSetting = @"((1))";
				colvarSistema.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSistema);
				
				TableSchema.TableColumn colvarFecha = new TableSchema.TableColumn(schema);
				colvarFecha.ColumnName = "Fecha";
				colvarFecha.DataType = DbType.DateTime;
				colvarFecha.MaxLength = 0;
				colvarFecha.AutoIncrement = false;
				colvarFecha.IsNullable = false;
				colvarFecha.IsPrimaryKey = false;
				colvarFecha.IsForeignKey = false;
				colvarFecha.IsReadOnly = false;
				colvarFecha.DefaultSetting = @"";
				colvarFecha.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFecha);
				
				TableSchema.TableColumn colvarTipo = new TableSchema.TableColumn(schema);
				colvarTipo.ColumnName = "Tipo";
				colvarTipo.DataType = DbType.Int32;
				colvarTipo.MaxLength = 0;
				colvarTipo.AutoIncrement = false;
				colvarTipo.IsNullable = false;
				colvarTipo.IsPrimaryKey = false;
				colvarTipo.IsForeignKey = false;
				colvarTipo.IsReadOnly = false;
				colvarTipo.DefaultSetting = @"";
				colvarTipo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTipo);
				
				TableSchema.TableColumn colvarAgente = new TableSchema.TableColumn(schema);
				colvarAgente.ColumnName = "Agente";
				colvarAgente.DataType = DbType.Int32;
				colvarAgente.MaxLength = 0;
				colvarAgente.AutoIncrement = false;
				colvarAgente.IsNullable = false;
				colvarAgente.IsPrimaryKey = false;
				colvarAgente.IsForeignKey = true;
				colvarAgente.IsReadOnly = false;
				colvarAgente.DefaultSetting = @"";
				
					colvarAgente.ForeignKeyTableName = "Insumos_Pedidos_Agentes";
				schema.Columns.Add(colvarAgente);
				
				TableSchema.TableColumn colvarRubroPrimerNivel = new TableSchema.TableColumn(schema);
				colvarRubroPrimerNivel.ColumnName = "RubroPrimerNivel";
				colvarRubroPrimerNivel.DataType = DbType.Int32;
				colvarRubroPrimerNivel.MaxLength = 0;
				colvarRubroPrimerNivel.AutoIncrement = false;
				colvarRubroPrimerNivel.IsNullable = true;
				colvarRubroPrimerNivel.IsPrimaryKey = false;
				colvarRubroPrimerNivel.IsForeignKey = false;
				colvarRubroPrimerNivel.IsReadOnly = false;
				colvarRubroPrimerNivel.DefaultSetting = @"";
				colvarRubroPrimerNivel.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRubroPrimerNivel);
				
				TableSchema.TableColumn colvarResponsable = new TableSchema.TableColumn(schema);
				colvarResponsable.ColumnName = "Responsable";
				colvarResponsable.DataType = DbType.AnsiString;
				colvarResponsable.MaxLength = 50;
				colvarResponsable.AutoIncrement = false;
				colvarResponsable.IsNullable = false;
				colvarResponsable.IsPrimaryKey = false;
				colvarResponsable.IsForeignKey = false;
				colvarResponsable.IsReadOnly = false;
				colvarResponsable.DefaultSetting = @"";
				colvarResponsable.ForeignKeyTableName = "";
				schema.Columns.Add(colvarResponsable);
				
				TableSchema.TableColumn colvarObservaciones = new TableSchema.TableColumn(schema);
				colvarObservaciones.ColumnName = "Observaciones";
				colvarObservaciones.DataType = DbType.AnsiString;
				colvarObservaciones.MaxLength = 200;
				colvarObservaciones.AutoIncrement = false;
				colvarObservaciones.IsNullable = true;
				colvarObservaciones.IsPrimaryKey = false;
				colvarObservaciones.IsForeignKey = false;
				colvarObservaciones.IsReadOnly = false;
				colvarObservaciones.DefaultSetting = @"";
				colvarObservaciones.ForeignKeyTableName = "";
				schema.Columns.Add(colvarObservaciones);
				
				TableSchema.TableColumn colvarNoControlarConsumo = new TableSchema.TableColumn(schema);
				colvarNoControlarConsumo.ColumnName = "NoControlarConsumo";
				colvarNoControlarConsumo.DataType = DbType.Boolean;
				colvarNoControlarConsumo.MaxLength = 0;
				colvarNoControlarConsumo.AutoIncrement = false;
				colvarNoControlarConsumo.IsNullable = false;
				colvarNoControlarConsumo.IsPrimaryKey = false;
				colvarNoControlarConsumo.IsForeignKey = false;
				colvarNoControlarConsumo.IsReadOnly = false;
				
						colvarNoControlarConsumo.DefaultSetting = @"((0))";
				colvarNoControlarConsumo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNoControlarConsumo);
				
				TableSchema.TableColumn colvarEstado = new TableSchema.TableColumn(schema);
				colvarEstado.ColumnName = "Estado";
				colvarEstado.DataType = DbType.Int32;
				colvarEstado.MaxLength = 0;
				colvarEstado.AutoIncrement = false;
				colvarEstado.IsNullable = false;
				colvarEstado.IsPrimaryKey = false;
				colvarEstado.IsForeignKey = false;
				colvarEstado.IsReadOnly = false;
				
						colvarEstado.DefaultSetting = @"((0))";
				colvarEstado.ForeignKeyTableName = "";
				schema.Columns.Add(colvarEstado);
				
				TableSchema.TableColumn colvarFechaProcesado = new TableSchema.TableColumn(schema);
				colvarFechaProcesado.ColumnName = "Fecha_Procesado";
				colvarFechaProcesado.DataType = DbType.DateTime;
				colvarFechaProcesado.MaxLength = 0;
				colvarFechaProcesado.AutoIncrement = false;
				colvarFechaProcesado.IsNullable = true;
				colvarFechaProcesado.IsPrimaryKey = false;
				colvarFechaProcesado.IsForeignKey = false;
				colvarFechaProcesado.IsReadOnly = false;
				colvarFechaProcesado.DefaultSetting = @"";
				colvarFechaProcesado.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFechaProcesado);
				
				TableSchema.TableColumn colvarDestinatario = new TableSchema.TableColumn(schema);
				colvarDestinatario.ColumnName = "Destinatario";
				colvarDestinatario.DataType = DbType.Int32;
				colvarDestinatario.MaxLength = 0;
				colvarDestinatario.AutoIncrement = false;
				colvarDestinatario.IsNullable = false;
				colvarDestinatario.IsPrimaryKey = false;
				colvarDestinatario.IsForeignKey = false;
				colvarDestinatario.IsReadOnly = false;
				
						colvarDestinatario.DefaultSetting = @"((1))";
				colvarDestinatario.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDestinatario);
				
				TableSchema.TableColumn colvarAutorizado = new TableSchema.TableColumn(schema);
				colvarAutorizado.ColumnName = "Autorizado";
				colvarAutorizado.DataType = DbType.Boolean;
				colvarAutorizado.MaxLength = 0;
				colvarAutorizado.AutoIncrement = false;
				colvarAutorizado.IsNullable = false;
				colvarAutorizado.IsPrimaryKey = false;
				colvarAutorizado.IsForeignKey = false;
				colvarAutorizado.IsReadOnly = false;
				
						colvarAutorizado.DefaultSetting = @"((0))";
				colvarAutorizado.ForeignKeyTableName = "";
				schema.Columns.Add(colvarAutorizado);
				
				TableSchema.TableColumn colvarAutorizadoPor = new TableSchema.TableColumn(schema);
				colvarAutorizadoPor.ColumnName = "AutorizadoPor";
				colvarAutorizadoPor.DataType = DbType.Int32;
				colvarAutorizadoPor.MaxLength = 0;
				colvarAutorizadoPor.AutoIncrement = false;
				colvarAutorizadoPor.IsNullable = true;
				colvarAutorizadoPor.IsPrimaryKey = false;
				colvarAutorizadoPor.IsForeignKey = false;
				colvarAutorizadoPor.IsReadOnly = false;
				colvarAutorizadoPor.DefaultSetting = @"";
				colvarAutorizadoPor.ForeignKeyTableName = "";
				schema.Columns.Add(colvarAutorizadoPor);
				
				TableSchema.TableColumn colvarFechaAutorizacion = new TableSchema.TableColumn(schema);
				colvarFechaAutorizacion.ColumnName = "FechaAutorizacion";
				colvarFechaAutorizacion.DataType = DbType.DateTime;
				colvarFechaAutorizacion.MaxLength = 0;
				colvarFechaAutorizacion.AutoIncrement = false;
				colvarFechaAutorizacion.IsNullable = true;
				colvarFechaAutorizacion.IsPrimaryKey = false;
				colvarFechaAutorizacion.IsForeignKey = false;
				colvarFechaAutorizacion.IsReadOnly = false;
				colvarFechaAutorizacion.DefaultSetting = @"";
				colvarFechaAutorizacion.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFechaAutorizacion);
				
				TableSchema.TableColumn colvarAprobadoPor = new TableSchema.TableColumn(schema);
				colvarAprobadoPor.ColumnName = "AprobadoPor";
				colvarAprobadoPor.DataType = DbType.Int32;
				colvarAprobadoPor.MaxLength = 0;
				colvarAprobadoPor.AutoIncrement = false;
				colvarAprobadoPor.IsNullable = true;
				colvarAprobadoPor.IsPrimaryKey = false;
				colvarAprobadoPor.IsForeignKey = false;
				colvarAprobadoPor.IsReadOnly = false;
				colvarAprobadoPor.DefaultSetting = @"";
				colvarAprobadoPor.ForeignKeyTableName = "";
				schema.Columns.Add(colvarAprobadoPor);
				
				TableSchema.TableColumn colvarFechaAprobacion = new TableSchema.TableColumn(schema);
				colvarFechaAprobacion.ColumnName = "FechaAprobacion";
				colvarFechaAprobacion.DataType = DbType.DateTime;
				colvarFechaAprobacion.MaxLength = 0;
				colvarFechaAprobacion.AutoIncrement = false;
				colvarFechaAprobacion.IsNullable = true;
				colvarFechaAprobacion.IsPrimaryKey = false;
				colvarFechaAprobacion.IsForeignKey = false;
				colvarFechaAprobacion.IsReadOnly = false;
				colvarFechaAprobacion.DefaultSetting = @"";
				colvarFechaAprobacion.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFechaAprobacion);
				
				TableSchema.TableColumn colvarFechaDespacho = new TableSchema.TableColumn(schema);
				colvarFechaDespacho.ColumnName = "Fecha_Despacho";
				colvarFechaDespacho.DataType = DbType.DateTime;
				colvarFechaDespacho.MaxLength = 0;
				colvarFechaDespacho.AutoIncrement = false;
				colvarFechaDespacho.IsNullable = true;
				colvarFechaDespacho.IsPrimaryKey = false;
				colvarFechaDespacho.IsForeignKey = false;
				colvarFechaDespacho.IsReadOnly = false;
				colvarFechaDespacho.DefaultSetting = @"";
				colvarFechaDespacho.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFechaDespacho);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["depProvider"].AddSchema("Insumos_Pedidos",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Codigo")]
		[Bindable(true)]
		public int Codigo 
		{
			get { return GetColumnValue<int>(Columns.Codigo); }
			set { SetColumnValue(Columns.Codigo, value); }
		}
		  
		[XmlAttribute("Sistema")]
		[Bindable(true)]
		public byte Sistema 
		{
			get { return GetColumnValue<byte>(Columns.Sistema); }
			set { SetColumnValue(Columns.Sistema, value); }
		}
		  
		[XmlAttribute("Fecha")]
		[Bindable(true)]
		public DateTime Fecha 
		{
			get { return GetColumnValue<DateTime>(Columns.Fecha); }
			set { SetColumnValue(Columns.Fecha, value); }
		}
		  
		[XmlAttribute("Tipo")]
		[Bindable(true)]
		public int Tipo 
		{
			get { return GetColumnValue<int>(Columns.Tipo); }
			set { SetColumnValue(Columns.Tipo, value); }
		}
		  
		[XmlAttribute("Agente")]
		[Bindable(true)]
		public int Agente 
		{
			get { return GetColumnValue<int>(Columns.Agente); }
			set { SetColumnValue(Columns.Agente, value); }
		}
		  
		[XmlAttribute("RubroPrimerNivel")]
		[Bindable(true)]
		public int? RubroPrimerNivel 
		{
			get { return GetColumnValue<int?>(Columns.RubroPrimerNivel); }
			set { SetColumnValue(Columns.RubroPrimerNivel, value); }
		}
		  
		[XmlAttribute("Responsable")]
		[Bindable(true)]
		public string Responsable 
		{
			get { return GetColumnValue<string>(Columns.Responsable); }
			set { SetColumnValue(Columns.Responsable, value); }
		}
		  
		[XmlAttribute("Observaciones")]
		[Bindable(true)]
		public string Observaciones 
		{
			get { return GetColumnValue<string>(Columns.Observaciones); }
			set { SetColumnValue(Columns.Observaciones, value); }
		}
		  
		[XmlAttribute("NoControlarConsumo")]
		[Bindable(true)]
		public bool NoControlarConsumo 
		{
			get { return GetColumnValue<bool>(Columns.NoControlarConsumo); }
			set { SetColumnValue(Columns.NoControlarConsumo, value); }
		}
		  
		[XmlAttribute("Estado")]
		[Bindable(true)]
		public int Estado 
		{
			get { return GetColumnValue<int>(Columns.Estado); }
			set { SetColumnValue(Columns.Estado, value); }
		}
		  
		[XmlAttribute("FechaProcesado")]
		[Bindable(true)]
		public DateTime? FechaProcesado 
		{
			get { return GetColumnValue<DateTime?>(Columns.FechaProcesado); }
			set { SetColumnValue(Columns.FechaProcesado, value); }
		}
		  
		[XmlAttribute("Destinatario")]
		[Bindable(true)]
		public int Destinatario 
		{
			get { return GetColumnValue<int>(Columns.Destinatario); }
			set { SetColumnValue(Columns.Destinatario, value); }
		}
		  
		[XmlAttribute("Autorizado")]
		[Bindable(true)]
		public bool Autorizado 
		{
			get { return GetColumnValue<bool>(Columns.Autorizado); }
			set { SetColumnValue(Columns.Autorizado, value); }
		}
		  
		[XmlAttribute("AutorizadoPor")]
		[Bindable(true)]
		public int? AutorizadoPor 
		{
			get { return GetColumnValue<int?>(Columns.AutorizadoPor); }
			set { SetColumnValue(Columns.AutorizadoPor, value); }
		}
		  
		[XmlAttribute("FechaAutorizacion")]
		[Bindable(true)]
		public DateTime? FechaAutorizacion 
		{
			get { return GetColumnValue<DateTime?>(Columns.FechaAutorizacion); }
			set { SetColumnValue(Columns.FechaAutorizacion, value); }
		}
		  
		[XmlAttribute("AprobadoPor")]
		[Bindable(true)]
		public int? AprobadoPor 
		{
			get { return GetColumnValue<int?>(Columns.AprobadoPor); }
			set { SetColumnValue(Columns.AprobadoPor, value); }
		}
		  
		[XmlAttribute("FechaAprobacion")]
		[Bindable(true)]
		public DateTime? FechaAprobacion 
		{
			get { return GetColumnValue<DateTime?>(Columns.FechaAprobacion); }
			set { SetColumnValue(Columns.FechaAprobacion, value); }
		}
		  
		[XmlAttribute("FechaDespacho")]
		[Bindable(true)]
		public DateTime? FechaDespacho 
		{
			get { return GetColumnValue<DateTime?>(Columns.FechaDespacho); }
			set { SetColumnValue(Columns.FechaDespacho, value); }
		}
		
		#endregion
		
		
		#region PrimaryKey Methods		
		
        protected override void SetPrimaryKey(object oValue)
        {
            base.SetPrimaryKey(oValue);
            
            SetPKValues();
        }
        
				
		private DalDeposito.InsumosPedidosAutorizacioneCollection colInsumosPedidosAutorizaciones;
		public DalDeposito.InsumosPedidosAutorizacioneCollection InsumosPedidosAutorizaciones
		{
			get
			{
				if(colInsumosPedidosAutorizaciones == null)
				{
					colInsumosPedidosAutorizaciones = new DalDeposito.InsumosPedidosAutorizacioneCollection().Where(InsumosPedidosAutorizacione.Columns.Pedido, Codigo).Load();
					colInsumosPedidosAutorizaciones.ListChanged += new ListChangedEventHandler(colInsumosPedidosAutorizaciones_ListChanged);
				}
				return colInsumosPedidosAutorizaciones;			
			}
			set 
			{ 
					colInsumosPedidosAutorizaciones = value; 
					colInsumosPedidosAutorizaciones.ListChanged += new ListChangedEventHandler(colInsumosPedidosAutorizaciones_ListChanged);
			}
		}
		
		void colInsumosPedidosAutorizaciones_ListChanged(object sender, ListChangedEventArgs e)
		{
		    if (e.ListChangedType == ListChangedType.ItemAdded)
		    {
		        // Set foreign key value
		        colInsumosPedidosAutorizaciones[e.NewIndex].Pedido = Codigo;
		    }
		}
				
		private DalDeposito.InsumosPedidosBitacoraCollection colInsumosPedidosBitacoraRecords;
		public DalDeposito.InsumosPedidosBitacoraCollection InsumosPedidosBitacoraRecords
		{
			get
			{
				if(colInsumosPedidosBitacoraRecords == null)
				{
					colInsumosPedidosBitacoraRecords = new DalDeposito.InsumosPedidosBitacoraCollection().Where(InsumosPedidosBitacora.Columns.Pedido, Codigo).Load();
					colInsumosPedidosBitacoraRecords.ListChanged += new ListChangedEventHandler(colInsumosPedidosBitacoraRecords_ListChanged);
				}
				return colInsumosPedidosBitacoraRecords;			
			}
			set 
			{ 
					colInsumosPedidosBitacoraRecords = value; 
					colInsumosPedidosBitacoraRecords.ListChanged += new ListChangedEventHandler(colInsumosPedidosBitacoraRecords_ListChanged);
			}
		}
		
		void colInsumosPedidosBitacoraRecords_ListChanged(object sender, ListChangedEventArgs e)
		{
		    if (e.ListChangedType == ListChangedType.ItemAdded)
		    {
		        // Set foreign key value
		        colInsumosPedidosBitacoraRecords[e.NewIndex].Pedido = Codigo;
		    }
		}
				
		private DalDeposito.InsumosPedidosDeudaCollection colInsumosPedidosDeudas;
		public DalDeposito.InsumosPedidosDeudaCollection InsumosPedidosDeudas
		{
			get
			{
				if(colInsumosPedidosDeudas == null)
				{
					colInsumosPedidosDeudas = new DalDeposito.InsumosPedidosDeudaCollection().Where(InsumosPedidosDeuda.Columns.Pedido, Codigo).Load();
					colInsumosPedidosDeudas.ListChanged += new ListChangedEventHandler(colInsumosPedidosDeudas_ListChanged);
				}
				return colInsumosPedidosDeudas;			
			}
			set 
			{ 
					colInsumosPedidosDeudas = value; 
					colInsumosPedidosDeudas.ListChanged += new ListChangedEventHandler(colInsumosPedidosDeudas_ListChanged);
			}
		}
		
		void colInsumosPedidosDeudas_ListChanged(object sender, ListChangedEventArgs e)
		{
		    if (e.ListChangedType == ListChangedType.ItemAdded)
		    {
		        // Set foreign key value
		        colInsumosPedidosDeudas[e.NewIndex].Pedido = Codigo;
		    }
		}
				
		private DalDeposito.InsumosPedidosLineaCollection colInsumosPedidosLineas;
		public DalDeposito.InsumosPedidosLineaCollection InsumosPedidosLineas
		{
			get
			{
				if(colInsumosPedidosLineas == null)
				{
					colInsumosPedidosLineas = new DalDeposito.InsumosPedidosLineaCollection().Where(InsumosPedidosLinea.Columns.Pedido, Codigo).Load();
					colInsumosPedidosLineas.ListChanged += new ListChangedEventHandler(colInsumosPedidosLineas_ListChanged);
				}
				return colInsumosPedidosLineas;			
			}
			set 
			{ 
					colInsumosPedidosLineas = value; 
					colInsumosPedidosLineas.ListChanged += new ListChangedEventHandler(colInsumosPedidosLineas_ListChanged);
			}
		}
		
		void colInsumosPedidosLineas_ListChanged(object sender, ListChangedEventArgs e)
		{
		    if (e.ListChangedType == ListChangedType.ItemAdded)
		    {
		        // Set foreign key value
		        colInsumosPedidosLineas[e.NewIndex].Pedido = Codigo;
		    }
		}
				
		private DalDeposito.InsumosRemitosPedidosLineaCollection colInsumosRemitosPedidosLineas;
		public DalDeposito.InsumosRemitosPedidosLineaCollection InsumosRemitosPedidosLineas
		{
			get
			{
				if(colInsumosRemitosPedidosLineas == null)
				{
					colInsumosRemitosPedidosLineas = new DalDeposito.InsumosRemitosPedidosLineaCollection().Where(InsumosRemitosPedidosLinea.Columns.Pedido, Codigo).Load();
					colInsumosRemitosPedidosLineas.ListChanged += new ListChangedEventHandler(colInsumosRemitosPedidosLineas_ListChanged);
				}
				return colInsumosRemitosPedidosLineas;			
			}
			set 
			{ 
					colInsumosRemitosPedidosLineas = value; 
					colInsumosRemitosPedidosLineas.ListChanged += new ListChangedEventHandler(colInsumosRemitosPedidosLineas_ListChanged);
			}
		}
		
		void colInsumosRemitosPedidosLineas_ListChanged(object sender, ListChangedEventArgs e)
		{
		    if (e.ListChangedType == ListChangedType.ItemAdded)
		    {
		        // Set foreign key value
		        colInsumosRemitosPedidosLineas[e.NewIndex].Pedido = Codigo;
		    }
		}
		
		#endregion
		
			
		
		#region ForeignKey Properties
		
		/// <summary>
		/// Returns a InsumosPedidosAgente ActiveRecord object related to this InsumosPedido
		/// 
		/// </summary>
		public DalDeposito.InsumosPedidosAgente InsumosPedidosAgente
		{
			get { return DalDeposito.InsumosPedidosAgente.FetchByID(this.Agente); }
			set { SetColumnValue("Agente", value.Codigo); }
		}
		
		
		#endregion
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(int varCodigo,byte varSistema,DateTime varFecha,int varTipo,int varAgente,int? varRubroPrimerNivel,string varResponsable,string varObservaciones,bool varNoControlarConsumo,int varEstado,DateTime? varFechaProcesado,int varDestinatario,bool varAutorizado,int? varAutorizadoPor,DateTime? varFechaAutorizacion,int? varAprobadoPor,DateTime? varFechaAprobacion,DateTime? varFechaDespacho)
		{
			InsumosPedido item = new InsumosPedido();
			
			item.Codigo = varCodigo;
			
			item.Sistema = varSistema;
			
			item.Fecha = varFecha;
			
			item.Tipo = varTipo;
			
			item.Agente = varAgente;
			
			item.RubroPrimerNivel = varRubroPrimerNivel;
			
			item.Responsable = varResponsable;
			
			item.Observaciones = varObservaciones;
			
			item.NoControlarConsumo = varNoControlarConsumo;
			
			item.Estado = varEstado;
			
			item.FechaProcesado = varFechaProcesado;
			
			item.Destinatario = varDestinatario;
			
			item.Autorizado = varAutorizado;
			
			item.AutorizadoPor = varAutorizadoPor;
			
			item.FechaAutorizacion = varFechaAutorizacion;
			
			item.AprobadoPor = varAprobadoPor;
			
			item.FechaAprobacion = varFechaAprobacion;
			
			item.FechaDespacho = varFechaDespacho;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varCodigo,byte varSistema,DateTime varFecha,int varTipo,int varAgente,int? varRubroPrimerNivel,string varResponsable,string varObservaciones,bool varNoControlarConsumo,int varEstado,DateTime? varFechaProcesado,int varDestinatario,bool varAutorizado,int? varAutorizadoPor,DateTime? varFechaAutorizacion,int? varAprobadoPor,DateTime? varFechaAprobacion,DateTime? varFechaDespacho)
		{
			InsumosPedido item = new InsumosPedido();
			
				item.Codigo = varCodigo;
			
				item.Sistema = varSistema;
			
				item.Fecha = varFecha;
			
				item.Tipo = varTipo;
			
				item.Agente = varAgente;
			
				item.RubroPrimerNivel = varRubroPrimerNivel;
			
				item.Responsable = varResponsable;
			
				item.Observaciones = varObservaciones;
			
				item.NoControlarConsumo = varNoControlarConsumo;
			
				item.Estado = varEstado;
			
				item.FechaProcesado = varFechaProcesado;
			
				item.Destinatario = varDestinatario;
			
				item.Autorizado = varAutorizado;
			
				item.AutorizadoPor = varAutorizadoPor;
			
				item.FechaAutorizacion = varFechaAutorizacion;
			
				item.AprobadoPor = varAprobadoPor;
			
				item.FechaAprobacion = varFechaAprobacion;
			
				item.FechaDespacho = varFechaDespacho;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn CodigoColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn SistemaColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn FechaColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn TipoColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn AgenteColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn RubroPrimerNivelColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn ResponsableColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn ObservacionesColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn NoControlarConsumoColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn EstadoColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn FechaProcesadoColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn DestinatarioColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn AutorizadoColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn AutorizadoPorColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn FechaAutorizacionColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn AprobadoPorColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn FechaAprobacionColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn FechaDespachoColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Codigo = @"Codigo";
			 public static string Sistema = @"Sistema";
			 public static string Fecha = @"Fecha";
			 public static string Tipo = @"Tipo";
			 public static string Agente = @"Agente";
			 public static string RubroPrimerNivel = @"RubroPrimerNivel";
			 public static string Responsable = @"Responsable";
			 public static string Observaciones = @"Observaciones";
			 public static string NoControlarConsumo = @"NoControlarConsumo";
			 public static string Estado = @"Estado";
			 public static string FechaProcesado = @"Fecha_Procesado";
			 public static string Destinatario = @"Destinatario";
			 public static string Autorizado = @"Autorizado";
			 public static string AutorizadoPor = @"AutorizadoPor";
			 public static string FechaAutorizacion = @"FechaAutorizacion";
			 public static string AprobadoPor = @"AprobadoPor";
			 public static string FechaAprobacion = @"FechaAprobacion";
			 public static string FechaDespacho = @"Fecha_Despacho";
						
		}
		#endregion
		
		#region Update PK Collections
		
        public void SetPKValues()
        {
                if (colInsumosPedidosAutorizaciones != null)
                {
                    foreach (DalDeposito.InsumosPedidosAutorizacione item in colInsumosPedidosAutorizaciones)
                    {
                        if (item.Pedido != Codigo)
                        {
                            item.Pedido = Codigo;
                        }
                    }
               }
		
                if (colInsumosPedidosBitacoraRecords != null)
                {
                    foreach (DalDeposito.InsumosPedidosBitacora item in colInsumosPedidosBitacoraRecords)
                    {
                        if (item.Pedido != Codigo)
                        {
                            item.Pedido = Codigo;
                        }
                    }
               }
		
                if (colInsumosPedidosDeudas != null)
                {
                    foreach (DalDeposito.InsumosPedidosDeuda item in colInsumosPedidosDeudas)
                    {
                        if (item.Pedido != Codigo)
                        {
                            item.Pedido = Codigo;
                        }
                    }
               }
		
                if (colInsumosPedidosLineas != null)
                {
                    foreach (DalDeposito.InsumosPedidosLinea item in colInsumosPedidosLineas)
                    {
                        if (item.Pedido != Codigo)
                        {
                            item.Pedido = Codigo;
                        }
                    }
               }
		
                if (colInsumosRemitosPedidosLineas != null)
                {
                    foreach (DalDeposito.InsumosRemitosPedidosLinea item in colInsumosRemitosPedidosLineas)
                    {
                        if (item.Pedido != Codigo)
                        {
                            item.Pedido = Codigo;
                        }
                    }
               }
		}
        #endregion
    
        #region Deep Save
		
        public void DeepSave()
        {
            Save();
            
                if (colInsumosPedidosAutorizaciones != null)
                {
                    colInsumosPedidosAutorizaciones.SaveAll();
               }
		
                if (colInsumosPedidosBitacoraRecords != null)
                {
                    colInsumosPedidosBitacoraRecords.SaveAll();
               }
		
                if (colInsumosPedidosDeudas != null)
                {
                    colInsumosPedidosDeudas.SaveAll();
               }
		
                if (colInsumosPedidosLineas != null)
                {
                    colInsumosPedidosLineas.SaveAll();
               }
		
                if (colInsumosRemitosPedidosLineas != null)
                {
                    colInsumosRemitosPedidosLineas.SaveAll();
               }
		}
        #endregion
	}
}
