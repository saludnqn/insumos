using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DalDeposito
{
	/// <summary>
	/// Strongly-typed collection for the InsumosPedidosLinea class.
	/// </summary>
    [Serializable]
	public partial class InsumosPedidosLineaCollection : ActiveList<InsumosPedidosLinea, InsumosPedidosLineaCollection>
	{	   
		public InsumosPedidosLineaCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>InsumosPedidosLineaCollection</returns>
		public InsumosPedidosLineaCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                InsumosPedidosLinea o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the Insumos_Pedidos_Lineas table.
	/// </summary>
	[Serializable]
	public partial class InsumosPedidosLinea : ActiveRecord<InsumosPedidosLinea>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public InsumosPedidosLinea()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public InsumosPedidosLinea(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public InsumosPedidosLinea(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public InsumosPedidosLinea(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("Insumos_Pedidos_Lineas", TableType.Table, DataService.GetInstance("depProvider"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarPedido = new TableSchema.TableColumn(schema);
				colvarPedido.ColumnName = "Pedido";
				colvarPedido.DataType = DbType.Int32;
				colvarPedido.MaxLength = 0;
				colvarPedido.AutoIncrement = false;
				colvarPedido.IsNullable = false;
				colvarPedido.IsPrimaryKey = false;
				colvarPedido.IsForeignKey = true;
				colvarPedido.IsReadOnly = false;
				colvarPedido.DefaultSetting = @"";
				
					colvarPedido.ForeignKeyTableName = "Insumos_Pedidos";
				schema.Columns.Add(colvarPedido);
				
				TableSchema.TableColumn colvarCodigo = new TableSchema.TableColumn(schema);
				colvarCodigo.ColumnName = "Codigo";
				colvarCodigo.DataType = DbType.Int32;
				colvarCodigo.MaxLength = 0;
				colvarCodigo.AutoIncrement = true;
				colvarCodigo.IsNullable = false;
				colvarCodigo.IsPrimaryKey = true;
				colvarCodigo.IsForeignKey = false;
				colvarCodigo.IsReadOnly = false;
				colvarCodigo.DefaultSetting = @"";
				colvarCodigo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCodigo);
				
				TableSchema.TableColumn colvarInsumo = new TableSchema.TableColumn(schema);
				colvarInsumo.ColumnName = "Insumo";
				colvarInsumo.DataType = DbType.Int32;
				colvarInsumo.MaxLength = 0;
				colvarInsumo.AutoIncrement = false;
				colvarInsumo.IsNullable = false;
				colvarInsumo.IsPrimaryKey = false;
				colvarInsumo.IsForeignKey = true;
				colvarInsumo.IsReadOnly = false;
				colvarInsumo.DefaultSetting = @"";
				
					colvarInsumo.ForeignKeyTableName = "Insumos";
				schema.Columns.Add(colvarInsumo);
				
				TableSchema.TableColumn colvarCantidad = new TableSchema.TableColumn(schema);
				colvarCantidad.ColumnName = "Cantidad";
				colvarCantidad.DataType = DbType.Int32;
				colvarCantidad.MaxLength = 0;
				colvarCantidad.AutoIncrement = false;
				colvarCantidad.IsNullable = false;
				colvarCantidad.IsPrimaryKey = false;
				colvarCantidad.IsForeignKey = false;
				colvarCantidad.IsReadOnly = false;
				colvarCantidad.DefaultSetting = @"";
				colvarCantidad.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCantidad);
				
				TableSchema.TableColumn colvarCantidadOriginal = new TableSchema.TableColumn(schema);
				colvarCantidadOriginal.ColumnName = "Cantidad_Original";
				colvarCantidadOriginal.DataType = DbType.Int32;
				colvarCantidadOriginal.MaxLength = 0;
				colvarCantidadOriginal.AutoIncrement = false;
				colvarCantidadOriginal.IsNullable = true;
				colvarCantidadOriginal.IsPrimaryKey = false;
				colvarCantidadOriginal.IsForeignKey = false;
				colvarCantidadOriginal.IsReadOnly = false;
				colvarCantidadOriginal.DefaultSetting = @"";
				colvarCantidadOriginal.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCantidadOriginal);
				
				TableSchema.TableColumn colvarCantidadEntregada = new TableSchema.TableColumn(schema);
				colvarCantidadEntregada.ColumnName = "Cantidad_Entregada";
				colvarCantidadEntregada.DataType = DbType.Int32;
				colvarCantidadEntregada.MaxLength = 0;
				colvarCantidadEntregada.AutoIncrement = false;
				colvarCantidadEntregada.IsNullable = true;
				colvarCantidadEntregada.IsPrimaryKey = false;
				colvarCantidadEntregada.IsForeignKey = false;
				colvarCantidadEntregada.IsReadOnly = false;
				colvarCantidadEntregada.DefaultSetting = @"";
				colvarCantidadEntregada.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCantidadEntregada);
				
				TableSchema.TableColumn colvarCantidadEntregadaReal = new TableSchema.TableColumn(schema);
				colvarCantidadEntregadaReal.ColumnName = "Cantidad_Entregada_Real";
				colvarCantidadEntregadaReal.DataType = DbType.Int32;
				colvarCantidadEntregadaReal.MaxLength = 0;
				colvarCantidadEntregadaReal.AutoIncrement = false;
				colvarCantidadEntregadaReal.IsNullable = false;
				colvarCantidadEntregadaReal.IsPrimaryKey = false;
				colvarCantidadEntregadaReal.IsForeignKey = false;
				colvarCantidadEntregadaReal.IsReadOnly = false;
				
						colvarCantidadEntregadaReal.DefaultSetting = @"((0))";
				colvarCantidadEntregadaReal.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCantidadEntregadaReal);
				
				TableSchema.TableColumn colvarInsumoReemplazo = new TableSchema.TableColumn(schema);
				colvarInsumoReemplazo.ColumnName = "Insumo_Reemplazo";
				colvarInsumoReemplazo.DataType = DbType.Int32;
				colvarInsumoReemplazo.MaxLength = 0;
				colvarInsumoReemplazo.AutoIncrement = false;
				colvarInsumoReemplazo.IsNullable = true;
				colvarInsumoReemplazo.IsPrimaryKey = false;
				colvarInsumoReemplazo.IsForeignKey = true;
				colvarInsumoReemplazo.IsReadOnly = false;
				colvarInsumoReemplazo.DefaultSetting = @"";
				
					colvarInsumoReemplazo.ForeignKeyTableName = "Insumos";
				schema.Columns.Add(colvarInsumoReemplazo);
				
				TableSchema.TableColumn colvarObservaciones = new TableSchema.TableColumn(schema);
				colvarObservaciones.ColumnName = "Observaciones";
				colvarObservaciones.DataType = DbType.AnsiString;
				colvarObservaciones.MaxLength = 500;
				colvarObservaciones.AutoIncrement = false;
				colvarObservaciones.IsNullable = true;
				colvarObservaciones.IsPrimaryKey = false;
				colvarObservaciones.IsForeignKey = false;
				colvarObservaciones.IsReadOnly = false;
				colvarObservaciones.DefaultSetting = @"";
				colvarObservaciones.ForeignKeyTableName = "";
				schema.Columns.Add(colvarObservaciones);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["depProvider"].AddSchema("Insumos_Pedidos_Lineas",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Pedido")]
		[Bindable(true)]
		public int Pedido 
		{
			get { return GetColumnValue<int>(Columns.Pedido); }
			set { SetColumnValue(Columns.Pedido, value); }
		}
		  
		[XmlAttribute("Codigo")]
		[Bindable(true)]
		public int Codigo 
		{
			get { return GetColumnValue<int>(Columns.Codigo); }
			set { SetColumnValue(Columns.Codigo, value); }
		}
		  
		[XmlAttribute("Insumo")]
		[Bindable(true)]
		public int Insumo 
		{
			get { return GetColumnValue<int>(Columns.Insumo); }
			set { SetColumnValue(Columns.Insumo, value); }
		}
		  
		[XmlAttribute("Cantidad")]
		[Bindable(true)]
		public int Cantidad 
		{
			get { return GetColumnValue<int>(Columns.Cantidad); }
			set { SetColumnValue(Columns.Cantidad, value); }
		}
		  
		[XmlAttribute("CantidadOriginal")]
		[Bindable(true)]
		public int? CantidadOriginal 
		{
			get { return GetColumnValue<int?>(Columns.CantidadOriginal); }
			set { SetColumnValue(Columns.CantidadOriginal, value); }
		}
		  
		[XmlAttribute("CantidadEntregada")]
		[Bindable(true)]
		public int? CantidadEntregada 
		{
			get { return GetColumnValue<int?>(Columns.CantidadEntregada); }
			set { SetColumnValue(Columns.CantidadEntregada, value); }
		}
		  
		[XmlAttribute("CantidadEntregadaReal")]
		[Bindable(true)]
		public int CantidadEntregadaReal 
		{
			get { return GetColumnValue<int>(Columns.CantidadEntregadaReal); }
			set { SetColumnValue(Columns.CantidadEntregadaReal, value); }
		}
		  
		[XmlAttribute("InsumoReemplazo")]
		[Bindable(true)]
		public int? InsumoReemplazo 
		{
			get { return GetColumnValue<int?>(Columns.InsumoReemplazo); }
			set { SetColumnValue(Columns.InsumoReemplazo, value); }
		}
		  
		[XmlAttribute("Observaciones")]
		[Bindable(true)]
		public string Observaciones 
		{
			get { return GetColumnValue<string>(Columns.Observaciones); }
			set { SetColumnValue(Columns.Observaciones, value); }
		}
		
		#endregion
		
		
			
		
		#region ForeignKey Properties
		
		/// <summary>
		/// Returns a Insumo ActiveRecord object related to this InsumosPedidosLinea
		/// 
		/// </summary>
		public DalDeposito.Insumo InsumoRecord
		{
			get { return DalDeposito.Insumo.FetchByID(this.Insumo); }
			set { SetColumnValue("Insumo", value.Codigo); }
		}
		
		
		/// <summary>
		/// Returns a InsumosPedido ActiveRecord object related to this InsumosPedidosLinea
		/// 
		/// </summary>
		public DalDeposito.InsumosPedido InsumosPedido
		{
			get { return DalDeposito.InsumosPedido.FetchByID(this.Pedido); }
			set { SetColumnValue("Pedido", value.Codigo); }
		}
		
		
		/// <summary>
		/// Returns a Insumo ActiveRecord object related to this InsumosPedidosLinea
		/// 
		/// </summary>
		public DalDeposito.Insumo InsumoToInsumoReemplazo
		{
			get { return DalDeposito.Insumo.FetchByID(this.InsumoReemplazo); }
			set { SetColumnValue("Insumo_Reemplazo", value.Codigo); }
		}
		
		
		#endregion
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(int varPedido,int varInsumo,int varCantidad,int? varCantidadOriginal,int? varCantidadEntregada,int varCantidadEntregadaReal,int? varInsumoReemplazo,string varObservaciones)
		{
			InsumosPedidosLinea item = new InsumosPedidosLinea();
			
			item.Pedido = varPedido;
			
			item.Insumo = varInsumo;
			
			item.Cantidad = varCantidad;
			
			item.CantidadOriginal = varCantidadOriginal;
			
			item.CantidadEntregada = varCantidadEntregada;
			
			item.CantidadEntregadaReal = varCantidadEntregadaReal;
			
			item.InsumoReemplazo = varInsumoReemplazo;
			
			item.Observaciones = varObservaciones;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varPedido,int varCodigo,int varInsumo,int varCantidad,int? varCantidadOriginal,int? varCantidadEntregada,int varCantidadEntregadaReal,int? varInsumoReemplazo,string varObservaciones)
		{
			InsumosPedidosLinea item = new InsumosPedidosLinea();
			
				item.Pedido = varPedido;
			
				item.Codigo = varCodigo;
			
				item.Insumo = varInsumo;
			
				item.Cantidad = varCantidad;
			
				item.CantidadOriginal = varCantidadOriginal;
			
				item.CantidadEntregada = varCantidadEntregada;
			
				item.CantidadEntregadaReal = varCantidadEntregadaReal;
			
				item.InsumoReemplazo = varInsumoReemplazo;
			
				item.Observaciones = varObservaciones;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn PedidoColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn CodigoColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn InsumoColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn CantidadColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn CantidadOriginalColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn CantidadEntregadaColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn CantidadEntregadaRealColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn InsumoReemplazoColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn ObservacionesColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Pedido = @"Pedido";
			 public static string Codigo = @"Codigo";
			 public static string Insumo = @"Insumo";
			 public static string Cantidad = @"Cantidad";
			 public static string CantidadOriginal = @"Cantidad_Original";
			 public static string CantidadEntregada = @"Cantidad_Entregada";
			 public static string CantidadEntregadaReal = @"Cantidad_Entregada_Real";
			 public static string InsumoReemplazo = @"Insumo_Reemplazo";
			 public static string Observaciones = @"Observaciones";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
