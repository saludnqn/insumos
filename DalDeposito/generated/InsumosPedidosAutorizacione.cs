using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DalDeposito
{
	/// <summary>
	/// Strongly-typed collection for the InsumosPedidosAutorizacione class.
	/// </summary>
    [Serializable]
	public partial class InsumosPedidosAutorizacioneCollection : ActiveList<InsumosPedidosAutorizacione, InsumosPedidosAutorizacioneCollection>
	{	   
		public InsumosPedidosAutorizacioneCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>InsumosPedidosAutorizacioneCollection</returns>
		public InsumosPedidosAutorizacioneCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                InsumosPedidosAutorizacione o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the Insumos_Pedidos_Autorizaciones table.
	/// </summary>
	[Serializable]
	public partial class InsumosPedidosAutorizacione : ActiveRecord<InsumosPedidosAutorizacione>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public InsumosPedidosAutorizacione()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public InsumosPedidosAutorizacione(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public InsumosPedidosAutorizacione(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public InsumosPedidosAutorizacione(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("Insumos_Pedidos_Autorizaciones", TableType.Table, DataService.GetInstance("depProvider"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarPedido = new TableSchema.TableColumn(schema);
				colvarPedido.ColumnName = "Pedido";
				colvarPedido.DataType = DbType.Int32;
				colvarPedido.MaxLength = 0;
				colvarPedido.AutoIncrement = false;
				colvarPedido.IsNullable = false;
				colvarPedido.IsPrimaryKey = false;
				colvarPedido.IsForeignKey = true;
				colvarPedido.IsReadOnly = false;
				colvarPedido.DefaultSetting = @"";
				
					colvarPedido.ForeignKeyTableName = "Insumos_Pedidos";
				schema.Columns.Add(colvarPedido);
				
				TableSchema.TableColumn colvarCodigo = new TableSchema.TableColumn(schema);
				colvarCodigo.ColumnName = "Codigo";
				colvarCodigo.DataType = DbType.Int32;
				colvarCodigo.MaxLength = 0;
				colvarCodigo.AutoIncrement = true;
				colvarCodigo.IsNullable = false;
				colvarCodigo.IsPrimaryKey = true;
				colvarCodigo.IsForeignKey = false;
				colvarCodigo.IsReadOnly = false;
				colvarCodigo.DefaultSetting = @"";
				colvarCodigo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCodigo);
				
				TableSchema.TableColumn colvarFecha = new TableSchema.TableColumn(schema);
				colvarFecha.ColumnName = "Fecha";
				colvarFecha.DataType = DbType.DateTime;
				colvarFecha.MaxLength = 0;
				colvarFecha.AutoIncrement = false;
				colvarFecha.IsNullable = true;
				colvarFecha.IsPrimaryKey = false;
				colvarFecha.IsForeignKey = false;
				colvarFecha.IsReadOnly = false;
				colvarFecha.DefaultSetting = @"";
				colvarFecha.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFecha);
				
				TableSchema.TableColumn colvarInsumo = new TableSchema.TableColumn(schema);
				colvarInsumo.ColumnName = "Insumo";
				colvarInsumo.DataType = DbType.Int32;
				colvarInsumo.MaxLength = 0;
				colvarInsumo.AutoIncrement = false;
				colvarInsumo.IsNullable = false;
				colvarInsumo.IsPrimaryKey = false;
				colvarInsumo.IsForeignKey = false;
				colvarInsumo.IsReadOnly = false;
				colvarInsumo.DefaultSetting = @"";
				colvarInsumo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarInsumo);
				
				TableSchema.TableColumn colvarCantidad = new TableSchema.TableColumn(schema);
				colvarCantidad.ColumnName = "Cantidad";
				colvarCantidad.DataType = DbType.Int32;
				colvarCantidad.MaxLength = 0;
				colvarCantidad.AutoIncrement = false;
				colvarCantidad.IsNullable = false;
				colvarCantidad.IsPrimaryKey = false;
				colvarCantidad.IsForeignKey = false;
				colvarCantidad.IsReadOnly = false;
				colvarCantidad.DefaultSetting = @"";
				colvarCantidad.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCantidad);
				
				TableSchema.TableColumn colvarEstado = new TableSchema.TableColumn(schema);
				colvarEstado.ColumnName = "Estado";
				colvarEstado.DataType = DbType.Int32;
				colvarEstado.MaxLength = 0;
				colvarEstado.AutoIncrement = false;
				colvarEstado.IsNullable = true;
				colvarEstado.IsPrimaryKey = false;
				colvarEstado.IsForeignKey = false;
				colvarEstado.IsReadOnly = false;
				colvarEstado.DefaultSetting = @"";
				colvarEstado.ForeignKeyTableName = "";
				schema.Columns.Add(colvarEstado);
				
				TableSchema.TableColumn colvarFechaAutorizacion = new TableSchema.TableColumn(schema);
				colvarFechaAutorizacion.ColumnName = "FechaAutorizacion";
				colvarFechaAutorizacion.DataType = DbType.DateTime;
				colvarFechaAutorizacion.MaxLength = 0;
				colvarFechaAutorizacion.AutoIncrement = false;
				colvarFechaAutorizacion.IsNullable = true;
				colvarFechaAutorizacion.IsPrimaryKey = false;
				colvarFechaAutorizacion.IsForeignKey = false;
				colvarFechaAutorizacion.IsReadOnly = false;
				colvarFechaAutorizacion.DefaultSetting = @"";
				colvarFechaAutorizacion.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFechaAutorizacion);
				
				TableSchema.TableColumn colvarAutoridad = new TableSchema.TableColumn(schema);
				colvarAutoridad.ColumnName = "Autoridad";
				colvarAutoridad.DataType = DbType.Int32;
				colvarAutoridad.MaxLength = 0;
				colvarAutoridad.AutoIncrement = false;
				colvarAutoridad.IsNullable = true;
				colvarAutoridad.IsPrimaryKey = false;
				colvarAutoridad.IsForeignKey = false;
				colvarAutoridad.IsReadOnly = false;
				colvarAutoridad.DefaultSetting = @"";
				colvarAutoridad.ForeignKeyTableName = "";
				schema.Columns.Add(colvarAutoridad);
				
				TableSchema.TableColumn colvarNuevoPedido = new TableSchema.TableColumn(schema);
				colvarNuevoPedido.ColumnName = "NuevoPedido";
				colvarNuevoPedido.DataType = DbType.Int32;
				colvarNuevoPedido.MaxLength = 0;
				colvarNuevoPedido.AutoIncrement = false;
				colvarNuevoPedido.IsNullable = true;
				colvarNuevoPedido.IsPrimaryKey = false;
				colvarNuevoPedido.IsForeignKey = false;
				colvarNuevoPedido.IsReadOnly = false;
				colvarNuevoPedido.DefaultSetting = @"";
				colvarNuevoPedido.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNuevoPedido);
				
				TableSchema.TableColumn colvarObservaciones = new TableSchema.TableColumn(schema);
				colvarObservaciones.ColumnName = "Observaciones";
				colvarObservaciones.DataType = DbType.AnsiString;
				colvarObservaciones.MaxLength = 200;
				colvarObservaciones.AutoIncrement = false;
				colvarObservaciones.IsNullable = true;
				colvarObservaciones.IsPrimaryKey = false;
				colvarObservaciones.IsForeignKey = false;
				colvarObservaciones.IsReadOnly = false;
				colvarObservaciones.DefaultSetting = @"";
				colvarObservaciones.ForeignKeyTableName = "";
				schema.Columns.Add(colvarObservaciones);
				
				TableSchema.TableColumn colvarDenegada = new TableSchema.TableColumn(schema);
				colvarDenegada.ColumnName = "Denegada";
				colvarDenegada.DataType = DbType.Boolean;
				colvarDenegada.MaxLength = 0;
				colvarDenegada.AutoIncrement = false;
				colvarDenegada.IsNullable = false;
				colvarDenegada.IsPrimaryKey = false;
				colvarDenegada.IsForeignKey = false;
				colvarDenegada.IsReadOnly = false;
				
						colvarDenegada.DefaultSetting = @"((0))";
				colvarDenegada.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDenegada);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["depProvider"].AddSchema("Insumos_Pedidos_Autorizaciones",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Pedido")]
		[Bindable(true)]
		public int Pedido 
		{
			get { return GetColumnValue<int>(Columns.Pedido); }
			set { SetColumnValue(Columns.Pedido, value); }
		}
		  
		[XmlAttribute("Codigo")]
		[Bindable(true)]
		public int Codigo 
		{
			get { return GetColumnValue<int>(Columns.Codigo); }
			set { SetColumnValue(Columns.Codigo, value); }
		}
		  
		[XmlAttribute("Fecha")]
		[Bindable(true)]
		public DateTime? Fecha 
		{
			get { return GetColumnValue<DateTime?>(Columns.Fecha); }
			set { SetColumnValue(Columns.Fecha, value); }
		}
		  
		[XmlAttribute("Insumo")]
		[Bindable(true)]
		public int Insumo 
		{
			get { return GetColumnValue<int>(Columns.Insumo); }
			set { SetColumnValue(Columns.Insumo, value); }
		}
		  
		[XmlAttribute("Cantidad")]
		[Bindable(true)]
		public int Cantidad 
		{
			get { return GetColumnValue<int>(Columns.Cantidad); }
			set { SetColumnValue(Columns.Cantidad, value); }
		}
		  
		[XmlAttribute("Estado")]
		[Bindable(true)]
		public int? Estado 
		{
			get { return GetColumnValue<int?>(Columns.Estado); }
			set { SetColumnValue(Columns.Estado, value); }
		}
		  
		[XmlAttribute("FechaAutorizacion")]
		[Bindable(true)]
		public DateTime? FechaAutorizacion 
		{
			get { return GetColumnValue<DateTime?>(Columns.FechaAutorizacion); }
			set { SetColumnValue(Columns.FechaAutorizacion, value); }
		}
		  
		[XmlAttribute("Autoridad")]
		[Bindable(true)]
		public int? Autoridad 
		{
			get { return GetColumnValue<int?>(Columns.Autoridad); }
			set { SetColumnValue(Columns.Autoridad, value); }
		}
		  
		[XmlAttribute("NuevoPedido")]
		[Bindable(true)]
		public int? NuevoPedido 
		{
			get { return GetColumnValue<int?>(Columns.NuevoPedido); }
			set { SetColumnValue(Columns.NuevoPedido, value); }
		}
		  
		[XmlAttribute("Observaciones")]
		[Bindable(true)]
		public string Observaciones 
		{
			get { return GetColumnValue<string>(Columns.Observaciones); }
			set { SetColumnValue(Columns.Observaciones, value); }
		}
		  
		[XmlAttribute("Denegada")]
		[Bindable(true)]
		public bool Denegada 
		{
			get { return GetColumnValue<bool>(Columns.Denegada); }
			set { SetColumnValue(Columns.Denegada, value); }
		}
		
		#endregion
		
		
			
		
		#region ForeignKey Properties
		
		/// <summary>
		/// Returns a InsumosPedido ActiveRecord object related to this InsumosPedidosAutorizacione
		/// 
		/// </summary>
		public DalDeposito.InsumosPedido InsumosPedido
		{
			get { return DalDeposito.InsumosPedido.FetchByID(this.Pedido); }
			set { SetColumnValue("Pedido", value.Codigo); }
		}
		
		
		#endregion
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(int varPedido,DateTime? varFecha,int varInsumo,int varCantidad,int? varEstado,DateTime? varFechaAutorizacion,int? varAutoridad,int? varNuevoPedido,string varObservaciones,bool varDenegada)
		{
			InsumosPedidosAutorizacione item = new InsumosPedidosAutorizacione();
			
			item.Pedido = varPedido;
			
			item.Fecha = varFecha;
			
			item.Insumo = varInsumo;
			
			item.Cantidad = varCantidad;
			
			item.Estado = varEstado;
			
			item.FechaAutorizacion = varFechaAutorizacion;
			
			item.Autoridad = varAutoridad;
			
			item.NuevoPedido = varNuevoPedido;
			
			item.Observaciones = varObservaciones;
			
			item.Denegada = varDenegada;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varPedido,int varCodigo,DateTime? varFecha,int varInsumo,int varCantidad,int? varEstado,DateTime? varFechaAutorizacion,int? varAutoridad,int? varNuevoPedido,string varObservaciones,bool varDenegada)
		{
			InsumosPedidosAutorizacione item = new InsumosPedidosAutorizacione();
			
				item.Pedido = varPedido;
			
				item.Codigo = varCodigo;
			
				item.Fecha = varFecha;
			
				item.Insumo = varInsumo;
			
				item.Cantidad = varCantidad;
			
				item.Estado = varEstado;
			
				item.FechaAutorizacion = varFechaAutorizacion;
			
				item.Autoridad = varAutoridad;
			
				item.NuevoPedido = varNuevoPedido;
			
				item.Observaciones = varObservaciones;
			
				item.Denegada = varDenegada;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn PedidoColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn CodigoColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn FechaColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn InsumoColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn CantidadColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn EstadoColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn FechaAutorizacionColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn AutoridadColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn NuevoPedidoColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn ObservacionesColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn DenegadaColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Pedido = @"Pedido";
			 public static string Codigo = @"Codigo";
			 public static string Fecha = @"Fecha";
			 public static string Insumo = @"Insumo";
			 public static string Cantidad = @"Cantidad";
			 public static string Estado = @"Estado";
			 public static string FechaAutorizacion = @"FechaAutorizacion";
			 public static string Autoridad = @"Autoridad";
			 public static string NuevoPedido = @"NuevoPedido";
			 public static string Observaciones = @"Observaciones";
			 public static string Denegada = @"Denegada";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
