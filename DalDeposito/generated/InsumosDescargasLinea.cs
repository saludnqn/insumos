using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DalDeposito
{
	/// <summary>
	/// Strongly-typed collection for the InsumosDescargasLinea class.
	/// </summary>
    [Serializable]
	public partial class InsumosDescargasLineaCollection : ActiveList<InsumosDescargasLinea, InsumosDescargasLineaCollection>
	{	   
		public InsumosDescargasLineaCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>InsumosDescargasLineaCollection</returns>
		public InsumosDescargasLineaCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                InsumosDescargasLinea o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the Insumos_Descargas_Lineas table.
	/// </summary>
	[Serializable]
	public partial class InsumosDescargasLinea : ActiveRecord<InsumosDescargasLinea>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public InsumosDescargasLinea()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public InsumosDescargasLinea(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public InsumosDescargasLinea(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public InsumosDescargasLinea(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("Insumos_Descargas_Lineas", TableType.Table, DataService.GetInstance("depProvider"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarDescarga = new TableSchema.TableColumn(schema);
				colvarDescarga.ColumnName = "Descarga";
				colvarDescarga.DataType = DbType.Int32;
				colvarDescarga.MaxLength = 0;
				colvarDescarga.AutoIncrement = false;
				colvarDescarga.IsNullable = false;
				colvarDescarga.IsPrimaryKey = false;
				colvarDescarga.IsForeignKey = true;
				colvarDescarga.IsReadOnly = false;
				colvarDescarga.DefaultSetting = @"";
				
					colvarDescarga.ForeignKeyTableName = "Insumos_Descargas";
				schema.Columns.Add(colvarDescarga);
				
				TableSchema.TableColumn colvarCodigo = new TableSchema.TableColumn(schema);
				colvarCodigo.ColumnName = "Codigo";
				colvarCodigo.DataType = DbType.Int32;
				colvarCodigo.MaxLength = 0;
				colvarCodigo.AutoIncrement = true;
				colvarCodigo.IsNullable = false;
				colvarCodigo.IsPrimaryKey = true;
				colvarCodigo.IsForeignKey = false;
				colvarCodigo.IsReadOnly = false;
				colvarCodigo.DefaultSetting = @"";
				colvarCodigo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCodigo);
				
				TableSchema.TableColumn colvarInsumo = new TableSchema.TableColumn(schema);
				colvarInsumo.ColumnName = "Insumo";
				colvarInsumo.DataType = DbType.Int32;
				colvarInsumo.MaxLength = 0;
				colvarInsumo.AutoIncrement = false;
				colvarInsumo.IsNullable = false;
				colvarInsumo.IsPrimaryKey = false;
				colvarInsumo.IsForeignKey = true;
				colvarInsumo.IsReadOnly = false;
				colvarInsumo.DefaultSetting = @"";
				
					colvarInsumo.ForeignKeyTableName = "Insumos";
				schema.Columns.Add(colvarInsumo);
				
				TableSchema.TableColumn colvarCantidad = new TableSchema.TableColumn(schema);
				colvarCantidad.ColumnName = "Cantidad";
				colvarCantidad.DataType = DbType.Int32;
				colvarCantidad.MaxLength = 0;
				colvarCantidad.AutoIncrement = false;
				colvarCantidad.IsNullable = false;
				colvarCantidad.IsPrimaryKey = false;
				colvarCantidad.IsForeignKey = false;
				colvarCantidad.IsReadOnly = false;
				colvarCantidad.DefaultSetting = @"";
				colvarCantidad.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCantidad);
				
				TableSchema.TableColumn colvarCantidadSolicitada = new TableSchema.TableColumn(schema);
				colvarCantidadSolicitada.ColumnName = "CantidadSolicitada";
				colvarCantidadSolicitada.DataType = DbType.Int32;
				colvarCantidadSolicitada.MaxLength = 0;
				colvarCantidadSolicitada.AutoIncrement = false;
				colvarCantidadSolicitada.IsNullable = false;
				colvarCantidadSolicitada.IsPrimaryKey = false;
				colvarCantidadSolicitada.IsForeignKey = false;
				colvarCantidadSolicitada.IsReadOnly = false;
				colvarCantidadSolicitada.DefaultSetting = @"";
				colvarCantidadSolicitada.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCantidadSolicitada);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["depProvider"].AddSchema("Insumos_Descargas_Lineas",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Descarga")]
		[Bindable(true)]
		public int Descarga 
		{
			get { return GetColumnValue<int>(Columns.Descarga); }
			set { SetColumnValue(Columns.Descarga, value); }
		}
		  
		[XmlAttribute("Codigo")]
		[Bindable(true)]
		public int Codigo 
		{
			get { return GetColumnValue<int>(Columns.Codigo); }
			set { SetColumnValue(Columns.Codigo, value); }
		}
		  
		[XmlAttribute("Insumo")]
		[Bindable(true)]
		public int Insumo 
		{
			get { return GetColumnValue<int>(Columns.Insumo); }
			set { SetColumnValue(Columns.Insumo, value); }
		}
		  
		[XmlAttribute("Cantidad")]
		[Bindable(true)]
		public int Cantidad 
		{
			get { return GetColumnValue<int>(Columns.Cantidad); }
			set { SetColumnValue(Columns.Cantidad, value); }
		}
		  
		[XmlAttribute("CantidadSolicitada")]
		[Bindable(true)]
		public int CantidadSolicitada 
		{
			get { return GetColumnValue<int>(Columns.CantidadSolicitada); }
			set { SetColumnValue(Columns.CantidadSolicitada, value); }
		}
		
		#endregion
		
		
			
		
		#region ForeignKey Properties
		
		/// <summary>
		/// Returns a Insumo ActiveRecord object related to this InsumosDescargasLinea
		/// 
		/// </summary>
		public DalDeposito.Insumo InsumoRecord
		{
			get { return DalDeposito.Insumo.FetchByID(this.Insumo); }
			set { SetColumnValue("Insumo", value.Codigo); }
		}
		
		
		/// <summary>
		/// Returns a InsumosDescarga ActiveRecord object related to this InsumosDescargasLinea
		/// 
		/// </summary>
		public DalDeposito.InsumosDescarga InsumosDescarga
		{
			get { return DalDeposito.InsumosDescarga.FetchByID(this.Descarga); }
			set { SetColumnValue("Descarga", value.Codigo); }
		}
		
		
		#endregion
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(int varDescarga,int varInsumo,int varCantidad,int varCantidadSolicitada)
		{
			InsumosDescargasLinea item = new InsumosDescargasLinea();
			
			item.Descarga = varDescarga;
			
			item.Insumo = varInsumo;
			
			item.Cantidad = varCantidad;
			
			item.CantidadSolicitada = varCantidadSolicitada;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varDescarga,int varCodigo,int varInsumo,int varCantidad,int varCantidadSolicitada)
		{
			InsumosDescargasLinea item = new InsumosDescargasLinea();
			
				item.Descarga = varDescarga;
			
				item.Codigo = varCodigo;
			
				item.Insumo = varInsumo;
			
				item.Cantidad = varCantidad;
			
				item.CantidadSolicitada = varCantidadSolicitada;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn DescargaColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn CodigoColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn InsumoColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn CantidadColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn CantidadSolicitadaColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Descarga = @"Descarga";
			 public static string Codigo = @"Codigo";
			 public static string Insumo = @"Insumo";
			 public static string Cantidad = @"Cantidad";
			 public static string CantidadSolicitada = @"CantidadSolicitada";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
