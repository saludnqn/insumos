using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DalDeposito
{
	/// <summary>
	/// Strongly-typed collection for the InsumosProvisione class.
	/// </summary>
    [Serializable]
	public partial class InsumosProvisioneCollection : ActiveList<InsumosProvisione, InsumosProvisioneCollection>
	{	   
		public InsumosProvisioneCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>InsumosProvisioneCollection</returns>
		public InsumosProvisioneCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                InsumosProvisione o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the Insumos_Provisiones table.
	/// </summary>
	[Serializable]
	public partial class InsumosProvisione : ActiveRecord<InsumosProvisione>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public InsumosProvisione()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public InsumosProvisione(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public InsumosProvisione(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public InsumosProvisione(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("Insumos_Provisiones", TableType.Table, DataService.GetInstance("depProvider"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarCodigo = new TableSchema.TableColumn(schema);
				colvarCodigo.ColumnName = "Codigo";
				colvarCodigo.DataType = DbType.Int32;
				colvarCodigo.MaxLength = 0;
				colvarCodigo.AutoIncrement = false;
				colvarCodigo.IsNullable = false;
				colvarCodigo.IsPrimaryKey = true;
				colvarCodigo.IsForeignKey = false;
				colvarCodigo.IsReadOnly = false;
				colvarCodigo.DefaultSetting = @"";
				colvarCodigo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCodigo);
				
				TableSchema.TableColumn colvarSistema = new TableSchema.TableColumn(schema);
				colvarSistema.ColumnName = "Sistema";
				colvarSistema.DataType = DbType.Byte;
				colvarSistema.MaxLength = 0;
				colvarSistema.AutoIncrement = false;
				colvarSistema.IsNullable = false;
				colvarSistema.IsPrimaryKey = false;
				colvarSistema.IsForeignKey = false;
				colvarSistema.IsReadOnly = false;
				
						colvarSistema.DefaultSetting = @"(1)";
				colvarSistema.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSistema);
				
				TableSchema.TableColumn colvarFecha = new TableSchema.TableColumn(schema);
				colvarFecha.ColumnName = "Fecha";
				colvarFecha.DataType = DbType.DateTime;
				colvarFecha.MaxLength = 0;
				colvarFecha.AutoIncrement = false;
				colvarFecha.IsNullable = false;
				colvarFecha.IsPrimaryKey = false;
				colvarFecha.IsForeignKey = false;
				colvarFecha.IsReadOnly = false;
				colvarFecha.DefaultSetting = @"";
				colvarFecha.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFecha);
				
				TableSchema.TableColumn colvarTipo = new TableSchema.TableColumn(schema);
				colvarTipo.ColumnName = "Tipo";
				colvarTipo.DataType = DbType.Int32;
				colvarTipo.MaxLength = 0;
				colvarTipo.AutoIncrement = false;
				colvarTipo.IsNullable = false;
				colvarTipo.IsPrimaryKey = false;
				colvarTipo.IsForeignKey = false;
				colvarTipo.IsReadOnly = false;
				colvarTipo.DefaultSetting = @"";
				colvarTipo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarTipo);
				
				TableSchema.TableColumn colvarAgente = new TableSchema.TableColumn(schema);
				colvarAgente.ColumnName = "Agente";
				colvarAgente.DataType = DbType.Int32;
				colvarAgente.MaxLength = 0;
				colvarAgente.AutoIncrement = false;
				colvarAgente.IsNullable = false;
				colvarAgente.IsPrimaryKey = false;
				colvarAgente.IsForeignKey = true;
				colvarAgente.IsReadOnly = false;
				colvarAgente.DefaultSetting = @"";
				
					colvarAgente.ForeignKeyTableName = "Insumos_Provisiones_Agentes";
				schema.Columns.Add(colvarAgente);
				
				TableSchema.TableColumn colvarComprobanteTipo = new TableSchema.TableColumn(schema);
				colvarComprobanteTipo.ColumnName = "Comprobante_Tipo";
				colvarComprobanteTipo.DataType = DbType.AnsiString;
				colvarComprobanteTipo.MaxLength = 50;
				colvarComprobanteTipo.AutoIncrement = false;
				colvarComprobanteTipo.IsNullable = true;
				colvarComprobanteTipo.IsPrimaryKey = false;
				colvarComprobanteTipo.IsForeignKey = true;
				colvarComprobanteTipo.IsReadOnly = false;
				colvarComprobanteTipo.DefaultSetting = @"";
				
					colvarComprobanteTipo.ForeignKeyTableName = "Insumos_Tipos_Comprobantes";
				schema.Columns.Add(colvarComprobanteTipo);
				
				TableSchema.TableColumn colvarComprobanteNumero = new TableSchema.TableColumn(schema);
				colvarComprobanteNumero.ColumnName = "Comprobante_Numero";
				colvarComprobanteNumero.DataType = DbType.AnsiString;
				colvarComprobanteNumero.MaxLength = 50;
				colvarComprobanteNumero.AutoIncrement = false;
				colvarComprobanteNumero.IsNullable = true;
				colvarComprobanteNumero.IsPrimaryKey = false;
				colvarComprobanteNumero.IsForeignKey = false;
				colvarComprobanteNumero.IsReadOnly = false;
				colvarComprobanteNumero.DefaultSetting = @"";
				colvarComprobanteNumero.ForeignKeyTableName = "";
				schema.Columns.Add(colvarComprobanteNumero);
				
				TableSchema.TableColumn colvarOrdenCompra = new TableSchema.TableColumn(schema);
				colvarOrdenCompra.ColumnName = "ordenCompra";
				colvarOrdenCompra.DataType = DbType.AnsiString;
				colvarOrdenCompra.MaxLength = 50;
				colvarOrdenCompra.AutoIncrement = false;
				colvarOrdenCompra.IsNullable = true;
				colvarOrdenCompra.IsPrimaryKey = false;
				colvarOrdenCompra.IsForeignKey = false;
				colvarOrdenCompra.IsReadOnly = false;
				colvarOrdenCompra.DefaultSetting = @"";
				colvarOrdenCompra.ForeignKeyTableName = "";
				schema.Columns.Add(colvarOrdenCompra);
				
				TableSchema.TableColumn colvarObservaciones = new TableSchema.TableColumn(schema);
				colvarObservaciones.ColumnName = "Observaciones";
				colvarObservaciones.DataType = DbType.AnsiString;
				colvarObservaciones.MaxLength = 200;
				colvarObservaciones.AutoIncrement = false;
				colvarObservaciones.IsNullable = true;
				colvarObservaciones.IsPrimaryKey = false;
				colvarObservaciones.IsForeignKey = false;
				colvarObservaciones.IsReadOnly = false;
				colvarObservaciones.DefaultSetting = @"";
				colvarObservaciones.ForeignKeyTableName = "";
				schema.Columns.Add(colvarObservaciones);
				
				TableSchema.TableColumn colvarActivada = new TableSchema.TableColumn(schema);
				colvarActivada.ColumnName = "Activada";
				colvarActivada.DataType = DbType.Boolean;
				colvarActivada.MaxLength = 0;
				colvarActivada.AutoIncrement = false;
				colvarActivada.IsNullable = false;
				colvarActivada.IsPrimaryKey = false;
				colvarActivada.IsForeignKey = false;
				colvarActivada.IsReadOnly = false;
				
						colvarActivada.DefaultSetting = @"((1))";
				colvarActivada.ForeignKeyTableName = "";
				schema.Columns.Add(colvarActivada);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["depProvider"].AddSchema("Insumos_Provisiones",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Codigo")]
		[Bindable(true)]
		public int Codigo 
		{
			get { return GetColumnValue<int>(Columns.Codigo); }
			set { SetColumnValue(Columns.Codigo, value); }
		}
		  
		[XmlAttribute("Sistema")]
		[Bindable(true)]
		public byte Sistema 
		{
			get { return GetColumnValue<byte>(Columns.Sistema); }
			set { SetColumnValue(Columns.Sistema, value); }
		}
		  
		[XmlAttribute("Fecha")]
		[Bindable(true)]
		public DateTime Fecha 
		{
			get { return GetColumnValue<DateTime>(Columns.Fecha); }
			set { SetColumnValue(Columns.Fecha, value); }
		}
		  
		[XmlAttribute("Tipo")]
		[Bindable(true)]
		public int Tipo 
		{
			get { return GetColumnValue<int>(Columns.Tipo); }
			set { SetColumnValue(Columns.Tipo, value); }
		}
		  
		[XmlAttribute("Agente")]
		[Bindable(true)]
		public int Agente 
		{
			get { return GetColumnValue<int>(Columns.Agente); }
			set { SetColumnValue(Columns.Agente, value); }
		}
		  
		[XmlAttribute("ComprobanteTipo")]
		[Bindable(true)]
		public string ComprobanteTipo 
		{
			get { return GetColumnValue<string>(Columns.ComprobanteTipo); }
			set { SetColumnValue(Columns.ComprobanteTipo, value); }
		}
		  
		[XmlAttribute("ComprobanteNumero")]
		[Bindable(true)]
		public string ComprobanteNumero 
		{
			get { return GetColumnValue<string>(Columns.ComprobanteNumero); }
			set { SetColumnValue(Columns.ComprobanteNumero, value); }
		}
		  
		[XmlAttribute("OrdenCompra")]
		[Bindable(true)]
		public string OrdenCompra 
		{
			get { return GetColumnValue<string>(Columns.OrdenCompra); }
			set { SetColumnValue(Columns.OrdenCompra, value); }
		}
		  
		[XmlAttribute("Observaciones")]
		[Bindable(true)]
		public string Observaciones 
		{
			get { return GetColumnValue<string>(Columns.Observaciones); }
			set { SetColumnValue(Columns.Observaciones, value); }
		}
		  
		[XmlAttribute("Activada")]
		[Bindable(true)]
		public bool Activada 
		{
			get { return GetColumnValue<bool>(Columns.Activada); }
			set { SetColumnValue(Columns.Activada, value); }
		}
		
		#endregion
		
		
		#region PrimaryKey Methods		
		
        protected override void SetPrimaryKey(object oValue)
        {
            base.SetPrimaryKey(oValue);
            
            SetPKValues();
        }
        
				
		private DalDeposito.InsumosProvisionesLineaCollection colInsumosProvisionesLineas;
		public DalDeposito.InsumosProvisionesLineaCollection InsumosProvisionesLineas
		{
			get
			{
				if(colInsumosProvisionesLineas == null)
				{
					colInsumosProvisionesLineas = new DalDeposito.InsumosProvisionesLineaCollection().Where(InsumosProvisionesLinea.Columns.Provision, Codigo).Load();
					colInsumosProvisionesLineas.ListChanged += new ListChangedEventHandler(colInsumosProvisionesLineas_ListChanged);
				}
				return colInsumosProvisionesLineas;			
			}
			set 
			{ 
					colInsumosProvisionesLineas = value; 
					colInsumosProvisionesLineas.ListChanged += new ListChangedEventHandler(colInsumosProvisionesLineas_ListChanged);
			}
		}
		
		void colInsumosProvisionesLineas_ListChanged(object sender, ListChangedEventArgs e)
		{
		    if (e.ListChangedType == ListChangedType.ItemAdded)
		    {
		        // Set foreign key value
		        colInsumosProvisionesLineas[e.NewIndex].Provision = Codigo;
		    }
		}
		
		#endregion
		
			
		
		#region ForeignKey Properties
		
		/// <summary>
		/// Returns a InsumosProvisionesAgente ActiveRecord object related to this InsumosProvisione
		/// 
		/// </summary>
		public DalDeposito.InsumosProvisionesAgente InsumosProvisionesAgente
		{
			get { return DalDeposito.InsumosProvisionesAgente.FetchByID(this.Agente); }
			set { SetColumnValue("Agente", value.Codigo); }
		}
		
		
		/// <summary>
		/// Returns a InsumosProvisionesAgente ActiveRecord object related to this InsumosProvisione
		/// 
		/// </summary>
		public DalDeposito.InsumosProvisionesAgente InsumosProvisionesAgenteToAgente
		{
			get { return DalDeposito.InsumosProvisionesAgente.FetchByID(this.Agente); }
			set { SetColumnValue("Agente", value.Codigo); }
		}
		
		
		/// <summary>
		/// Returns a InsumosTiposComprobante ActiveRecord object related to this InsumosProvisione
		/// 
		/// </summary>
		public DalDeposito.InsumosTiposComprobante InsumosTiposComprobante
		{
			get { return DalDeposito.InsumosTiposComprobante.FetchByID(this.ComprobanteTipo); }
			set { SetColumnValue("Comprobante_Tipo", value.Nombre); }
		}
		
		
		#endregion
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(int varCodigo,byte varSistema,DateTime varFecha,int varTipo,int varAgente,string varComprobanteTipo,string varComprobanteNumero,string varOrdenCompra,string varObservaciones,bool varActivada)
		{
			InsumosProvisione item = new InsumosProvisione();
			
			item.Codigo = varCodigo;
			
			item.Sistema = varSistema;
			
			item.Fecha = varFecha;
			
			item.Tipo = varTipo;
			
			item.Agente = varAgente;
			
			item.ComprobanteTipo = varComprobanteTipo;
			
			item.ComprobanteNumero = varComprobanteNumero;
			
			item.OrdenCompra = varOrdenCompra;
			
			item.Observaciones = varObservaciones;
			
			item.Activada = varActivada;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varCodigo,byte varSistema,DateTime varFecha,int varTipo,int varAgente,string varComprobanteTipo,string varComprobanteNumero,string varOrdenCompra,string varObservaciones,bool varActivada)
		{
			InsumosProvisione item = new InsumosProvisione();
			
				item.Codigo = varCodigo;
			
				item.Sistema = varSistema;
			
				item.Fecha = varFecha;
			
				item.Tipo = varTipo;
			
				item.Agente = varAgente;
			
				item.ComprobanteTipo = varComprobanteTipo;
			
				item.ComprobanteNumero = varComprobanteNumero;
			
				item.OrdenCompra = varOrdenCompra;
			
				item.Observaciones = varObservaciones;
			
				item.Activada = varActivada;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn CodigoColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn SistemaColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn FechaColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn TipoColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn AgenteColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn ComprobanteTipoColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn ComprobanteNumeroColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn OrdenCompraColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn ObservacionesColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn ActivadaColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Codigo = @"Codigo";
			 public static string Sistema = @"Sistema";
			 public static string Fecha = @"Fecha";
			 public static string Tipo = @"Tipo";
			 public static string Agente = @"Agente";
			 public static string ComprobanteTipo = @"Comprobante_Tipo";
			 public static string ComprobanteNumero = @"Comprobante_Numero";
			 public static string OrdenCompra = @"ordenCompra";
			 public static string Observaciones = @"Observaciones";
			 public static string Activada = @"Activada";
						
		}
		#endregion
		
		#region Update PK Collections
		
        public void SetPKValues()
        {
                if (colInsumosProvisionesLineas != null)
                {
                    foreach (DalDeposito.InsumosProvisionesLinea item in colInsumosProvisionesLineas)
                    {
                        if (item.Provision != Codigo)
                        {
                            item.Provision = Codigo;
                        }
                    }
               }
		}
        #endregion
    
        #region Deep Save
		
        public void DeepSave()
        {
            Save();
            
                if (colInsumosProvisionesLineas != null)
                {
                    colInsumosProvisionesLineas.SaveAll();
               }
		}
        #endregion
	}
}
