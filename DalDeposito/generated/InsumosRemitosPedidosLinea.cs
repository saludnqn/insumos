using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DalDeposito
{
	/// <summary>
	/// Strongly-typed collection for the InsumosRemitosPedidosLinea class.
	/// </summary>
    [Serializable]
	public partial class InsumosRemitosPedidosLineaCollection : ActiveList<InsumosRemitosPedidosLinea, InsumosRemitosPedidosLineaCollection>
	{	   
		public InsumosRemitosPedidosLineaCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>InsumosRemitosPedidosLineaCollection</returns>
		public InsumosRemitosPedidosLineaCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                InsumosRemitosPedidosLinea o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the Insumos_RemitosPedidos_Lineas table.
	/// </summary>
	[Serializable]
	public partial class InsumosRemitosPedidosLinea : ActiveRecord<InsumosRemitosPedidosLinea>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public InsumosRemitosPedidosLinea()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public InsumosRemitosPedidosLinea(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public InsumosRemitosPedidosLinea(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public InsumosRemitosPedidosLinea(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("Insumos_RemitosPedidos_Lineas", TableType.Table, DataService.GetInstance("depProvider"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarPedido = new TableSchema.TableColumn(schema);
				colvarPedido.ColumnName = "Pedido";
				colvarPedido.DataType = DbType.Int32;
				colvarPedido.MaxLength = 0;
				colvarPedido.AutoIncrement = false;
				colvarPedido.IsNullable = false;
				colvarPedido.IsPrimaryKey = false;
				colvarPedido.IsForeignKey = true;
				colvarPedido.IsReadOnly = false;
				colvarPedido.DefaultSetting = @"";
				
					colvarPedido.ForeignKeyTableName = "Insumos_Pedidos";
				schema.Columns.Add(colvarPedido);
				
				TableSchema.TableColumn colvarCodigo = new TableSchema.TableColumn(schema);
				colvarCodigo.ColumnName = "Codigo";
				colvarCodigo.DataType = DbType.Int32;
				colvarCodigo.MaxLength = 0;
				colvarCodigo.AutoIncrement = true;
				colvarCodigo.IsNullable = false;
				colvarCodigo.IsPrimaryKey = true;
				colvarCodigo.IsForeignKey = false;
				colvarCodigo.IsReadOnly = false;
				colvarCodigo.DefaultSetting = @"";
				colvarCodigo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCodigo);
				
				TableSchema.TableColumn colvarLineaProvision = new TableSchema.TableColumn(schema);
				colvarLineaProvision.ColumnName = "Linea_Provision";
				colvarLineaProvision.DataType = DbType.Int32;
				colvarLineaProvision.MaxLength = 0;
				colvarLineaProvision.AutoIncrement = false;
				colvarLineaProvision.IsNullable = false;
				colvarLineaProvision.IsPrimaryKey = false;
				colvarLineaProvision.IsForeignKey = true;
				colvarLineaProvision.IsReadOnly = false;
				colvarLineaProvision.DefaultSetting = @"";
				
					colvarLineaProvision.ForeignKeyTableName = "Insumos_Provisiones_Lineas";
				schema.Columns.Add(colvarLineaProvision);
				
				TableSchema.TableColumn colvarCantidad = new TableSchema.TableColumn(schema);
				colvarCantidad.ColumnName = "Cantidad";
				colvarCantidad.DataType = DbType.Int32;
				colvarCantidad.MaxLength = 0;
				colvarCantidad.AutoIncrement = false;
				colvarCantidad.IsNullable = false;
				colvarCantidad.IsPrimaryKey = false;
				colvarCantidad.IsForeignKey = false;
				colvarCantidad.IsReadOnly = false;
				colvarCantidad.DefaultSetting = @"";
				colvarCantidad.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCantidad);
				
				TableSchema.TableColumn colvarCantidadDisponible = new TableSchema.TableColumn(schema);
				colvarCantidadDisponible.ColumnName = "Cantidad_Disponible";
				colvarCantidadDisponible.DataType = DbType.Int32;
				colvarCantidadDisponible.MaxLength = 0;
				colvarCantidadDisponible.AutoIncrement = false;
				colvarCantidadDisponible.IsNullable = false;
				colvarCantidadDisponible.IsPrimaryKey = false;
				colvarCantidadDisponible.IsForeignKey = false;
				colvarCantidadDisponible.IsReadOnly = false;
				
						colvarCantidadDisponible.DefaultSetting = @"(0)";
				colvarCantidadDisponible.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCantidadDisponible);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["depProvider"].AddSchema("Insumos_RemitosPedidos_Lineas",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("Pedido")]
		[Bindable(true)]
		public int Pedido 
		{
			get { return GetColumnValue<int>(Columns.Pedido); }
			set { SetColumnValue(Columns.Pedido, value); }
		}
		  
		[XmlAttribute("Codigo")]
		[Bindable(true)]
		public int Codigo 
		{
			get { return GetColumnValue<int>(Columns.Codigo); }
			set { SetColumnValue(Columns.Codigo, value); }
		}
		  
		[XmlAttribute("LineaProvision")]
		[Bindable(true)]
		public int LineaProvision 
		{
			get { return GetColumnValue<int>(Columns.LineaProvision); }
			set { SetColumnValue(Columns.LineaProvision, value); }
		}
		  
		[XmlAttribute("Cantidad")]
		[Bindable(true)]
		public int Cantidad 
		{
			get { return GetColumnValue<int>(Columns.Cantidad); }
			set { SetColumnValue(Columns.Cantidad, value); }
		}
		  
		[XmlAttribute("CantidadDisponible")]
		[Bindable(true)]
		public int CantidadDisponible 
		{
			get { return GetColumnValue<int>(Columns.CantidadDisponible); }
			set { SetColumnValue(Columns.CantidadDisponible, value); }
		}
		
		#endregion
		
		
			
		
		#region ForeignKey Properties
		
		/// <summary>
		/// Returns a InsumosPedido ActiveRecord object related to this InsumosRemitosPedidosLinea
		/// 
		/// </summary>
		public DalDeposito.InsumosPedido InsumosPedido
		{
			get { return DalDeposito.InsumosPedido.FetchByID(this.Pedido); }
			set { SetColumnValue("Pedido", value.Codigo); }
		}
		
		
		/// <summary>
		/// Returns a InsumosProvisionesLinea ActiveRecord object related to this InsumosRemitosPedidosLinea
		/// 
		/// </summary>
		public DalDeposito.InsumosProvisionesLinea InsumosProvisionesLinea
		{
			get { return DalDeposito.InsumosProvisionesLinea.FetchByID(this.LineaProvision); }
			set { SetColumnValue("Linea_Provision", value.Codigo); }
		}
		
		
		#endregion
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(int varPedido,int varLineaProvision,int varCantidad,int varCantidadDisponible)
		{
			InsumosRemitosPedidosLinea item = new InsumosRemitosPedidosLinea();
			
			item.Pedido = varPedido;
			
			item.LineaProvision = varLineaProvision;
			
			item.Cantidad = varCantidad;
			
			item.CantidadDisponible = varCantidadDisponible;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varPedido,int varCodigo,int varLineaProvision,int varCantidad,int varCantidadDisponible)
		{
			InsumosRemitosPedidosLinea item = new InsumosRemitosPedidosLinea();
			
				item.Pedido = varPedido;
			
				item.Codigo = varCodigo;
			
				item.LineaProvision = varLineaProvision;
			
				item.Cantidad = varCantidad;
			
				item.CantidadDisponible = varCantidadDisponible;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn PedidoColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn CodigoColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn LineaProvisionColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn CantidadColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn CantidadDisponibleColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string Pedido = @"Pedido";
			 public static string Codigo = @"Codigo";
			 public static string LineaProvision = @"Linea_Provision";
			 public static string Cantidad = @"Cantidad";
			 public static string CantidadDisponible = @"Cantidad_Disponible";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
