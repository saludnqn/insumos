using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DalDeposito{
    public partial class SPs{
        
        /// <summary>
        /// Creates an object wrapper for the dt_addtosourcecontrol Procedure
        /// </summary>
        public static StoredProcedure DtAddtosourcecontrol(string vchSourceSafeINI, string vchProjectName, string vchComment, string vchLoginName, string vchPassword)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_addtosourcecontrol", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@vchSourceSafeINI", vchSourceSafeINI, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@vchProjectName", vchProjectName, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@vchComment", vchComment, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@vchLoginName", vchLoginName, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@vchPassword", vchPassword, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_addtosourcecontrol_u Procedure
        /// </summary>
        public static StoredProcedure DtAddtosourcecontrolU(string vchSourceSafeINI, string vchProjectName, string vchComment, string vchLoginName, string vchPassword)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_addtosourcecontrol_u", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@vchSourceSafeINI", vchSourceSafeINI, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vchProjectName", vchProjectName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vchComment", vchComment, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vchLoginName", vchLoginName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vchPassword", vchPassword, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_adduserobject Procedure
        /// </summary>
        public static StoredProcedure DtAdduserobject()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_adduserobject", DataService.GetInstance("depProvider"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_adduserobject_vcs Procedure
        /// </summary>
        public static StoredProcedure DtAdduserobjectVcs(string vchProperty)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_adduserobject_vcs", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@vchProperty", vchProperty, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_checkinobject Procedure
        /// </summary>
        public static StoredProcedure DtCheckinobject(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, int? iVCSFlags, int? iActionFlag, string txStream1, string txStream2, string txStream3)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_checkinobject", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@chObjectType", chObjectType, DbType.AnsiStringFixedLength, null, null);
        	
            sp.Command.AddParameter("@vchObjectName", vchObjectName, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@vchComment", vchComment, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@vchLoginName", vchLoginName, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@vchPassword", vchPassword, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@iVCSFlags", iVCSFlags, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@iActionFlag", iActionFlag, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@txStream1", txStream1, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@txStream2", txStream2, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@txStream3", txStream3, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_checkinobject_u Procedure
        /// </summary>
        public static StoredProcedure DtCheckinobjectU(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, int? iVCSFlags, int? iActionFlag, string txStream1, string txStream2, string txStream3)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_checkinobject_u", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@chObjectType", chObjectType, DbType.AnsiStringFixedLength, null, null);
        	
            sp.Command.AddParameter("@vchObjectName", vchObjectName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vchComment", vchComment, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vchLoginName", vchLoginName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vchPassword", vchPassword, DbType.String, null, null);
        	
            sp.Command.AddParameter("@iVCSFlags", iVCSFlags, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@iActionFlag", iActionFlag, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@txStream1", txStream1, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@txStream2", txStream2, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@txStream3", txStream3, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_checkoutobject Procedure
        /// </summary>
        public static StoredProcedure DtCheckoutobject(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, int? iVCSFlags, int? iActionFlag)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_checkoutobject", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@chObjectType", chObjectType, DbType.AnsiStringFixedLength, null, null);
        	
            sp.Command.AddParameter("@vchObjectName", vchObjectName, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@vchComment", vchComment, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@vchLoginName", vchLoginName, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@vchPassword", vchPassword, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@iVCSFlags", iVCSFlags, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@iActionFlag", iActionFlag, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_checkoutobject_u Procedure
        /// </summary>
        public static StoredProcedure DtCheckoutobjectU(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, int? iVCSFlags, int? iActionFlag)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_checkoutobject_u", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@chObjectType", chObjectType, DbType.AnsiStringFixedLength, null, null);
        	
            sp.Command.AddParameter("@vchObjectName", vchObjectName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vchComment", vchComment, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vchLoginName", vchLoginName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vchPassword", vchPassword, DbType.String, null, null);
        	
            sp.Command.AddParameter("@iVCSFlags", iVCSFlags, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@iActionFlag", iActionFlag, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_displayoaerror Procedure
        /// </summary>
        public static StoredProcedure DtDisplayoaerror(int? iObject, int? iresult)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_displayoaerror", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@iObject", iObject, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@iresult", iresult, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_displayoaerror_u Procedure
        /// </summary>
        public static StoredProcedure DtDisplayoaerrorU(int? iObject, int? iresult)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_displayoaerror_u", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@iObject", iObject, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@iresult", iresult, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_droppropertiesbyid Procedure
        /// </summary>
        public static StoredProcedure DtDroppropertiesbyid(int? id, string propertyX)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_droppropertiesbyid", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@id", id, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@property", propertyX, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_dropuserobjectbyid Procedure
        /// </summary>
        public static StoredProcedure DtDropuserobjectbyid(int? id)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_dropuserobjectbyid", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@id", id, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_generateansiname Procedure
        /// </summary>
        public static StoredProcedure DtGenerateansiname(string name)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_generateansiname", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddOutputParameter("@name", DbType.AnsiString, null, null);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_getobjwithprop Procedure
        /// </summary>
        public static StoredProcedure DtGetobjwithprop(string propertyX, string valueX)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_getobjwithprop", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@property", propertyX, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@value", valueX, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_getobjwithprop_u Procedure
        /// </summary>
        public static StoredProcedure DtGetobjwithpropU(string propertyX, string uvalue)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_getobjwithprop_u", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@property", propertyX, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@uvalue", uvalue, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_getpropertiesbyid Procedure
        /// </summary>
        public static StoredProcedure DtGetpropertiesbyid(int? id, string propertyX)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_getpropertiesbyid", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@id", id, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@property", propertyX, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_getpropertiesbyid_u Procedure
        /// </summary>
        public static StoredProcedure DtGetpropertiesbyidU(int? id, string propertyX)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_getpropertiesbyid_u", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@id", id, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@property", propertyX, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_getpropertiesbyid_vcs Procedure
        /// </summary>
        public static StoredProcedure DtGetpropertiesbyidVcs(int? id, string propertyX, string valueX)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_getpropertiesbyid_vcs", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@id", id, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@property", propertyX, DbType.AnsiString, null, null);
        	
            sp.Command.AddOutputParameter("@value", DbType.AnsiString, null, null);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_getpropertiesbyid_vcs_u Procedure
        /// </summary>
        public static StoredProcedure DtGetpropertiesbyidVcsU(int? id, string propertyX, string valueX)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_getpropertiesbyid_vcs_u", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@id", id, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@property", propertyX, DbType.AnsiString, null, null);
        	
            sp.Command.AddOutputParameter("@value", DbType.String, null, null);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_isundersourcecontrol Procedure
        /// </summary>
        public static StoredProcedure DtIsundersourcecontrol(string vchLoginName, string vchPassword, int? iWhoToo)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_isundersourcecontrol", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@vchLoginName", vchLoginName, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@vchPassword", vchPassword, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@iWhoToo", iWhoToo, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_isundersourcecontrol_u Procedure
        /// </summary>
        public static StoredProcedure DtIsundersourcecontrolU(string vchLoginName, string vchPassword, int? iWhoToo)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_isundersourcecontrol_u", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@vchLoginName", vchLoginName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vchPassword", vchPassword, DbType.String, null, null);
        	
            sp.Command.AddParameter("@iWhoToo", iWhoToo, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_removefromsourcecontrol Procedure
        /// </summary>
        public static StoredProcedure DtRemovefromsourcecontrol()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_removefromsourcecontrol", DataService.GetInstance("depProvider"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_setpropertybyid Procedure
        /// </summary>
        public static StoredProcedure DtSetpropertybyid(int? id, string propertyX, string valueX, byte[] lvalue)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_setpropertybyid", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@id", id, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@property", propertyX, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@value", valueX, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@lvalue", lvalue, DbType.Binary, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_setpropertybyid_u Procedure
        /// </summary>
        public static StoredProcedure DtSetpropertybyidU(int? id, string propertyX, string uvalue, byte[] lvalue)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_setpropertybyid_u", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@id", id, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@property", propertyX, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@uvalue", uvalue, DbType.String, null, null);
        	
            sp.Command.AddParameter("@lvalue", lvalue, DbType.Binary, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_validateloginparams Procedure
        /// </summary>
        public static StoredProcedure DtValidateloginparams(string vchLoginName, string vchPassword)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_validateloginparams", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@vchLoginName", vchLoginName, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@vchPassword", vchPassword, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_validateloginparams_u Procedure
        /// </summary>
        public static StoredProcedure DtValidateloginparamsU(string vchLoginName, string vchPassword)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_validateloginparams_u", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@vchLoginName", vchLoginName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vchPassword", vchPassword, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_vcsenabled Procedure
        /// </summary>
        public static StoredProcedure DtVcsenabled()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_vcsenabled", DataService.GetInstance("depProvider"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_verstamp006 Procedure
        /// </summary>
        public static StoredProcedure DtVerstamp006()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_verstamp006", DataService.GetInstance("depProvider"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_verstamp007 Procedure
        /// </summary>
        public static StoredProcedure DtVerstamp007()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_verstamp007", DataService.GetInstance("depProvider"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_whocheckedout Procedure
        /// </summary>
        public static StoredProcedure DtWhocheckedout(string chObjectType, string vchObjectName, string vchLoginName, string vchPassword)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_whocheckedout", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@chObjectType", chObjectType, DbType.AnsiStringFixedLength, null, null);
        	
            sp.Command.AddParameter("@vchObjectName", vchObjectName, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@vchLoginName", vchLoginName, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@vchPassword", vchPassword, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the dt_whocheckedout_u Procedure
        /// </summary>
        public static StoredProcedure DtWhocheckedoutU(string chObjectType, string vchObjectName, string vchLoginName, string vchPassword)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("dt_whocheckedout_u", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@chObjectType", chObjectType, DbType.AnsiStringFixedLength, null, null);
        	
            sp.Command.AddParameter("@vchObjectName", vchObjectName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vchLoginName", vchLoginName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vchPassword", vchPassword, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the hsp_FechaHora Procedure
        /// </summary>
        public static StoredProcedure HspFechaHora(DateTime? fecha)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("hsp_FechaHora", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddOutputParameter("@fecha", DbType.DateTime, null, null);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the hsp_Get_Insumos Procedure
        /// </summary>
        public static StoredProcedure HspGetInsumos(int? idRubro, int? idCodigo, string nombre)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("hsp_Get_Insumos", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@idRubro", idRubro, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idCodigo", idCodigo, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@nombre", nombre, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the hsp_Get_Movimientos_Insumos Procedure
        /// </summary>
        public static StoredProcedure HspGetMovimientosInsumos(int? idInsumo, string vencimientoDesde, string vencimientoHasta)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("hsp_Get_Movimientos_Insumos", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@idInsumo", idInsumo, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@vencimientoDesde", vencimientoDesde, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vencimientoHasta", vencimientoHasta, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the hsp_Get_Pedidos Procedure
        /// </summary>
        public static StoredProcedure HspGetPedidos(int? tipo, int? insumo, int? rubro, int? numero, string fdesde, string fhasta, int? estado, int? agente, int? orden)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("hsp_Get_Pedidos", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@tipo", tipo, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@insumo", insumo, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@rubro", rubro, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@numero", numero, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@fdesde", fdesde, DbType.String, null, null);
        	
            sp.Command.AddParameter("@fhasta", fhasta, DbType.String, null, null);
        	
            sp.Command.AddParameter("@estado", estado, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@agente", agente, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@orden", orden, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the hsp_Get_Pedidos_Totales_Diario Procedure
        /// </summary>
        public static StoredProcedure HspGetPedidosTotalesDiario(int? tipo, int? insumo, string fdesde, string fhasta, int? estado, int? agente, int? orden)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("hsp_Get_Pedidos_Totales_Diario", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@tipo", tipo, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@insumo", insumo, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@fdesde", fdesde, DbType.String, null, null);
        	
            sp.Command.AddParameter("@fhasta", fhasta, DbType.String, null, null);
        	
            sp.Command.AddParameter("@estado", estado, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@agente", agente, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@orden", orden, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the hsp_Get_Pedidos_Totales_Mensual Procedure
        /// </summary>
        public static StoredProcedure HspGetPedidosTotalesMensual(int? tipo, int? insumo, string fdesde, string fhasta, int? estado, int? agente)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("hsp_Get_Pedidos_Totales_Mensual", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@tipo", tipo, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@insumo", insumo, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@fdesde", fdesde, DbType.String, null, null);
        	
            sp.Command.AddParameter("@fhasta", fhasta, DbType.String, null, null);
        	
            sp.Command.AddParameter("@estado", estado, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@agente", agente, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the hsp_Get_Provisiones Procedure
        /// </summary>
        public static StoredProcedure HspGetProvisiones(int? tipo, int? numero, int? rubro, int? agente, string fdesde, string fhasta, string lote, int? insumo, int? orden)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("hsp_Get_Provisiones", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@tipo", tipo, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@numero", numero, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@rubro", rubro, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@agente", agente, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@fdesde", fdesde, DbType.String, null, null);
        	
            sp.Command.AddParameter("@fhasta", fhasta, DbType.String, null, null);
        	
            sp.Command.AddParameter("@lote", lote, DbType.String, null, null);
        	
            sp.Command.AddParameter("@insumo", insumo, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@orden", orden, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the hsp_Insumos_ActualizarBloqueo Procedure
        /// </summary>
        public static StoredProcedure HspInsumosActualizarBloqueo(int? Ticket)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("hsp_Insumos_ActualizarBloqueo", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@Ticket", Ticket, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the hsp_Insumos_Bloquear Procedure
        /// </summary>
        public static StoredProcedure HspInsumosBloquear(int? Tipo, int? Identificador, int? Usuario, int? Ticket)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("hsp_Insumos_Bloquear", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@Tipo", Tipo, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@Identificador", Identificador, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@Usuario", Usuario, DbType.Int32, 0, 10);
        	
            sp.Command.AddOutputParameter("@Ticket", DbType.Int32, 0, 10);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the hsp_Insumos_Desbloquear Procedure
        /// </summary>
        public static StoredProcedure HspInsumosDesbloquear(int? Ticket)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("hsp_Insumos_Desbloquear", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@Ticket", Ticket, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the hsp_Insumos_DesbloqueoAutomatico Procedure
        /// </summary>
        public static StoredProcedure HspInsumosDesbloqueoAutomatico()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("hsp_Insumos_DesbloqueoAutomatico", DataService.GetInstance("depProvider"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the hsp_Insumos_StockDetallado Procedure
        /// </summary>
        public static StoredProcedure HspInsumosStockDetallado(int? insumo, bool? mostrarVencidos, bool? mostrarSoloVencidos, DateTime? vencimientoHasta)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("hsp_Insumos_StockDetallado", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@insumo", insumo, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@mostrarVencidos", mostrarVencidos, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@mostrarSoloVencidos", mostrarSoloVencidos, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@vencimientoHasta", vencimientoHasta, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the hsp_Insumos_StockTotal Procedure
        /// </summary>
        public static StoredProcedure HspInsumosStockTotal(bool? mostrarVencidos, bool? mostrarSoloVencidos, DateTime? vencimientoHasta)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("hsp_Insumos_StockTotal", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@mostrarVencidos", mostrarVencidos, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@mostrarSoloVencidos", mostrarSoloVencidos, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@vencimientoHasta", vencimientoHasta, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the hsp_Keys Procedure
        /// </summary>
        public static StoredProcedure HspKeys(int? sistema, int? nextKey)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("hsp_Keys", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@sistema", sistema, DbType.Int32, 0, 10);
        	
            sp.Command.AddOutputParameter("@nextKey", DbType.Int32, 0, 10);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the hsp_Stock_Critico Procedure
        /// </summary>
        public static StoredProcedure HspStockCritico()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("hsp_Stock_Critico", DataService.GetInstance("depProvider"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the hsp_Stock_Insumo Procedure
        /// </summary>
        public static StoredProcedure HspStockInsumo(int? idInsumo)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("hsp_Stock_Insumo", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@idInsumo", idInsumo, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the hsp_Stock_Total Procedure
        /// </summary>
        public static StoredProcedure HspStockTotal(int? rubro, int? mostrar, string unidad, string vencimientoDesde, string vencimientoHasta, int? orden)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("hsp_Stock_Total", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@rubro", rubro, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@mostrar", mostrar, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@unidad", unidad, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vencimientoDesde", vencimientoDesde, DbType.String, null, null);
        	
            sp.Command.AddParameter("@vencimientoHasta", vencimientoHasta, DbType.String, null, null);
        	
            sp.Command.AddParameter("@orden", orden, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the SearchAllTables Procedure
        /// </summary>
        public static StoredProcedure SearchAllTables(string SearchStr)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("SearchAllTables", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@SearchStr", SearchStr, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_AddAlarmMessage Procedure
        /// </summary>
        public static StoredProcedure SpSsoAddAlarmMessage(int? alarmId, int? filter, string externalKey, string description, string imageurl, string url)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_AddAlarmMessage", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@alarmId", alarmId, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@filter", filter, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@externalKey", externalKey, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@description", description, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@image_url", imageurl, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@url", url, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_Administrator_Applications Procedure
        /// </summary>
        public static StoredProcedure SpSsoAdministratorApplications(int? userId)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_Administrator_Applications", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@userId", userId, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_AdminPermissions Procedure
        /// </summary>
        public static StoredProcedure SpSsoAdminPermissions(int? userId, int? applicationId)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_AdminPermissions", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@userId", userId, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@applicationId", applicationId, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_AllowedApps Procedure
        /// </summary>
        public static StoredProcedure SpSsoAllowedApps(int? userId)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_AllowedApps", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@userId", userId, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_AllowedApps_Old Procedure
        /// </summary>
        public static StoredProcedure SpSsoAllowedAppsOld(int? userId)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_AllowedApps_Old", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@userId", userId, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_AllowedModules Procedure
        /// </summary>
        public static StoredProcedure SpSsoAllowedModules(int? userId, int? applicationId)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_AllowedModules", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@userId", userId, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@applicationId", applicationId, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_AllowedModules_Old Procedure
        /// </summary>
        public static StoredProcedure SpSsoAllowedModulesOld(int? userId, int? applicationId)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_AllowedModules_Old", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@userId", userId, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@applicationId", applicationId, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_AllowedViews Procedure
        /// </summary>
        public static StoredProcedure SpSsoAllowedViews(int? userId, int? applicationId)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_AllowedViews", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@userId", userId, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@applicationId", applicationId, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_AllowedViews_Old Procedure
        /// </summary>
        public static StoredProcedure SpSsoAllowedViewsOld(int? userId, int? applicationId)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_AllowedViews_Old", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@userId", userId, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@applicationId", applicationId, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_ApplicationList Procedure
        /// </summary>
        public static StoredProcedure SpSsoApplicationList()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_ApplicationList", DataService.GetInstance("depProvider"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_AuditDB Procedure
        /// </summary>
        public static StoredProcedure SpSsoAuditDB(string databaseName, string tableName, byte[] columns)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_AuditDB", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@databaseName", databaseName, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@tableName", tableName, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@columns", columns, DbType.Binary, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_AuditDB_SetUser Procedure
        /// </summary>
        public static StoredProcedure SpSsoAuditDBSetUser(string username)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_AuditDB_SetUser", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@username", username, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_BeginModuleAccess Procedure
        /// </summary>
        public static StoredProcedure SpSsoBeginModuleAccess(int? userId, int? applicationId, int? moduleId, int? viewId, int? accessKey)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_BeginModuleAccess", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@userId", userId, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@applicationId", applicationId, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@moduleId", moduleId, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@viewId", viewId, DbType.Int32, 0, 10);
        	
            sp.Command.AddOutputParameter("@accessKey", DbType.Int32, 0, 10);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_ChangeAlarmMessage Procedure
        /// </summary>
        public static StoredProcedure SpSsoChangeAlarmMessage(int? messageId, int? userId, int? state, DateTime? rememberOn)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_ChangeAlarmMessage", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@messageId", messageId, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@userId", userId, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@state", state, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@rememberOn", rememberOn, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_ChangePermission Procedure
        /// </summary>
        public static StoredProcedure SpSsoChangePermission(int? userId, bool? isModule, int? target, bool? add, int? permission)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_ChangePermission", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@userId", userId, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@isModule", isModule, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@target", target, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@add", add, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@permission", permission, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_ChangePermissionForRole Procedure
        /// </summary>
        public static StoredProcedure SpSsoChangePermissionForRole(int? roleId, bool? isModule, int? target, bool? add, int? permission)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_ChangePermissionForRole", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@roleId", roleId, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@isModule", isModule, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@target", target, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@add", add, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@permission", permission, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_ChangePermissionForRoleGroup Procedure
        /// </summary>
        public static StoredProcedure SpSsoChangePermissionForRoleGroup(int? groupId, bool? isModule, int? target, bool? add, int? permission, bool? removeIfNoPermissions)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_ChangePermissionForRoleGroup", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@groupId", groupId, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@isModule", isModule, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@target", target, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@add", add, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@permission", permission, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@removeIfNoPermissions", removeIfNoPermissions, DbType.Boolean, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_CheckSessions Procedure
        /// </summary>
        public static StoredProcedure SpSsoCheckSessions()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_CheckSessions", DataService.GetInstance("depProvider"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_CheckTemporaryPermissions Procedure
        /// </summary>
        public static StoredProcedure SpSsoCheckTemporaryPermissions()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_CheckTemporaryPermissions", DataService.GetInstance("depProvider"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_ClearLocks Procedure
        /// </summary>
        public static StoredProcedure SpSsoClearLocks()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_ClearLocks", DataService.GetInstance("depProvider"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_ClearStoredVariables Procedure
        /// </summary>
        public static StoredProcedure SpSsoClearStoredVariables(string variable, int? targetType, int? target)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_ClearStoredVariables", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@variable", variable, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@targetType", targetType, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@target", target, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_CreateSQLUser Procedure
        /// </summary>
        public static StoredProcedure SpSsoCreateSQLUser(int? userId)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_CreateSQLUser", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@userId", userId, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_EndModuleAccess Procedure
        /// </summary>
        public static StoredProcedure SpSsoEndModuleAccess(int? accessKey, bool? result, string externalKey)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_EndModuleAccess", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@accessKey", accessKey, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@result", result, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@externalKey", externalKey, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_ExecOnAllUsers Procedure
        /// </summary>
        public static StoredProcedure SpSsoExecOnAllUsers(string statement)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_ExecOnAllUsers", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@statement", statement, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_FinalizeModuleAccess Procedure
        /// </summary>
        public static StoredProcedure SpSsoFinalizeModuleAccess(int? accessKey, bool? result)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_FinalizeModuleAccess", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@accessKey", accessKey, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@result", result, DbType.Boolean, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_GenerateID Procedure
        /// </summary>
        public static StoredProcedure SpSsoGenerateID(int? Length, string id)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_GenerateID", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@Length", Length, DbType.Int32, 0, 10);
        	
            sp.Command.AddOutputParameter("@id", DbType.AnsiString, null, null);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_GetAccessLog Procedure
        /// </summary>
        public static StoredProcedure SpSsoGetAccessLog(DateTime? from, DateTime? toX, int? applicationId, int? moduleId, int? viewId, int? userId, bool? onlyComplete, int? maxMessages, int? fromId)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_GetAccessLog", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@from", from, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@to", toX, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@applicationId", applicationId, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@moduleId", moduleId, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@viewId", viewId, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@userId", userId, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@onlyComplete", onlyComplete, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@maxMessages", maxMessages, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@fromId", fromId, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_GetAccessLogForKey Procedure
        /// </summary>
        public static StoredProcedure SpSsoGetAccessLogForKey(int? applicationId, string keyName, string keyValue, int? moduleId, bool? result)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_GetAccessLogForKey", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@applicationId", applicationId, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@keyName", keyName, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@keyValue", keyValue, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@moduleId", moduleId, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@result", result, DbType.Boolean, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_GetAdminApplications Procedure
        /// </summary>
        public static StoredProcedure SpSsoGetAdminApplications(int? userId)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_GetAdminApplications", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@userId", userId, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_GetAlarmMessages Procedure
        /// </summary>
        public static StoredProcedure SpSsoGetAlarmMessages(int? userId, int? applicationId, int? maxMessages, int? fromId)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_GetAlarmMessages", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@userId", userId, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@applicationId", applicationId, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@maxMessages", maxMessages, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@fromId", fromId, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_GetAlarms Procedure
        /// </summary>
        public static StoredProcedure SpSsoGetAlarms(int? userId)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_GetAlarms", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@userId", userId, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_GetApplicationAlarms Procedure
        /// </summary>
        public static StoredProcedure SpSsoGetApplicationAlarms(int? applicationId)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_GetApplicationAlarms", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@applicationId", applicationId, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_GetApplicationData Procedure
        /// </summary>
        public static StoredProcedure SpSsoGetApplicationData(int? applicationId)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_GetApplicationData", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@applicationId", applicationId, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_GetApplicationGroups Procedure
        /// </summary>
        public static StoredProcedure SpSsoGetApplicationGroups(int? applicationId)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_GetApplicationGroups", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@applicationId", applicationId, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_GetModuleData Procedure
        /// </summary>
        public static StoredProcedure SpSsoGetModuleData(int? applicationId, int? moduleX)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_GetModuleData", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@applicationId", applicationId, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@module", moduleX, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_GetModuleDataByID Procedure
        /// </summary>
        public static StoredProcedure SpSsoGetModuleDataByID(int? moduleId)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_GetModuleDataByID", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@moduleId", moduleId, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_GetModules Procedure
        /// </summary>
        public static StoredProcedure SpSsoGetModules(int? applicationId, bool? onlyProtected)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_GetModules", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@applicationId", applicationId, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@onlyProtected", onlyProtected, DbType.Boolean, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_GetPagesByName Procedure
        /// </summary>
        public static StoredProcedure SpSsoGetPagesByName(int? applicationId, string name)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_GetPagesByName", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@applicationId", applicationId, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@name", name, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_GetRandomString Procedure
        /// </summary>
        public static StoredProcedure SpSsoGetRandomString(string random)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_GetRandomString", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddOutputParameter("@random", DbType.AnsiString, null, null);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_GetRoleData Procedure
        /// </summary>
        public static StoredProcedure SpSsoGetRoleData(int? roleId)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_GetRoleData", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@roleId", roleId, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_GetRoleGroupData Procedure
        /// </summary>
        public static StoredProcedure SpSsoGetRoleGroupData(int? groupId)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_GetRoleGroupData", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@groupId", groupId, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_GetRoleGroups Procedure
        /// </summary>
        public static StoredProcedure SpSsoGetRoleGroups()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_GetRoleGroups", DataService.GetInstance("depProvider"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_GetSessionFromUser Procedure
        /// </summary>
        public static StoredProcedure SpSsoGetSessionFromUser(int? userId, string sessionId)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_GetSessionFromUser", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@userId", userId, DbType.Int32, 0, 10);
        	
            sp.Command.AddOutputParameter("@sessionId", DbType.AnsiString, null, null);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_GetStoredVariable Procedure
        /// </summary>
        public static StoredProcedure SpSsoGetStoredVariable(string variable, int? userId, int? viewId)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_GetStoredVariable", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@variable", variable, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@userId", userId, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@viewId", viewId, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_GetStoredVariableEx Procedure
        /// </summary>
        public static StoredProcedure SpSsoGetStoredVariableEx(string variable, int? targetType, int? target)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_GetStoredVariableEx", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@variable", variable, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@targetType", targetType, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@target", target, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_GetStoredVariables_Templates Procedure
        /// </summary>
        public static StoredProcedure SpSsoGetStoredVariablesTemplates(int? applicationId)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_GetStoredVariables_Templates", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@applicationId", applicationId, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_GetStoredVariables_TemplateValues Procedure
        /// </summary>
        public static StoredProcedure SpSsoGetStoredVariablesTemplateValues(string variableName)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_GetStoredVariables_TemplateValues", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@variableName", variableName, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_GetUserData Procedure
        /// </summary>
        public static StoredProcedure SpSsoGetUserData(int? userId)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_GetUserData", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@userId", userId, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_GetUserFromSession Procedure
        /// </summary>
        public static StoredProcedure SpSsoGetUserFromSession(string sessionId, int? userId)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_GetUserFromSession", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@sessionId", sessionId, DbType.AnsiString, null, null);
        	
            sp.Command.AddOutputParameter("@userId", DbType.Int32, 0, 10);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_GetUserId Procedure
        /// </summary>
        public static StoredProcedure SpSsoGetUserId(string username, int? userId)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_GetUserId", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@username", username, DbType.AnsiString, null, null);
        	
            sp.Command.AddOutputParameter("@userId", DbType.Int32, 0, 10);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_GetUsers Procedure
        /// </summary>
        public static StoredProcedure SpSsoGetUsers(int? roleId, int? groupId)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_GetUsers", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@roleId", roleId, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@groupId", groupId, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_GetUserServicePassword Procedure
        /// </summary>
        public static StoredProcedure SpSsoGetUserServicePassword(int? userId, int? type, string username, string password)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_GetUserServicePassword", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@userId", userId, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@type", type, DbType.Int32, 0, 10);
        	
            sp.Command.AddOutputParameter("@username", DbType.AnsiString, null, null);
            
            sp.Command.AddOutputParameter("@password", DbType.AnsiString, null, null);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_GetUserSetting Procedure
        /// </summary>
        public static StoredProcedure SpSsoGetUserSetting(int? userId, string settingId, string valueX)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_GetUserSetting", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@userId", userId, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@settingId", settingId, DbType.String, null, null);
        	
            sp.Command.AddOutputParameter("@value", DbType.String, null, null);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_GetUserStoredVariables Procedure
        /// </summary>
        public static StoredProcedure SpSsoGetUserStoredVariables(int? userId, int? applicationId)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_GetUserStoredVariables", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@userId", userId, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@applicationId", applicationId, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_GetViewData Procedure
        /// </summary>
        public static StoredProcedure SpSsoGetViewData(int? viewId)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_GetViewData", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@viewId", viewId, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_GetViews Procedure
        /// </summary>
        public static StoredProcedure SpSsoGetViews(int? applicationId)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_GetViews", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@applicationId", applicationId, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_hexadecimal Procedure
        /// </summary>
        public static StoredProcedure SpSsoHexadecimal(byte[] binvalue, string hexvalue)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_hexadecimal", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@binvalue", binvalue, DbType.Binary, null, null);
        	
            sp.Command.AddOutputParameter("@hexvalue", DbType.AnsiString, null, null);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_InvalidateAWFCache Procedure
        /// </summary>
        public static StoredProcedure SpSsoInvalidateAWFCache(int? roleId, int? userId, int? roleGroupId)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_InvalidateAWFCache", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@roleId", roleId, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@userId", userId, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@roleGroupId", roleGroupId, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_LockSession Procedure
        /// </summary>
        public static StoredProcedure SpSsoLockSession(string sessionId)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_LockSession", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@sessionId", sessionId, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_Login Procedure
        /// </summary>
        public static StoredProcedure SpSsoLogin(string username, string password, string IP, bool? onlyTestPassword, int? userId, int? loginKey, string sessionId)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_Login", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@username", username, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@password", password, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@IP", IP, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@onlyTestPassword", onlyTestPassword, DbType.Boolean, null, null);
        	
            sp.Command.AddOutputParameter("@userId", DbType.Int32, 0, 10);
            
            sp.Command.AddOutputParameter("@loginKey", DbType.Int32, 0, 10);
            
            sp.Command.AddOutputParameter("@sessionId", DbType.AnsiString, null, null);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_Login_BORRAR Procedure
        /// </summary>
        public static StoredProcedure SpSsoLoginBorrar(string username, string password, string IP, bool? onlyTestPassword, int? userId, int? loginKey, string sessionId)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_Login_BORRAR", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@username", username, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@password", password, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@IP", IP, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@onlyTestPassword", onlyTestPassword, DbType.Boolean, null, null);
        	
            sp.Command.AddOutputParameter("@userId", DbType.Int32, 0, 10);
            
            sp.Command.AddOutputParameter("@loginKey", DbType.Int32, 0, 10);
            
            sp.Command.AddOutputParameter("@sessionId", DbType.AnsiString, null, null);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_Logout Procedure
        /// </summary>
        public static StoredProcedure SpSsoLogout(int? loginKey, string sessionId)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_Logout", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@loginKey", loginKey, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@sessionId", sessionId, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_Mirror_CopySQLUser Procedure
        /// </summary>
        public static StoredProcedure SpSsoMirrorCopySQLUser(string username)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_Mirror_CopySQLUser", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@username", username, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_ModuleAccessSetKey Procedure
        /// </summary>
        public static StoredProcedure SpSsoModuleAccessSetKey(int? accessKey, string key, string valueX)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_ModuleAccessSetKey", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@accessKey", accessKey, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@key", key, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@value", valueX, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_Op_CloneGroup Procedure
        /// </summary>
        public static StoredProcedure SpSsoOpCloneGroup(int? groupId, int? targetType, int? target)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_Op_CloneGroup", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@groupId", groupId, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@targetType", targetType, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@target", target, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_Op_RoleGroups Procedure
        /// </summary>
        public static StoredProcedure SpSsoOpRoleGroups(int? operation, int? id, int? roleId, string name, bool? removeIfEmpty)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_Op_RoleGroups", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@operation", operation, DbType.Int32, 0, 10);
        	
            sp.Command.AddOutputParameter("@id", DbType.Int32, 0, 10);
            
            sp.Command.AddParameter("@roleId", roleId, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@name", name, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@removeIfEmpty", removeIfEmpty, DbType.Boolean, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_Op_Roles Procedure
        /// </summary>
        public static StoredProcedure SpSsoOpRoles(int? operation, int? id, int? parentId, string name)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_Op_Roles", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@operation", operation, DbType.Int32, 0, 10);
        	
            sp.Command.AddOutputParameter("@id", DbType.Int32, 0, 10);
            
            sp.Command.AddParameter("@parentId", parentId, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@name", name, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_Op_Users Procedure
        /// </summary>
        public static StoredProcedure SpSsoOpUsers(int? operation, int? id, string username, string name, string surname, string description, string email, string externalid, string password, bool? mustchangepassword, bool? enabled, int? roleId, int? resultKey)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_Op_Users", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@operation", operation, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@id", id, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@username", username, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@name", name, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@surname", surname, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@description", description, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@email", email, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@external_id", externalid, DbType.String, null, null);
        	
            sp.Command.AddParameter("@password", password, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@must_change_password", mustchangepassword, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@enabled", enabled, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@roleId", roleId, DbType.Int32, 0, 10);
        	
            sp.Command.AddOutputParameter("@resultKey", DbType.Int32, 0, 10);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_PasswordRequeriments Procedure
        /// </summary>
        public static StoredProcedure SpSsoPasswordRequeriments()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_PasswordRequeriments", DataService.GetInstance("depProvider"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_SetStoredVariable Procedure
        /// </summary>
        public static StoredProcedure SpSsoSetStoredVariable(string variable, int? targetType, int? target, string valueX)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_SetStoredVariable", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@variable", variable, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@targetType", targetType, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@target", target, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@value", valueX, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_SetTargetPermission Procedure
        /// </summary>
        public static StoredProcedure SpSsoSetTargetPermission(int? sourceType, int? source, int? targetType, int? target, bool? add, bool? allow, bool? readonlyX, bool? removeGroupIfNoPermissions, DateTime? endDate)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_SetTargetPermission", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@sourceType", sourceType, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@source", source, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@targetType", targetType, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@target", target, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@add", add, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@allow", allow, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@readonly", readonlyX, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@removeGroupIfNoPermissions", removeGroupIfNoPermissions, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@endDate", endDate, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_SetUserSetting Procedure
        /// </summary>
        public static StoredProcedure SpSsoSetUserSetting(int? userId, string settingId, string valueX)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_SetUserSetting", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@userId", userId, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@settingId", settingId, DbType.String, null, null);
        	
            sp.Command.AddParameter("@value", valueX, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_UpdateViewName Procedure
        /// </summary>
        public static StoredProcedure SpSsoUpdateViewName(int? applicationId)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_UpdateViewName", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@applicationId", applicationId, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_UpdateViews Procedure
        /// </summary>
        public static StoredProcedure SpSsoUpdateViews(int? applicationId, string viewFunction, string variableFunction)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_UpdateViews", DataService.GetInstance("depProvider"), "dbo");
        	
            sp.Command.AddParameter("@applicationId", applicationId, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@viewFunction", viewFunction, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@variableFunction", variableFunction, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
    }
    
}
