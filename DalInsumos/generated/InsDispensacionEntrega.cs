using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DalInsumos
{
	/// <summary>
	/// Strongly-typed collection for the InsDispensacionEntrega class.
	/// </summary>
    [Serializable]
	public partial class InsDispensacionEntregaCollection : ActiveList<InsDispensacionEntrega, InsDispensacionEntregaCollection>
	{	   
		public InsDispensacionEntregaCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>InsDispensacionEntregaCollection</returns>
		public InsDispensacionEntregaCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                InsDispensacionEntrega o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the INS_DispensacionEntrega table.
	/// </summary>
	[Serializable]
	public partial class InsDispensacionEntrega : ActiveRecord<InsDispensacionEntrega>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public InsDispensacionEntrega()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public InsDispensacionEntrega(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public InsDispensacionEntrega(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public InsDispensacionEntrega(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("INS_DispensacionEntrega", TableType.Table, DataService.GetInstance("insProvider"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdDispensacionEntrega = new TableSchema.TableColumn(schema);
				colvarIdDispensacionEntrega.ColumnName = "idDispensacionEntrega";
				colvarIdDispensacionEntrega.DataType = DbType.Int32;
				colvarIdDispensacionEntrega.MaxLength = 0;
				colvarIdDispensacionEntrega.AutoIncrement = true;
				colvarIdDispensacionEntrega.IsNullable = false;
				colvarIdDispensacionEntrega.IsPrimaryKey = true;
				colvarIdDispensacionEntrega.IsForeignKey = false;
				colvarIdDispensacionEntrega.IsReadOnly = false;
				colvarIdDispensacionEntrega.DefaultSetting = @"";
				colvarIdDispensacionEntrega.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdDispensacionEntrega);
				
				TableSchema.TableColumn colvarIdDispensacionDetalle = new TableSchema.TableColumn(schema);
				colvarIdDispensacionDetalle.ColumnName = "idDispensacionDetalle";
				colvarIdDispensacionDetalle.DataType = DbType.Int32;
				colvarIdDispensacionDetalle.MaxLength = 0;
				colvarIdDispensacionDetalle.AutoIncrement = false;
				colvarIdDispensacionDetalle.IsNullable = false;
				colvarIdDispensacionDetalle.IsPrimaryKey = false;
				colvarIdDispensacionDetalle.IsForeignKey = true;
				colvarIdDispensacionDetalle.IsReadOnly = false;
				colvarIdDispensacionDetalle.DefaultSetting = @"";
				
					colvarIdDispensacionDetalle.ForeignKeyTableName = "INS_DispensacionDetalle";
				schema.Columns.Add(colvarIdDispensacionDetalle);
				
				TableSchema.TableColumn colvarCantidad = new TableSchema.TableColumn(schema);
				colvarCantidad.ColumnName = "cantidad";
				colvarCantidad.DataType = DbType.Int32;
				colvarCantidad.MaxLength = 0;
				colvarCantidad.AutoIncrement = false;
				colvarCantidad.IsNullable = false;
				colvarCantidad.IsPrimaryKey = false;
				colvarCantidad.IsForeignKey = false;
				colvarCantidad.IsReadOnly = false;
				colvarCantidad.DefaultSetting = @"";
				colvarCantidad.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCantidad);
				
				TableSchema.TableColumn colvarFecha = new TableSchema.TableColumn(schema);
				colvarFecha.ColumnName = "fecha";
				colvarFecha.DataType = DbType.DateTime;
				colvarFecha.MaxLength = 0;
				colvarFecha.AutoIncrement = false;
				colvarFecha.IsNullable = false;
				colvarFecha.IsPrimaryKey = false;
				colvarFecha.IsForeignKey = false;
				colvarFecha.IsReadOnly = false;
				colvarFecha.DefaultSetting = @"";
				colvarFecha.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFecha);
				
				TableSchema.TableColumn colvarIdPedidoDetalle = new TableSchema.TableColumn(schema);
				colvarIdPedidoDetalle.ColumnName = "idPedidoDetalle";
				colvarIdPedidoDetalle.DataType = DbType.Int32;
				colvarIdPedidoDetalle.MaxLength = 0;
				colvarIdPedidoDetalle.AutoIncrement = false;
				colvarIdPedidoDetalle.IsNullable = false;
				colvarIdPedidoDetalle.IsPrimaryKey = false;
				colvarIdPedidoDetalle.IsForeignKey = true;
				colvarIdPedidoDetalle.IsReadOnly = false;
				
						colvarIdPedidoDetalle.DefaultSetting = @"((0))";
				
					colvarIdPedidoDetalle.ForeignKeyTableName = "INS_PedidoDetalle";
				schema.Columns.Add(colvarIdPedidoDetalle);
				
				TableSchema.TableColumn colvarIdPaciente = new TableSchema.TableColumn(schema);
				colvarIdPaciente.ColumnName = "idPaciente";
				colvarIdPaciente.DataType = DbType.Int32;
				colvarIdPaciente.MaxLength = 0;
				colvarIdPaciente.AutoIncrement = false;
				colvarIdPaciente.IsNullable = false;
				colvarIdPaciente.IsPrimaryKey = false;
				colvarIdPaciente.IsForeignKey = false;
				colvarIdPaciente.IsReadOnly = false;
				colvarIdPaciente.DefaultSetting = @"";
				colvarIdPaciente.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdPaciente);
				
				TableSchema.TableColumn colvarIdInsumo = new TableSchema.TableColumn(schema);
				colvarIdInsumo.ColumnName = "idInsumo";
				colvarIdInsumo.DataType = DbType.Int32;
				colvarIdInsumo.MaxLength = 0;
				colvarIdInsumo.AutoIncrement = false;
				colvarIdInsumo.IsNullable = false;
				colvarIdInsumo.IsPrimaryKey = false;
				colvarIdInsumo.IsForeignKey = false;
				colvarIdInsumo.IsReadOnly = false;
				colvarIdInsumo.DefaultSetting = @"";
				colvarIdInsumo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdInsumo);
				
				TableSchema.TableColumn colvarNumeroLote = new TableSchema.TableColumn(schema);
				colvarNumeroLote.ColumnName = "numeroLote";
				colvarNumeroLote.DataType = DbType.AnsiString;
				colvarNumeroLote.MaxLength = 50;
				colvarNumeroLote.AutoIncrement = false;
				colvarNumeroLote.IsNullable = false;
				colvarNumeroLote.IsPrimaryKey = false;
				colvarNumeroLote.IsForeignKey = false;
				colvarNumeroLote.IsReadOnly = false;
				colvarNumeroLote.DefaultSetting = @"";
				colvarNumeroLote.ForeignKeyTableName = "";
				schema.Columns.Add(colvarNumeroLote);
				
				TableSchema.TableColumn colvarFechaVencimiento = new TableSchema.TableColumn(schema);
				colvarFechaVencimiento.ColumnName = "fechaVencimiento";
				colvarFechaVencimiento.DataType = DbType.DateTime;
				colvarFechaVencimiento.MaxLength = 0;
				colvarFechaVencimiento.AutoIncrement = false;
				colvarFechaVencimiento.IsNullable = false;
				colvarFechaVencimiento.IsPrimaryKey = false;
				colvarFechaVencimiento.IsForeignKey = false;
				colvarFechaVencimiento.IsReadOnly = false;
				colvarFechaVencimiento.DefaultSetting = @"";
				colvarFechaVencimiento.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFechaVencimiento);
				
				TableSchema.TableColumn colvarCreatedBy = new TableSchema.TableColumn(schema);
				colvarCreatedBy.ColumnName = "CreatedBy";
				colvarCreatedBy.DataType = DbType.AnsiString;
				colvarCreatedBy.MaxLength = 50;
				colvarCreatedBy.AutoIncrement = false;
				colvarCreatedBy.IsNullable = false;
				colvarCreatedBy.IsPrimaryKey = false;
				colvarCreatedBy.IsForeignKey = false;
				colvarCreatedBy.IsReadOnly = false;
				
						colvarCreatedBy.DefaultSetting = @"('')";
				colvarCreatedBy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCreatedBy);
				
				TableSchema.TableColumn colvarCreatedOn = new TableSchema.TableColumn(schema);
				colvarCreatedOn.ColumnName = "CreatedOn";
				colvarCreatedOn.DataType = DbType.DateTime;
				colvarCreatedOn.MaxLength = 0;
				colvarCreatedOn.AutoIncrement = false;
				colvarCreatedOn.IsNullable = false;
				colvarCreatedOn.IsPrimaryKey = false;
				colvarCreatedOn.IsForeignKey = false;
				colvarCreatedOn.IsReadOnly = false;
				
						colvarCreatedOn.DefaultSetting = @"(((1)/(1))/(1900))";
				colvarCreatedOn.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCreatedOn);
				
				TableSchema.TableColumn colvarModifiedBy = new TableSchema.TableColumn(schema);
				colvarModifiedBy.ColumnName = "ModifiedBy";
				colvarModifiedBy.DataType = DbType.AnsiString;
				colvarModifiedBy.MaxLength = 50;
				colvarModifiedBy.AutoIncrement = false;
				colvarModifiedBy.IsNullable = false;
				colvarModifiedBy.IsPrimaryKey = false;
				colvarModifiedBy.IsForeignKey = false;
				colvarModifiedBy.IsReadOnly = false;
				
						colvarModifiedBy.DefaultSetting = @"('')";
				colvarModifiedBy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarModifiedBy);
				
				TableSchema.TableColumn colvarModifiedOn = new TableSchema.TableColumn(schema);
				colvarModifiedOn.ColumnName = "ModifiedOn";
				colvarModifiedOn.DataType = DbType.DateTime;
				colvarModifiedOn.MaxLength = 0;
				colvarModifiedOn.AutoIncrement = false;
				colvarModifiedOn.IsNullable = false;
				colvarModifiedOn.IsPrimaryKey = false;
				colvarModifiedOn.IsForeignKey = false;
				colvarModifiedOn.IsReadOnly = false;
				
						colvarModifiedOn.DefaultSetting = @"(((1)/(1))/(1900))";
				colvarModifiedOn.ForeignKeyTableName = "";
				schema.Columns.Add(colvarModifiedOn);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["insProvider"].AddSchema("INS_DispensacionEntrega",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdDispensacionEntrega")]
		[Bindable(true)]
		public int IdDispensacionEntrega 
		{
			get { return GetColumnValue<int>(Columns.IdDispensacionEntrega); }
			set { SetColumnValue(Columns.IdDispensacionEntrega, value); }
		}
		  
		[XmlAttribute("IdDispensacionDetalle")]
		[Bindable(true)]
		public int IdDispensacionDetalle 
		{
			get { return GetColumnValue<int>(Columns.IdDispensacionDetalle); }
			set { SetColumnValue(Columns.IdDispensacionDetalle, value); }
		}
		  
		[XmlAttribute("Cantidad")]
		[Bindable(true)]
		public int Cantidad 
		{
			get { return GetColumnValue<int>(Columns.Cantidad); }
			set { SetColumnValue(Columns.Cantidad, value); }
		}
		  
		[XmlAttribute("Fecha")]
		[Bindable(true)]
		public DateTime Fecha 
		{
			get { return GetColumnValue<DateTime>(Columns.Fecha); }
			set { SetColumnValue(Columns.Fecha, value); }
		}
		  
		[XmlAttribute("IdPedidoDetalle")]
		[Bindable(true)]
		public int IdPedidoDetalle 
		{
			get { return GetColumnValue<int>(Columns.IdPedidoDetalle); }
			set { SetColumnValue(Columns.IdPedidoDetalle, value); }
		}
		  
		[XmlAttribute("IdPaciente")]
		[Bindable(true)]
		public int IdPaciente 
		{
			get { return GetColumnValue<int>(Columns.IdPaciente); }
			set { SetColumnValue(Columns.IdPaciente, value); }
		}
		  
		[XmlAttribute("IdInsumo")]
		[Bindable(true)]
		public int IdInsumo 
		{
			get { return GetColumnValue<int>(Columns.IdInsumo); }
			set { SetColumnValue(Columns.IdInsumo, value); }
		}
		  
		[XmlAttribute("NumeroLote")]
		[Bindable(true)]
		public string NumeroLote 
		{
			get { return GetColumnValue<string>(Columns.NumeroLote); }
			set { SetColumnValue(Columns.NumeroLote, value); }
		}
		  
		[XmlAttribute("FechaVencimiento")]
		[Bindable(true)]
		public DateTime FechaVencimiento 
		{
			get { return GetColumnValue<DateTime>(Columns.FechaVencimiento); }
			set { SetColumnValue(Columns.FechaVencimiento, value); }
		}
		  
		[XmlAttribute("CreatedBy")]
		[Bindable(true)]
		public string CreatedBy 
		{
			get { return GetColumnValue<string>(Columns.CreatedBy); }
			set { SetColumnValue(Columns.CreatedBy, value); }
		}
		  
		[XmlAttribute("CreatedOn")]
		[Bindable(true)]
		public DateTime CreatedOn 
		{
			get { return GetColumnValue<DateTime>(Columns.CreatedOn); }
			set { SetColumnValue(Columns.CreatedOn, value); }
		}
		  
		[XmlAttribute("ModifiedBy")]
		[Bindable(true)]
		public string ModifiedBy 
		{
			get { return GetColumnValue<string>(Columns.ModifiedBy); }
			set { SetColumnValue(Columns.ModifiedBy, value); }
		}
		  
		[XmlAttribute("ModifiedOn")]
		[Bindable(true)]
		public DateTime ModifiedOn 
		{
			get { return GetColumnValue<DateTime>(Columns.ModifiedOn); }
			set { SetColumnValue(Columns.ModifiedOn, value); }
		}
		
		#endregion
		
		
			
		
		#region ForeignKey Properties
		
		/// <summary>
		/// Returns a InsPedidoDetalle ActiveRecord object related to this InsDispensacionEntrega
		/// 
		/// </summary>
		public DalInsumos.InsPedidoDetalle InsPedidoDetalle
		{
			get { return DalInsumos.InsPedidoDetalle.FetchByID(this.IdPedidoDetalle); }
			set { SetColumnValue("idPedidoDetalle", value.IdPedidoDetalle); }
		}
		
		
		/// <summary>
		/// Returns a InsDispensacionDetalle ActiveRecord object related to this InsDispensacionEntrega
		/// 
		/// </summary>
		public DalInsumos.InsDispensacionDetalle InsDispensacionDetalle
		{
			get { return DalInsumos.InsDispensacionDetalle.FetchByID(this.IdDispensacionDetalle); }
			set { SetColumnValue("idDispensacionDetalle", value.IdDispensacionDetalle); }
		}
		
		
		#endregion
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(int varIdDispensacionDetalle,int varCantidad,DateTime varFecha,int varIdPedidoDetalle,int varIdPaciente,int varIdInsumo,string varNumeroLote,DateTime varFechaVencimiento,string varCreatedBy,DateTime varCreatedOn,string varModifiedBy,DateTime varModifiedOn)
		{
			InsDispensacionEntrega item = new InsDispensacionEntrega();
			
			item.IdDispensacionDetalle = varIdDispensacionDetalle;
			
			item.Cantidad = varCantidad;
			
			item.Fecha = varFecha;
			
			item.IdPedidoDetalle = varIdPedidoDetalle;
			
			item.IdPaciente = varIdPaciente;
			
			item.IdInsumo = varIdInsumo;
			
			item.NumeroLote = varNumeroLote;
			
			item.FechaVencimiento = varFechaVencimiento;
			
			item.CreatedBy = varCreatedBy;
			
			item.CreatedOn = varCreatedOn;
			
			item.ModifiedBy = varModifiedBy;
			
			item.ModifiedOn = varModifiedOn;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varIdDispensacionEntrega,int varIdDispensacionDetalle,int varCantidad,DateTime varFecha,int varIdPedidoDetalle,int varIdPaciente,int varIdInsumo,string varNumeroLote,DateTime varFechaVencimiento,string varCreatedBy,DateTime varCreatedOn,string varModifiedBy,DateTime varModifiedOn)
		{
			InsDispensacionEntrega item = new InsDispensacionEntrega();
			
				item.IdDispensacionEntrega = varIdDispensacionEntrega;
			
				item.IdDispensacionDetalle = varIdDispensacionDetalle;
			
				item.Cantidad = varCantidad;
			
				item.Fecha = varFecha;
			
				item.IdPedidoDetalle = varIdPedidoDetalle;
			
				item.IdPaciente = varIdPaciente;
			
				item.IdInsumo = varIdInsumo;
			
				item.NumeroLote = varNumeroLote;
			
				item.FechaVencimiento = varFechaVencimiento;
			
				item.CreatedBy = varCreatedBy;
			
				item.CreatedOn = varCreatedOn;
			
				item.ModifiedBy = varModifiedBy;
			
				item.ModifiedOn = varModifiedOn;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdDispensacionEntregaColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn IdDispensacionDetalleColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn CantidadColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn FechaColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn IdPedidoDetalleColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn IdPacienteColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn IdInsumoColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn NumeroLoteColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn FechaVencimientoColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn CreatedByColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn CreatedOnColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn ModifiedByColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn ModifiedOnColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdDispensacionEntrega = @"idDispensacionEntrega";
			 public static string IdDispensacionDetalle = @"idDispensacionDetalle";
			 public static string Cantidad = @"cantidad";
			 public static string Fecha = @"fecha";
			 public static string IdPedidoDetalle = @"idPedidoDetalle";
			 public static string IdPaciente = @"idPaciente";
			 public static string IdInsumo = @"idInsumo";
			 public static string NumeroLote = @"numeroLote";
			 public static string FechaVencimiento = @"fechaVencimiento";
			 public static string CreatedBy = @"CreatedBy";
			 public static string CreatedOn = @"CreatedOn";
			 public static string ModifiedBy = @"ModifiedBy";
			 public static string ModifiedOn = @"ModifiedOn";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
