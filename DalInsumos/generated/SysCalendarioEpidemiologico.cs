using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DalInsumos
{
	/// <summary>
	/// Strongly-typed collection for the SysCalendarioEpidemiologico class.
	/// </summary>
    [Serializable]
	public partial class SysCalendarioEpidemiologicoCollection : ActiveList<SysCalendarioEpidemiologico, SysCalendarioEpidemiologicoCollection>
	{	   
		public SysCalendarioEpidemiologicoCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>SysCalendarioEpidemiologicoCollection</returns>
		public SysCalendarioEpidemiologicoCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                SysCalendarioEpidemiologico o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the Sys_CalendarioEpidemiologico table.
	/// </summary>
	[Serializable]
	public partial class SysCalendarioEpidemiologico : ActiveRecord<SysCalendarioEpidemiologico>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public SysCalendarioEpidemiologico()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public SysCalendarioEpidemiologico(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public SysCalendarioEpidemiologico(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public SysCalendarioEpidemiologico(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("Sys_CalendarioEpidemiologico", TableType.Table, DataService.GetInstance("insProvider"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdCalendarioEpidemiologico = new TableSchema.TableColumn(schema);
				colvarIdCalendarioEpidemiologico.ColumnName = "idCalendarioEpidemiologico";
				colvarIdCalendarioEpidemiologico.DataType = DbType.Int32;
				colvarIdCalendarioEpidemiologico.MaxLength = 0;
				colvarIdCalendarioEpidemiologico.AutoIncrement = true;
				colvarIdCalendarioEpidemiologico.IsNullable = false;
				colvarIdCalendarioEpidemiologico.IsPrimaryKey = true;
				colvarIdCalendarioEpidemiologico.IsForeignKey = false;
				colvarIdCalendarioEpidemiologico.IsReadOnly = false;
				colvarIdCalendarioEpidemiologico.DefaultSetting = @"";
				colvarIdCalendarioEpidemiologico.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdCalendarioEpidemiologico);
				
				TableSchema.TableColumn colvarSemana = new TableSchema.TableColumn(schema);
				colvarSemana.ColumnName = "semana";
				colvarSemana.DataType = DbType.Int32;
				colvarSemana.MaxLength = 0;
				colvarSemana.AutoIncrement = false;
				colvarSemana.IsNullable = false;
				colvarSemana.IsPrimaryKey = false;
				colvarSemana.IsForeignKey = false;
				colvarSemana.IsReadOnly = false;
				colvarSemana.DefaultSetting = @"";
				colvarSemana.ForeignKeyTableName = "";
				schema.Columns.Add(colvarSemana);
				
				TableSchema.TableColumn colvarAnio = new TableSchema.TableColumn(schema);
				colvarAnio.ColumnName = "anio";
				colvarAnio.DataType = DbType.Int32;
				colvarAnio.MaxLength = 0;
				colvarAnio.AutoIncrement = false;
				colvarAnio.IsNullable = false;
				colvarAnio.IsPrimaryKey = false;
				colvarAnio.IsForeignKey = false;
				colvarAnio.IsReadOnly = false;
				colvarAnio.DefaultSetting = @"";
				colvarAnio.ForeignKeyTableName = "";
				schema.Columns.Add(colvarAnio);
				
				TableSchema.TableColumn colvarFechaDesde = new TableSchema.TableColumn(schema);
				colvarFechaDesde.ColumnName = "fechaDesde";
				colvarFechaDesde.DataType = DbType.DateTime;
				colvarFechaDesde.MaxLength = 0;
				colvarFechaDesde.AutoIncrement = false;
				colvarFechaDesde.IsNullable = false;
				colvarFechaDesde.IsPrimaryKey = false;
				colvarFechaDesde.IsForeignKey = false;
				colvarFechaDesde.IsReadOnly = false;
				
						colvarFechaDesde.DefaultSetting = @"('01/01/1900')";
				colvarFechaDesde.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFechaDesde);
				
				TableSchema.TableColumn colvarFechaHasta = new TableSchema.TableColumn(schema);
				colvarFechaHasta.ColumnName = "fechaHasta";
				colvarFechaHasta.DataType = DbType.DateTime;
				colvarFechaHasta.MaxLength = 0;
				colvarFechaHasta.AutoIncrement = false;
				colvarFechaHasta.IsNullable = false;
				colvarFechaHasta.IsPrimaryKey = false;
				colvarFechaHasta.IsForeignKey = false;
				colvarFechaHasta.IsReadOnly = false;
				
						colvarFechaHasta.DefaultSetting = @"('01/01/1900')";
				colvarFechaHasta.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFechaHasta);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["insProvider"].AddSchema("Sys_CalendarioEpidemiologico",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdCalendarioEpidemiologico")]
		[Bindable(true)]
		public int IdCalendarioEpidemiologico 
		{
			get { return GetColumnValue<int>(Columns.IdCalendarioEpidemiologico); }
			set { SetColumnValue(Columns.IdCalendarioEpidemiologico, value); }
		}
		  
		[XmlAttribute("Semana")]
		[Bindable(true)]
		public int Semana 
		{
			get { return GetColumnValue<int>(Columns.Semana); }
			set { SetColumnValue(Columns.Semana, value); }
		}
		  
		[XmlAttribute("Anio")]
		[Bindable(true)]
		public int Anio 
		{
			get { return GetColumnValue<int>(Columns.Anio); }
			set { SetColumnValue(Columns.Anio, value); }
		}
		  
		[XmlAttribute("FechaDesde")]
		[Bindable(true)]
		public DateTime FechaDesde 
		{
			get { return GetColumnValue<DateTime>(Columns.FechaDesde); }
			set { SetColumnValue(Columns.FechaDesde, value); }
		}
		  
		[XmlAttribute("FechaHasta")]
		[Bindable(true)]
		public DateTime FechaHasta 
		{
			get { return GetColumnValue<DateTime>(Columns.FechaHasta); }
			set { SetColumnValue(Columns.FechaHasta, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(int varSemana,int varAnio,DateTime varFechaDesde,DateTime varFechaHasta)
		{
			SysCalendarioEpidemiologico item = new SysCalendarioEpidemiologico();
			
			item.Semana = varSemana;
			
			item.Anio = varAnio;
			
			item.FechaDesde = varFechaDesde;
			
			item.FechaHasta = varFechaHasta;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varIdCalendarioEpidemiologico,int varSemana,int varAnio,DateTime varFechaDesde,DateTime varFechaHasta)
		{
			SysCalendarioEpidemiologico item = new SysCalendarioEpidemiologico();
			
				item.IdCalendarioEpidemiologico = varIdCalendarioEpidemiologico;
			
				item.Semana = varSemana;
			
				item.Anio = varAnio;
			
				item.FechaDesde = varFechaDesde;
			
				item.FechaHasta = varFechaHasta;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdCalendarioEpidemiologicoColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn SemanaColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn AnioColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn FechaDesdeColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn FechaHastaColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdCalendarioEpidemiologico = @"idCalendarioEpidemiologico";
			 public static string Semana = @"semana";
			 public static string Anio = @"anio";
			 public static string FechaDesde = @"fechaDesde";
			 public static string FechaHasta = @"fechaHasta";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
