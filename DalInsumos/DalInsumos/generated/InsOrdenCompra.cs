using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DalInsumos
{
	/// <summary>
	/// Strongly-typed collection for the InsOrdenCompra class.
	/// </summary>
    [Serializable]
	public partial class InsOrdenCompraCollection : ActiveList<InsOrdenCompra, InsOrdenCompraCollection>
	{	   
		public InsOrdenCompraCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>InsOrdenCompraCollection</returns>
		public InsOrdenCompraCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                InsOrdenCompra o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the INS_OrdenCompra table.
	/// </summary>
	[Serializable]
	public partial class InsOrdenCompra : ActiveRecord<InsOrdenCompra>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public InsOrdenCompra()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public InsOrdenCompra(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public InsOrdenCompra(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public InsOrdenCompra(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("INS_OrdenCompra", TableType.Table, DataService.GetInstance("insProvider"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdOrdenCompra = new TableSchema.TableColumn(schema);
				colvarIdOrdenCompra.ColumnName = "idOrdenCompra";
				colvarIdOrdenCompra.DataType = DbType.Int32;
				colvarIdOrdenCompra.MaxLength = 0;
				colvarIdOrdenCompra.AutoIncrement = false;
				colvarIdOrdenCompra.IsNullable = false;
				colvarIdOrdenCompra.IsPrimaryKey = true;
				colvarIdOrdenCompra.IsForeignKey = false;
				colvarIdOrdenCompra.IsReadOnly = false;
				colvarIdOrdenCompra.DefaultSetting = @"";
				colvarIdOrdenCompra.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdOrdenCompra);
				
				TableSchema.TableColumn colvarCodigo = new TableSchema.TableColumn(schema);
				colvarCodigo.ColumnName = "codigo";
				colvarCodigo.DataType = DbType.Int32;
				colvarCodigo.MaxLength = 0;
				colvarCodigo.AutoIncrement = false;
				colvarCodigo.IsNullable = true;
				colvarCodigo.IsPrimaryKey = false;
				colvarCodigo.IsForeignKey = false;
				colvarCodigo.IsReadOnly = false;
				colvarCodigo.DefaultSetting = @"";
				colvarCodigo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCodigo);
				
				TableSchema.TableColumn colvarFecha = new TableSchema.TableColumn(schema);
				colvarFecha.ColumnName = "fecha";
				colvarFecha.DataType = DbType.DateTime;
				colvarFecha.MaxLength = 0;
				colvarFecha.AutoIncrement = false;
				colvarFecha.IsNullable = true;
				colvarFecha.IsPrimaryKey = false;
				colvarFecha.IsForeignKey = false;
				colvarFecha.IsReadOnly = false;
				colvarFecha.DefaultSetting = @"";
				colvarFecha.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFecha);
				
				TableSchema.TableColumn colvarIdInsumo = new TableSchema.TableColumn(schema);
				colvarIdInsumo.ColumnName = "idInsumo";
				colvarIdInsumo.DataType = DbType.Int32;
				colvarIdInsumo.MaxLength = 0;
				colvarIdInsumo.AutoIncrement = false;
				colvarIdInsumo.IsNullable = true;
				colvarIdInsumo.IsPrimaryKey = false;
				colvarIdInsumo.IsForeignKey = false;
				colvarIdInsumo.IsReadOnly = false;
				colvarIdInsumo.DefaultSetting = @"";
				colvarIdInsumo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdInsumo);
				
				TableSchema.TableColumn colvarPrecioUnitario = new TableSchema.TableColumn(schema);
				colvarPrecioUnitario.ColumnName = "precioUnitario";
				colvarPrecioUnitario.DataType = DbType.Decimal;
				colvarPrecioUnitario.MaxLength = 0;
				colvarPrecioUnitario.AutoIncrement = false;
				colvarPrecioUnitario.IsNullable = true;
				colvarPrecioUnitario.IsPrimaryKey = false;
				colvarPrecioUnitario.IsForeignKey = false;
				colvarPrecioUnitario.IsReadOnly = false;
				colvarPrecioUnitario.DefaultSetting = @"";
				colvarPrecioUnitario.ForeignKeyTableName = "";
				schema.Columns.Add(colvarPrecioUnitario);
				
				TableSchema.TableColumn colvarRenglon = new TableSchema.TableColumn(schema);
				colvarRenglon.ColumnName = "renglon";
				colvarRenglon.DataType = DbType.Int32;
				colvarRenglon.MaxLength = 0;
				colvarRenglon.AutoIncrement = false;
				colvarRenglon.IsNullable = true;
				colvarRenglon.IsPrimaryKey = false;
				colvarRenglon.IsForeignKey = false;
				colvarRenglon.IsReadOnly = false;
				colvarRenglon.DefaultSetting = @"";
				colvarRenglon.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRenglon);
				
				TableSchema.TableColumn colvarIdProveedor = new TableSchema.TableColumn(schema);
				colvarIdProveedor.ColumnName = "idProveedor";
				colvarIdProveedor.DataType = DbType.Int32;
				colvarIdProveedor.MaxLength = 0;
				colvarIdProveedor.AutoIncrement = false;
				colvarIdProveedor.IsNullable = true;
				colvarIdProveedor.IsPrimaryKey = false;
				colvarIdProveedor.IsForeignKey = false;
				colvarIdProveedor.IsReadOnly = false;
				colvarIdProveedor.DefaultSetting = @"";
				colvarIdProveedor.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdProveedor);
				
				TableSchema.TableColumn colvarObservaciones = new TableSchema.TableColumn(schema);
				colvarObservaciones.ColumnName = "observaciones";
				colvarObservaciones.DataType = DbType.AnsiString;
				colvarObservaciones.MaxLength = 1000;
				colvarObservaciones.AutoIncrement = false;
				colvarObservaciones.IsNullable = true;
				colvarObservaciones.IsPrimaryKey = false;
				colvarObservaciones.IsForeignKey = false;
				colvarObservaciones.IsReadOnly = false;
				colvarObservaciones.DefaultSetting = @"";
				colvarObservaciones.ForeignKeyTableName = "";
				schema.Columns.Add(colvarObservaciones);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["insProvider"].AddSchema("INS_OrdenCompra",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdOrdenCompra")]
		[Bindable(true)]
		public int IdOrdenCompra 
		{
			get { return GetColumnValue<int>(Columns.IdOrdenCompra); }
			set { SetColumnValue(Columns.IdOrdenCompra, value); }
		}
		  
		[XmlAttribute("Codigo")]
		[Bindable(true)]
		public int? Codigo 
		{
			get { return GetColumnValue<int?>(Columns.Codigo); }
			set { SetColumnValue(Columns.Codigo, value); }
		}
		  
		[XmlAttribute("Fecha")]
		[Bindable(true)]
		public DateTime? Fecha 
		{
			get { return GetColumnValue<DateTime?>(Columns.Fecha); }
			set { SetColumnValue(Columns.Fecha, value); }
		}
		  
		[XmlAttribute("IdInsumo")]
		[Bindable(true)]
		public int? IdInsumo 
		{
			get { return GetColumnValue<int?>(Columns.IdInsumo); }
			set { SetColumnValue(Columns.IdInsumo, value); }
		}
		  
		[XmlAttribute("PrecioUnitario")]
		[Bindable(true)]
		public decimal? PrecioUnitario 
		{
			get { return GetColumnValue<decimal?>(Columns.PrecioUnitario); }
			set { SetColumnValue(Columns.PrecioUnitario, value); }
		}
		  
		[XmlAttribute("Renglon")]
		[Bindable(true)]
		public int? Renglon 
		{
			get { return GetColumnValue<int?>(Columns.Renglon); }
			set { SetColumnValue(Columns.Renglon, value); }
		}
		  
		[XmlAttribute("IdProveedor")]
		[Bindable(true)]
		public int? IdProveedor 
		{
			get { return GetColumnValue<int?>(Columns.IdProveedor); }
			set { SetColumnValue(Columns.IdProveedor, value); }
		}
		  
		[XmlAttribute("Observaciones")]
		[Bindable(true)]
		public string Observaciones 
		{
			get { return GetColumnValue<string>(Columns.Observaciones); }
			set { SetColumnValue(Columns.Observaciones, value); }
		}
		
		#endregion
		
		
			
		
		//no foreign key tables defined (0)
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(int varIdOrdenCompra,int? varCodigo,DateTime? varFecha,int? varIdInsumo,decimal? varPrecioUnitario,int? varRenglon,int? varIdProveedor,string varObservaciones)
		{
			InsOrdenCompra item = new InsOrdenCompra();
			
			item.IdOrdenCompra = varIdOrdenCompra;
			
			item.Codigo = varCodigo;
			
			item.Fecha = varFecha;
			
			item.IdInsumo = varIdInsumo;
			
			item.PrecioUnitario = varPrecioUnitario;
			
			item.Renglon = varRenglon;
			
			item.IdProveedor = varIdProveedor;
			
			item.Observaciones = varObservaciones;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varIdOrdenCompra,int? varCodigo,DateTime? varFecha,int? varIdInsumo,decimal? varPrecioUnitario,int? varRenglon,int? varIdProveedor,string varObservaciones)
		{
			InsOrdenCompra item = new InsOrdenCompra();
			
				item.IdOrdenCompra = varIdOrdenCompra;
			
				item.Codigo = varCodigo;
			
				item.Fecha = varFecha;
			
				item.IdInsumo = varIdInsumo;
			
				item.PrecioUnitario = varPrecioUnitario;
			
				item.Renglon = varRenglon;
			
				item.IdProveedor = varIdProveedor;
			
				item.Observaciones = varObservaciones;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdOrdenCompraColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn CodigoColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn FechaColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn IdInsumoColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn PrecioUnitarioColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn RenglonColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn IdProveedorColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn ObservacionesColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdOrdenCompra = @"idOrdenCompra";
			 public static string Codigo = @"codigo";
			 public static string Fecha = @"fecha";
			 public static string IdInsumo = @"idInsumo";
			 public static string PrecioUnitario = @"precioUnitario";
			 public static string Renglon = @"renglon";
			 public static string IdProveedor = @"idProveedor";
			 public static string Observaciones = @"observaciones";
						
		}
		#endregion
		
		#region Update PK Collections
		
        #endregion
    
        #region Deep Save
		
        #endregion
	}
}
