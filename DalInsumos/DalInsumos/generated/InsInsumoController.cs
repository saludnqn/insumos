using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DalInsumos
{
    /// <summary>
    /// Controller class for INS_Insumo
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class InsInsumoController
    {
        // Preload our schema..
        InsInsumo thisSchemaLoad = new InsInsumo();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public InsInsumoCollection FetchAll()
        {
            InsInsumoCollection coll = new InsInsumoCollection();
            Query qry = new Query(InsInsumo.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public InsInsumoCollection FetchByID(object Codigo)
        {
            InsInsumoCollection coll = new InsInsumoCollection().Where("Codigo", Codigo).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public InsInsumoCollection FetchByQuery(Query qry)
        {
            InsInsumoCollection coll = new InsInsumoCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object Codigo)
        {
            return (InsInsumo.Delete(Codigo) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object Codigo)
        {
            return (InsInsumo.Destroy(Codigo) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(int Codigo,byte Sistema,int Rubro,string CodigoSss,string RubroSss,string CodigoOms,string Nombre,string Descripcion,string Observaciones,string Unidad,bool NecesitaVencimiento,bool AlarmaActiva,byte AlarmaPrioridad,int AlarmaPeriodo,int AlarmaVencimiento,int AlarmaCantidad,int PeriodoControl,bool Activo,bool? FarmaciaNivel,bool? FarmaciaNecesitaReceta,string Composicion,string AccionTerapeutica,string Contraindicaciones,bool Verificado,DateTime UltimaModificacion)
	    {
		    InsInsumo item = new InsInsumo();
		    
            item.Codigo = Codigo;
            
            item.Sistema = Sistema;
            
            item.Rubro = Rubro;
            
            item.CodigoSss = CodigoSss;
            
            item.RubroSss = RubroSss;
            
            item.CodigoOms = CodigoOms;
            
            item.Nombre = Nombre;
            
            item.Descripcion = Descripcion;
            
            item.Observaciones = Observaciones;
            
            item.Unidad = Unidad;
            
            item.NecesitaVencimiento = NecesitaVencimiento;
            
            item.AlarmaActiva = AlarmaActiva;
            
            item.AlarmaPrioridad = AlarmaPrioridad;
            
            item.AlarmaPeriodo = AlarmaPeriodo;
            
            item.AlarmaVencimiento = AlarmaVencimiento;
            
            item.AlarmaCantidad = AlarmaCantidad;
            
            item.PeriodoControl = PeriodoControl;
            
            item.Activo = Activo;
            
            item.FarmaciaNivel = FarmaciaNivel;
            
            item.FarmaciaNecesitaReceta = FarmaciaNecesitaReceta;
            
            item.Composicion = Composicion;
            
            item.AccionTerapeutica = AccionTerapeutica;
            
            item.Contraindicaciones = Contraindicaciones;
            
            item.Verificado = Verificado;
            
            item.UltimaModificacion = UltimaModificacion;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int Codigo,byte Sistema,int Rubro,string CodigoSss,string RubroSss,string CodigoOms,string Nombre,string Descripcion,string Observaciones,string Unidad,bool NecesitaVencimiento,bool AlarmaActiva,byte AlarmaPrioridad,int AlarmaPeriodo,int AlarmaVencimiento,int AlarmaCantidad,int PeriodoControl,bool Activo,bool? FarmaciaNivel,bool? FarmaciaNecesitaReceta,string Composicion,string AccionTerapeutica,string Contraindicaciones,bool Verificado,DateTime UltimaModificacion)
	    {
		    InsInsumo item = new InsInsumo();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.Codigo = Codigo;
				
			item.Sistema = Sistema;
				
			item.Rubro = Rubro;
				
			item.CodigoSss = CodigoSss;
				
			item.RubroSss = RubroSss;
				
			item.CodigoOms = CodigoOms;
				
			item.Nombre = Nombre;
				
			item.Descripcion = Descripcion;
				
			item.Observaciones = Observaciones;
				
			item.Unidad = Unidad;
				
			item.NecesitaVencimiento = NecesitaVencimiento;
				
			item.AlarmaActiva = AlarmaActiva;
				
			item.AlarmaPrioridad = AlarmaPrioridad;
				
			item.AlarmaPeriodo = AlarmaPeriodo;
				
			item.AlarmaVencimiento = AlarmaVencimiento;
				
			item.AlarmaCantidad = AlarmaCantidad;
				
			item.PeriodoControl = PeriodoControl;
				
			item.Activo = Activo;
				
			item.FarmaciaNivel = FarmaciaNivel;
				
			item.FarmaciaNecesitaReceta = FarmaciaNecesitaReceta;
				
			item.Composicion = Composicion;
				
			item.AccionTerapeutica = AccionTerapeutica;
				
			item.Contraindicaciones = Contraindicaciones;
				
			item.Verificado = Verificado;
				
			item.UltimaModificacion = UltimaModificacion;
				
	        item.Save(UserName);
	    }
    }
}
