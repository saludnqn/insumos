using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DalInsumos
{
    /// <summary>
    /// Controller class for INS_PedidoDetalle
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class InsPedidoDetalleController
    {
        // Preload our schema..
        InsPedidoDetalle thisSchemaLoad = new InsPedidoDetalle();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public InsPedidoDetalleCollection FetchAll()
        {
            InsPedidoDetalleCollection coll = new InsPedidoDetalleCollection();
            Query qry = new Query(InsPedidoDetalle.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public InsPedidoDetalleCollection FetchByID(object IdPedidoDetalle)
        {
            InsPedidoDetalleCollection coll = new InsPedidoDetalleCollection().Where("idPedidoDetalle", IdPedidoDetalle).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public InsPedidoDetalleCollection FetchByQuery(Query qry)
        {
            InsPedidoDetalleCollection coll = new InsPedidoDetalleCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object IdPedidoDetalle)
        {
            return (InsPedidoDetalle.Delete(IdPedidoDetalle) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object IdPedidoDetalle)
        {
            return (InsPedidoDetalle.Destroy(IdPedidoDetalle) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(int IdPedido,int IdInsumo,DateTime FechaPedido,int Cantidad,int Presentacion,int CantidadSolicitada,int CantidadAutorizada,int CantidadEmitida,int CantidadRecibida,int Stock,decimal PrecioUnitario,string Observacion,int RenglonOC,int Renglon,string NumeroLote,DateTime FechaVencimiento,bool Baja,string CreatedBy,DateTime CreatedOn,string ModifiedBy,DateTime ModifiedOn)
	    {
		    InsPedidoDetalle item = new InsPedidoDetalle();
		    
            item.IdPedido = IdPedido;
            
            item.IdInsumo = IdInsumo;
            
            item.FechaPedido = FechaPedido;
            
            item.Cantidad = Cantidad;
            
            item.Presentacion = Presentacion;
            
            item.CantidadSolicitada = CantidadSolicitada;
            
            item.CantidadAutorizada = CantidadAutorizada;
            
            item.CantidadEmitida = CantidadEmitida;
            
            item.CantidadRecibida = CantidadRecibida;
            
            item.Stock = Stock;
            
            item.PrecioUnitario = PrecioUnitario;
            
            item.Observacion = Observacion;
            
            item.RenglonOC = RenglonOC;
            
            item.Renglon = Renglon;
            
            item.NumeroLote = NumeroLote;
            
            item.FechaVencimiento = FechaVencimiento;
            
            item.Baja = Baja;
            
            item.CreatedBy = CreatedBy;
            
            item.CreatedOn = CreatedOn;
            
            item.ModifiedBy = ModifiedBy;
            
            item.ModifiedOn = ModifiedOn;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(int IdPedidoDetalle,int IdPedido,int IdInsumo,DateTime FechaPedido,int Cantidad,int Presentacion,int CantidadSolicitada,int CantidadAutorizada,int CantidadEmitida,int CantidadRecibida,int Stock,decimal PrecioUnitario,string Observacion,int RenglonOC,int Renglon,string NumeroLote,DateTime FechaVencimiento,bool Baja,string CreatedBy,DateTime CreatedOn,string ModifiedBy,DateTime ModifiedOn)
	    {
		    InsPedidoDetalle item = new InsPedidoDetalle();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.IdPedidoDetalle = IdPedidoDetalle;
				
			item.IdPedido = IdPedido;
				
			item.IdInsumo = IdInsumo;
				
			item.FechaPedido = FechaPedido;
				
			item.Cantidad = Cantidad;
				
			item.Presentacion = Presentacion;
				
			item.CantidadSolicitada = CantidadSolicitada;
				
			item.CantidadAutorizada = CantidadAutorizada;
				
			item.CantidadEmitida = CantidadEmitida;
				
			item.CantidadRecibida = CantidadRecibida;
				
			item.Stock = Stock;
				
			item.PrecioUnitario = PrecioUnitario;
				
			item.Observacion = Observacion;
				
			item.RenglonOC = RenglonOC;
				
			item.Renglon = Renglon;
				
			item.NumeroLote = NumeroLote;
				
			item.FechaVencimiento = FechaVencimiento;
				
			item.Baja = Baja;
				
			item.CreatedBy = CreatedBy;
				
			item.CreatedOn = CreatedOn;
				
			item.ModifiedBy = ModifiedBy;
				
			item.ModifiedOn = ModifiedOn;
				
	        item.Save(UserName);
	    }
    }
}
