using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DalInsumos{
    public partial class SPs{
        
        /// <summary>
        /// Creates an object wrapper for the ActualizaHCNueva Procedure
        /// </summary>
        public static StoredProcedure ActualizaHCNueva(int? idEfectorhospital)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("ActualizaHCNueva", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idEfectorhospital", idEfectorhospital, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the AltaPacientes Procedure
        /// </summary>
        public static StoredProcedure AltaPacientes(int? idPaciente, int? idEfector, string apellido, string nombre, int? idTipoDocumento, int? numeroDocumento, string sexo, DateTime? fechaNacimiento, int? idPais, int? idNivelInstrucccion, int? idSituacionLaboral, int? idProfesion, string calle, int? numero, string piso, string departamento, int? idProvincia, int? idLocalidad, int? idBarrio, string referencia, string telefono1, string telefono2, int? idParentesco, int? idObraSocial, int? idEstadoPaciente, string createdBy, DateTime? createdOn, string modifiedBy, DateTime? modifiedOn)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("AltaPacientes", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idPaciente", idPaciente, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idEfector", idEfector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@apellido", apellido, DbType.String, null, null);
        	
            sp.Command.AddParameter("@nombre", nombre, DbType.String, null, null);
        	
            sp.Command.AddParameter("@idTipoDocumento", idTipoDocumento, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@numeroDocumento", numeroDocumento, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@sexo", sexo, DbType.String, null, null);
        	
            sp.Command.AddParameter("@fechaNacimiento", fechaNacimiento, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@idPais", idPais, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idNivelInstrucccion", idNivelInstrucccion, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idSituacionLaboral", idSituacionLaboral, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idProfesion", idProfesion, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@calle", calle, DbType.String, null, null);
        	
            sp.Command.AddParameter("@numero", numero, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@piso", piso, DbType.String, null, null);
        	
            sp.Command.AddParameter("@departamento", departamento, DbType.String, null, null);
        	
            sp.Command.AddParameter("@idProvincia", idProvincia, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idLocalidad", idLocalidad, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idBarrio", idBarrio, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@referencia", referencia, DbType.String, null, null);
        	
            sp.Command.AddParameter("@telefono1", telefono1, DbType.String, null, null);
        	
            sp.Command.AddParameter("@telefono2", telefono2, DbType.String, null, null);
        	
            sp.Command.AddParameter("@idParentesco", idParentesco, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idObraSocial", idObraSocial, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idEstadoPaciente", idEstadoPaciente, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@createdBy", createdBy, DbType.String, null, null);
        	
            sp.Command.AddParameter("@createdOn", createdOn, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@modifiedBy", modifiedBy, DbType.String, null, null);
        	
            sp.Command.AddParameter("@modifiedOn", modifiedOn, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_AnyDataInTables Procedure
        /// </summary>
        public static StoredProcedure AspnetAnyDataInTables(int? TablesToCheck)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_AnyDataInTables", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@TablesToCheck", TablesToCheck, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_Applications_CreateApplication Procedure
        /// </summary>
        public static StoredProcedure AspnetApplicationsCreateApplication(string ApplicationName, Guid? ApplicationId)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_Applications_CreateApplication", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddOutputParameter("@ApplicationId", DbType.Guid, null, null);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_CheckSchemaVersion Procedure
        /// </summary>
        public static StoredProcedure AspnetCheckSchemaVersion(string Feature, string CompatibleSchemaVersion)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_CheckSchemaVersion", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@Feature", Feature, DbType.String, null, null);
        	
            sp.Command.AddParameter("@CompatibleSchemaVersion", CompatibleSchemaVersion, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_Membership_ChangePasswordQuestionAndAnswer Procedure
        /// </summary>
        public static StoredProcedure AspnetMembershipChangePasswordQuestionAndAnswer(string ApplicationName, string UserName, string NewPasswordQuestion, string NewPasswordAnswer)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_Membership_ChangePasswordQuestionAndAnswer", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@UserName", UserName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@NewPasswordQuestion", NewPasswordQuestion, DbType.String, null, null);
        	
            sp.Command.AddParameter("@NewPasswordAnswer", NewPasswordAnswer, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_Membership_CreateUser Procedure
        /// </summary>
        public static StoredProcedure AspnetMembershipCreateUser(string ApplicationName, string UserName, string Password, string PasswordSalt, string Email, string PasswordQuestion, string PasswordAnswer, bool? IsApproved, DateTime? CurrentTimeUtc, DateTime? CreateDate, int? UniqueEmail, int? PasswordFormat, Guid? UserId)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_Membership_CreateUser", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@UserName", UserName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@Password", Password, DbType.String, null, null);
        	
            sp.Command.AddParameter("@PasswordSalt", PasswordSalt, DbType.String, null, null);
        	
            sp.Command.AddParameter("@Email", Email, DbType.String, null, null);
        	
            sp.Command.AddParameter("@PasswordQuestion", PasswordQuestion, DbType.String, null, null);
        	
            sp.Command.AddParameter("@PasswordAnswer", PasswordAnswer, DbType.String, null, null);
        	
            sp.Command.AddParameter("@IsApproved", IsApproved, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@CurrentTimeUtc", CurrentTimeUtc, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@CreateDate", CreateDate, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@UniqueEmail", UniqueEmail, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@PasswordFormat", PasswordFormat, DbType.Int32, 0, 10);
        	
            sp.Command.AddOutputParameter("@UserId", DbType.Guid, null, null);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_Membership_FindUsersByEmail Procedure
        /// </summary>
        public static StoredProcedure AspnetMembershipFindUsersByEmail(string ApplicationName, string EmailToMatch, int? PageIndex, int? PageSize)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_Membership_FindUsersByEmail", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@EmailToMatch", EmailToMatch, DbType.String, null, null);
        	
            sp.Command.AddParameter("@PageIndex", PageIndex, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@PageSize", PageSize, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_Membership_FindUsersByName Procedure
        /// </summary>
        public static StoredProcedure AspnetMembershipFindUsersByName(string ApplicationName, string UserNameToMatch, int? PageIndex, int? PageSize)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_Membership_FindUsersByName", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@UserNameToMatch", UserNameToMatch, DbType.String, null, null);
        	
            sp.Command.AddParameter("@PageIndex", PageIndex, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@PageSize", PageSize, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_Membership_GetAllUsers Procedure
        /// </summary>
        public static StoredProcedure AspnetMembershipGetAllUsers(string ApplicationName, int? PageIndex, int? PageSize)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_Membership_GetAllUsers", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@PageIndex", PageIndex, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@PageSize", PageSize, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_Membership_GetNumberOfUsersOnline Procedure
        /// </summary>
        public static StoredProcedure AspnetMembershipGetNumberOfUsersOnline(string ApplicationName, int? MinutesSinceLastInActive, DateTime? CurrentTimeUtc)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_Membership_GetNumberOfUsersOnline", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@MinutesSinceLastInActive", MinutesSinceLastInActive, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@CurrentTimeUtc", CurrentTimeUtc, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_Membership_GetPassword Procedure
        /// </summary>
        public static StoredProcedure AspnetMembershipGetPassword(string ApplicationName, string UserName, int? MaxInvalidPasswordAttempts, int? PasswordAttemptWindow, DateTime? CurrentTimeUtc, string PasswordAnswer)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_Membership_GetPassword", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@UserName", UserName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@MaxInvalidPasswordAttempts", MaxInvalidPasswordAttempts, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@PasswordAttemptWindow", PasswordAttemptWindow, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@CurrentTimeUtc", CurrentTimeUtc, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@PasswordAnswer", PasswordAnswer, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_Membership_GetPasswordWithFormat Procedure
        /// </summary>
        public static StoredProcedure AspnetMembershipGetPasswordWithFormat(string ApplicationName, string UserName, bool? UpdateLastLoginActivityDate, DateTime? CurrentTimeUtc)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_Membership_GetPasswordWithFormat", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@UserName", UserName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@UpdateLastLoginActivityDate", UpdateLastLoginActivityDate, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@CurrentTimeUtc", CurrentTimeUtc, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_Membership_GetUserByEmail Procedure
        /// </summary>
        public static StoredProcedure AspnetMembershipGetUserByEmail(string ApplicationName, string Email)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_Membership_GetUserByEmail", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@Email", Email, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_Membership_GetUserByName Procedure
        /// </summary>
        public static StoredProcedure AspnetMembershipGetUserByName(string ApplicationName, string UserName, DateTime? CurrentTimeUtc, bool? UpdateLastActivity)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_Membership_GetUserByName", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@UserName", UserName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@CurrentTimeUtc", CurrentTimeUtc, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@UpdateLastActivity", UpdateLastActivity, DbType.Boolean, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_Membership_GetUserByUserId Procedure
        /// </summary>
        public static StoredProcedure AspnetMembershipGetUserByUserId(Guid? UserId, DateTime? CurrentTimeUtc, bool? UpdateLastActivity)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_Membership_GetUserByUserId", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@UserId", UserId, DbType.Guid, null, null);
        	
            sp.Command.AddParameter("@CurrentTimeUtc", CurrentTimeUtc, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@UpdateLastActivity", UpdateLastActivity, DbType.Boolean, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_Membership_ResetPassword Procedure
        /// </summary>
        public static StoredProcedure AspnetMembershipResetPassword(string ApplicationName, string UserName, string NewPassword, int? MaxInvalidPasswordAttempts, int? PasswordAttemptWindow, string PasswordSalt, DateTime? CurrentTimeUtc, int? PasswordFormat, string PasswordAnswer)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_Membership_ResetPassword", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@UserName", UserName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@NewPassword", NewPassword, DbType.String, null, null);
        	
            sp.Command.AddParameter("@MaxInvalidPasswordAttempts", MaxInvalidPasswordAttempts, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@PasswordAttemptWindow", PasswordAttemptWindow, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@PasswordSalt", PasswordSalt, DbType.String, null, null);
        	
            sp.Command.AddParameter("@CurrentTimeUtc", CurrentTimeUtc, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@PasswordFormat", PasswordFormat, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@PasswordAnswer", PasswordAnswer, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_Membership_SetPassword Procedure
        /// </summary>
        public static StoredProcedure AspnetMembershipSetPassword(string ApplicationName, string UserName, string NewPassword, string PasswordSalt, DateTime? CurrentTimeUtc, int? PasswordFormat)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_Membership_SetPassword", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@UserName", UserName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@NewPassword", NewPassword, DbType.String, null, null);
        	
            sp.Command.AddParameter("@PasswordSalt", PasswordSalt, DbType.String, null, null);
        	
            sp.Command.AddParameter("@CurrentTimeUtc", CurrentTimeUtc, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@PasswordFormat", PasswordFormat, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_Membership_UnlockUser Procedure
        /// </summary>
        public static StoredProcedure AspnetMembershipUnlockUser(string ApplicationName, string UserName)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_Membership_UnlockUser", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@UserName", UserName, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_Membership_UpdateUser Procedure
        /// </summary>
        public static StoredProcedure AspnetMembershipUpdateUser(string ApplicationName, string UserName, string Email, string Comment, bool? IsApproved, DateTime? LastLoginDate, DateTime? LastActivityDate, int? UniqueEmail, DateTime? CurrentTimeUtc)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_Membership_UpdateUser", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@UserName", UserName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@Email", Email, DbType.String, null, null);
        	
            sp.Command.AddParameter("@Comment", Comment, DbType.String, null, null);
        	
            sp.Command.AddParameter("@IsApproved", IsApproved, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@LastLoginDate", LastLoginDate, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@LastActivityDate", LastActivityDate, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@UniqueEmail", UniqueEmail, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@CurrentTimeUtc", CurrentTimeUtc, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_Membership_UpdateUserInfo Procedure
        /// </summary>
        public static StoredProcedure AspnetMembershipUpdateUserInfo(string ApplicationName, string UserName, bool? IsPasswordCorrect, bool? UpdateLastLoginActivityDate, int? MaxInvalidPasswordAttempts, int? PasswordAttemptWindow, DateTime? CurrentTimeUtc, DateTime? LastLoginDate, DateTime? LastActivityDate)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_Membership_UpdateUserInfo", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@UserName", UserName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@IsPasswordCorrect", IsPasswordCorrect, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@UpdateLastLoginActivityDate", UpdateLastLoginActivityDate, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@MaxInvalidPasswordAttempts", MaxInvalidPasswordAttempts, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@PasswordAttemptWindow", PasswordAttemptWindow, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@CurrentTimeUtc", CurrentTimeUtc, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@LastLoginDate", LastLoginDate, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@LastActivityDate", LastActivityDate, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_Paths_CreatePath Procedure
        /// </summary>
        public static StoredProcedure AspnetPathsCreatePath(Guid? ApplicationId, string Path, Guid? PathId)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_Paths_CreatePath", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ApplicationId", ApplicationId, DbType.Guid, null, null);
        	
            sp.Command.AddParameter("@Path", Path, DbType.String, null, null);
        	
            sp.Command.AddOutputParameter("@PathId", DbType.Guid, null, null);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_Personalization_GetApplicationId Procedure
        /// </summary>
        public static StoredProcedure AspnetPersonalizationGetApplicationId(string ApplicationName, Guid? ApplicationId)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_Personalization_GetApplicationId", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddOutputParameter("@ApplicationId", DbType.Guid, null, null);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_PersonalizationAdministration_DeleteAllState Procedure
        /// </summary>
        public static StoredProcedure AspnetPersonalizationAdministrationDeleteAllState(bool? AllUsersScope, string ApplicationName, int? Count)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_PersonalizationAdministration_DeleteAllState", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@AllUsersScope", AllUsersScope, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddOutputParameter("@Count", DbType.Int32, 0, 10);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_PersonalizationAdministration_FindState Procedure
        /// </summary>
        public static StoredProcedure AspnetPersonalizationAdministrationFindState(bool? AllUsersScope, string ApplicationName, int? PageIndex, int? PageSize, string Path, string UserName, DateTime? InactiveSinceDate)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_PersonalizationAdministration_FindState", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@AllUsersScope", AllUsersScope, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@PageIndex", PageIndex, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@PageSize", PageSize, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@Path", Path, DbType.String, null, null);
        	
            sp.Command.AddParameter("@UserName", UserName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@InactiveSinceDate", InactiveSinceDate, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_PersonalizationAdministration_GetCountOfState Procedure
        /// </summary>
        public static StoredProcedure AspnetPersonalizationAdministrationGetCountOfState(int? Count, bool? AllUsersScope, string ApplicationName, string Path, string UserName, DateTime? InactiveSinceDate)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_PersonalizationAdministration_GetCountOfState", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddOutputParameter("@Count", DbType.Int32, 0, 10);
            
            sp.Command.AddParameter("@AllUsersScope", AllUsersScope, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@Path", Path, DbType.String, null, null);
        	
            sp.Command.AddParameter("@UserName", UserName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@InactiveSinceDate", InactiveSinceDate, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_PersonalizationAdministration_ResetSharedState Procedure
        /// </summary>
        public static StoredProcedure AspnetPersonalizationAdministrationResetSharedState(int? Count, string ApplicationName, string Path)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_PersonalizationAdministration_ResetSharedState", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddOutputParameter("@Count", DbType.Int32, 0, 10);
            
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@Path", Path, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_PersonalizationAdministration_ResetUserState Procedure
        /// </summary>
        public static StoredProcedure AspnetPersonalizationAdministrationResetUserState(int? Count, string ApplicationName, DateTime? InactiveSinceDate, string UserName, string Path)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_PersonalizationAdministration_ResetUserState", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddOutputParameter("@Count", DbType.Int32, 0, 10);
            
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@InactiveSinceDate", InactiveSinceDate, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@UserName", UserName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@Path", Path, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_PersonalizationAllUsers_GetPageSettings Procedure
        /// </summary>
        public static StoredProcedure AspnetPersonalizationAllUsersGetPageSettings(string ApplicationName, string Path)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_PersonalizationAllUsers_GetPageSettings", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@Path", Path, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_PersonalizationAllUsers_ResetPageSettings Procedure
        /// </summary>
        public static StoredProcedure AspnetPersonalizationAllUsersResetPageSettings(string ApplicationName, string Path)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_PersonalizationAllUsers_ResetPageSettings", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@Path", Path, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_PersonalizationAllUsers_SetPageSettings Procedure
        /// </summary>
        public static StoredProcedure AspnetPersonalizationAllUsersSetPageSettings(string ApplicationName, string Path, byte[] PageSettings, DateTime? CurrentTimeUtc)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_PersonalizationAllUsers_SetPageSettings", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@Path", Path, DbType.String, null, null);
        	
            sp.Command.AddParameter("@PageSettings", PageSettings, DbType.Binary, null, null);
        	
            sp.Command.AddParameter("@CurrentTimeUtc", CurrentTimeUtc, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_PersonalizationPerUser_GetPageSettings Procedure
        /// </summary>
        public static StoredProcedure AspnetPersonalizationPerUserGetPageSettings(string ApplicationName, string UserName, string Path, DateTime? CurrentTimeUtc)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_PersonalizationPerUser_GetPageSettings", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@UserName", UserName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@Path", Path, DbType.String, null, null);
        	
            sp.Command.AddParameter("@CurrentTimeUtc", CurrentTimeUtc, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_PersonalizationPerUser_ResetPageSettings Procedure
        /// </summary>
        public static StoredProcedure AspnetPersonalizationPerUserResetPageSettings(string ApplicationName, string UserName, string Path, DateTime? CurrentTimeUtc)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_PersonalizationPerUser_ResetPageSettings", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@UserName", UserName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@Path", Path, DbType.String, null, null);
        	
            sp.Command.AddParameter("@CurrentTimeUtc", CurrentTimeUtc, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_PersonalizationPerUser_SetPageSettings Procedure
        /// </summary>
        public static StoredProcedure AspnetPersonalizationPerUserSetPageSettings(string ApplicationName, string UserName, string Path, byte[] PageSettings, DateTime? CurrentTimeUtc)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_PersonalizationPerUser_SetPageSettings", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@UserName", UserName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@Path", Path, DbType.String, null, null);
        	
            sp.Command.AddParameter("@PageSettings", PageSettings, DbType.Binary, null, null);
        	
            sp.Command.AddParameter("@CurrentTimeUtc", CurrentTimeUtc, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_Profile_DeleteInactiveProfiles Procedure
        /// </summary>
        public static StoredProcedure AspnetProfileDeleteInactiveProfiles(string ApplicationName, int? ProfileAuthOptions, DateTime? InactiveSinceDate)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_Profile_DeleteInactiveProfiles", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@ProfileAuthOptions", ProfileAuthOptions, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@InactiveSinceDate", InactiveSinceDate, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_Profile_DeleteProfiles Procedure
        /// </summary>
        public static StoredProcedure AspnetProfileDeleteProfiles(string ApplicationName, string UserNames)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_Profile_DeleteProfiles", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@UserNames", UserNames, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_Profile_GetNumberOfInactiveProfiles Procedure
        /// </summary>
        public static StoredProcedure AspnetProfileGetNumberOfInactiveProfiles(string ApplicationName, int? ProfileAuthOptions, DateTime? InactiveSinceDate)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_Profile_GetNumberOfInactiveProfiles", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@ProfileAuthOptions", ProfileAuthOptions, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@InactiveSinceDate", InactiveSinceDate, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_Profile_GetProfiles Procedure
        /// </summary>
        public static StoredProcedure AspnetProfileGetProfiles(string ApplicationName, int? ProfileAuthOptions, int? PageIndex, int? PageSize, string UserNameToMatch, DateTime? InactiveSinceDate)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_Profile_GetProfiles", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@ProfileAuthOptions", ProfileAuthOptions, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@PageIndex", PageIndex, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@PageSize", PageSize, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@UserNameToMatch", UserNameToMatch, DbType.String, null, null);
        	
            sp.Command.AddParameter("@InactiveSinceDate", InactiveSinceDate, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_Profile_GetProperties Procedure
        /// </summary>
        public static StoredProcedure AspnetProfileGetProperties(string ApplicationName, string UserName, DateTime? CurrentTimeUtc)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_Profile_GetProperties", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@UserName", UserName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@CurrentTimeUtc", CurrentTimeUtc, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_Profile_SetProperties Procedure
        /// </summary>
        public static StoredProcedure AspnetProfileSetProperties(string ApplicationName, string PropertyNames, string PropertyValuesString, byte[] PropertyValuesBinary, string UserName, bool? IsUserAnonymous, DateTime? CurrentTimeUtc)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_Profile_SetProperties", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@PropertyNames", PropertyNames, DbType.String, null, null);
        	
            sp.Command.AddParameter("@PropertyValuesString", PropertyValuesString, DbType.String, null, null);
        	
            sp.Command.AddParameter("@PropertyValuesBinary", PropertyValuesBinary, DbType.Binary, null, null);
        	
            sp.Command.AddParameter("@UserName", UserName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@IsUserAnonymous", IsUserAnonymous, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@CurrentTimeUtc", CurrentTimeUtc, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_RegisterSchemaVersion Procedure
        /// </summary>
        public static StoredProcedure AspnetRegisterSchemaVersion(string Feature, string CompatibleSchemaVersion, bool? IsCurrentVersion, bool? RemoveIncompatibleSchema)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_RegisterSchemaVersion", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@Feature", Feature, DbType.String, null, null);
        	
            sp.Command.AddParameter("@CompatibleSchemaVersion", CompatibleSchemaVersion, DbType.String, null, null);
        	
            sp.Command.AddParameter("@IsCurrentVersion", IsCurrentVersion, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@RemoveIncompatibleSchema", RemoveIncompatibleSchema, DbType.Boolean, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_Roles_CreateRole Procedure
        /// </summary>
        public static StoredProcedure AspnetRolesCreateRole(string ApplicationName, string RoleName)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_Roles_CreateRole", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@RoleName", RoleName, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_Roles_DeleteRole Procedure
        /// </summary>
        public static StoredProcedure AspnetRolesDeleteRole(string ApplicationName, string RoleName, bool? DeleteOnlyIfRoleIsEmpty)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_Roles_DeleteRole", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@RoleName", RoleName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@DeleteOnlyIfRoleIsEmpty", DeleteOnlyIfRoleIsEmpty, DbType.Boolean, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_Roles_GetAllRoles Procedure
        /// </summary>
        public static StoredProcedure AspnetRolesGetAllRoles(string ApplicationName)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_Roles_GetAllRoles", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_Roles_RoleExists Procedure
        /// </summary>
        public static StoredProcedure AspnetRolesRoleExists(string ApplicationName, string RoleName)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_Roles_RoleExists", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@RoleName", RoleName, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_Setup_RemoveAllRoleMembers Procedure
        /// </summary>
        public static StoredProcedure AspnetSetupRemoveAllRoleMembers(string name)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_Setup_RemoveAllRoleMembers", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@name", name, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_Setup_RestorePermissions Procedure
        /// </summary>
        public static StoredProcedure AspnetSetupRestorePermissions(string name)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_Setup_RestorePermissions", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@name", name, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_UnRegisterSchemaVersion Procedure
        /// </summary>
        public static StoredProcedure AspnetUnRegisterSchemaVersion(string Feature, string CompatibleSchemaVersion)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_UnRegisterSchemaVersion", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@Feature", Feature, DbType.String, null, null);
        	
            sp.Command.AddParameter("@CompatibleSchemaVersion", CompatibleSchemaVersion, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_Users_CreateUser Procedure
        /// </summary>
        public static StoredProcedure AspnetUsersCreateUser(Guid? ApplicationId, string UserName, bool? IsUserAnonymous, DateTime? LastActivityDate, Guid? UserId)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_Users_CreateUser", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ApplicationId", ApplicationId, DbType.Guid, null, null);
        	
            sp.Command.AddParameter("@UserName", UserName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@IsUserAnonymous", IsUserAnonymous, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@LastActivityDate", LastActivityDate, DbType.DateTime, null, null);
        	
            sp.Command.AddOutputParameter("@UserId", DbType.Guid, null, null);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_Users_DeleteUser Procedure
        /// </summary>
        public static StoredProcedure AspnetUsersDeleteUser(string ApplicationName, string UserName, int? TablesToDeleteFrom, int? NumTablesDeletedFrom)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_Users_DeleteUser", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@UserName", UserName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@TablesToDeleteFrom", TablesToDeleteFrom, DbType.Int32, 0, 10);
        	
            sp.Command.AddOutputParameter("@NumTablesDeletedFrom", DbType.Int32, 0, 10);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_UsersInRoles_AddUsersToRoles Procedure
        /// </summary>
        public static StoredProcedure AspnetUsersInRolesAddUsersToRoles(string ApplicationName, string UserNames, string RoleNames, DateTime? CurrentTimeUtc)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_UsersInRoles_AddUsersToRoles", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@UserNames", UserNames, DbType.String, null, null);
        	
            sp.Command.AddParameter("@RoleNames", RoleNames, DbType.String, null, null);
        	
            sp.Command.AddParameter("@CurrentTimeUtc", CurrentTimeUtc, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_UsersInRoles_FindUsersInRole Procedure
        /// </summary>
        public static StoredProcedure AspnetUsersInRolesFindUsersInRole(string ApplicationName, string RoleName, string UserNameToMatch)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_UsersInRoles_FindUsersInRole", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@RoleName", RoleName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@UserNameToMatch", UserNameToMatch, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_UsersInRoles_GetRolesForUser Procedure
        /// </summary>
        public static StoredProcedure AspnetUsersInRolesGetRolesForUser(string ApplicationName, string UserName)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_UsersInRoles_GetRolesForUser", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@UserName", UserName, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_UsersInRoles_GetUsersInRoles Procedure
        /// </summary>
        public static StoredProcedure AspnetUsersInRolesGetUsersInRoles(string ApplicationName, string RoleName)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_UsersInRoles_GetUsersInRoles", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@RoleName", RoleName, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_UsersInRoles_IsUserInRole Procedure
        /// </summary>
        public static StoredProcedure AspnetUsersInRolesIsUserInRole(string ApplicationName, string UserName, string RoleName)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_UsersInRoles_IsUserInRole", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@UserName", UserName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@RoleName", RoleName, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_UsersInRoles_RemoveUsersFromRoles Procedure
        /// </summary>
        public static StoredProcedure AspnetUsersInRolesRemoveUsersFromRoles(string ApplicationName, string UserNames, string RoleNames)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_UsersInRoles_RemoveUsersFromRoles", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ApplicationName", ApplicationName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@UserNames", UserNames, DbType.String, null, null);
        	
            sp.Command.AddParameter("@RoleNames", RoleNames, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the aspnet_WebEvent_LogEvent Procedure
        /// </summary>
        public static StoredProcedure AspnetWebEventLogEvent(string EventId, DateTime? EventTimeUtc, DateTime? EventTime, string EventType, decimal? EventSequence, decimal? EventOccurrence, int? EventCode, int? EventDetailCode, string Message, string ApplicationPath, string ApplicationVirtualPath, string MachineName, string RequestUrl, string ExceptionType, string Details)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("aspnet_WebEvent_LogEvent", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@EventId", EventId, DbType.AnsiStringFixedLength, null, null);
        	
            sp.Command.AddParameter("@EventTimeUtc", EventTimeUtc, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@EventTime", EventTime, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@EventType", EventType, DbType.String, null, null);
        	
            sp.Command.AddParameter("@EventSequence", EventSequence, DbType.Decimal, 0, 19);
        	
            sp.Command.AddParameter("@EventOccurrence", EventOccurrence, DbType.Decimal, 0, 19);
        	
            sp.Command.AddParameter("@EventCode", EventCode, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@EventDetailCode", EventDetailCode, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@Message", Message, DbType.String, null, null);
        	
            sp.Command.AddParameter("@ApplicationPath", ApplicationPath, DbType.String, null, null);
        	
            sp.Command.AddParameter("@ApplicationVirtualPath", ApplicationVirtualPath, DbType.String, null, null);
        	
            sp.Command.AddParameter("@MachineName", MachineName, DbType.String, null, null);
        	
            sp.Command.AddParameter("@RequestUrl", RequestUrl, DbType.String, null, null);
        	
            sp.Command.AddParameter("@ExceptionType", ExceptionType, DbType.String, null, null);
        	
            sp.Command.AddParameter("@Details", Details, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the BorrarPermisos Procedure
        /// </summary>
        public static StoredProcedure BorrarPermisos(int? modulo, int? perfil, int? efector)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("BorrarPermisos", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@modulo", modulo, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@perfil", perfil, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the BorrarServiciosEfector Procedure
        /// </summary>
        public static StoredProcedure BorrarServiciosEfector(int? idEfector, string letra)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("BorrarServiciosEfector", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idEfector", idEfector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@letra", letra, DbType.AnsiStringFixedLength, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the CON_ActivarAgendasBloqueadas Procedure
        /// </summary>
        public static StoredProcedure ConActivarAgendasBloqueadas()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("CON_ActivarAgendasBloqueadas", DataService.GetInstance("insProvider"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the Con_AgendaAuditoriaBuscar Procedure
        /// </summary>
        public static StoredProcedure ConAgendaAuditoriaBuscar(string fechaInicio, string fechaFin, int? consultorio, int? especialidad, int? profesional, int? idTipoAgenda, int? efector)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("Con_AgendaAuditoriaBuscar", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@fechaInicio", fechaInicio, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@fechaFin", fechaFin, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@consultorio", consultorio, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@especialidad", especialidad, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@profesional", profesional, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idTipoAgenda", idTipoAgenda, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the CON_AgendaRangoOcupado Procedure
        /// </summary>
        public static StoredProcedure ConAgendaRangoOcupado(int? idEfector, int? idConsultorio, int? idProfesional, string fecha, string hIni, string hFin)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("CON_AgendaRangoOcupado", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idEfector", idEfector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idConsultorio", idConsultorio, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idProfesional", idProfesional, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@fecha", fecha, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@hIni", hIni, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@hFin", hFin, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the Con_AgendaSinProfesional Procedure
        /// </summary>
        public static StoredProcedure ConAgendaSinProfesional(int? idEfector)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("Con_AgendaSinProfesional", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idEfector", idEfector, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the CON_DesbloqueoTurnoProtegido Procedure
        /// </summary>
        public static StoredProcedure ConDesbloqueoTurnoProtegido(int? idAgenda, DateTime? fechaTurno, string horaTurno)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("CON_DesbloqueoTurnoProtegido", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idAgenda", idAgenda, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@fechaTurno", fechaTurno, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@horaTurno", horaTurno, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the CON_EliminarReservaCaduca Procedure
        /// </summary>
        public static StoredProcedure ConEliminarReservaCaduca()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("CON_EliminarReservaCaduca", DataService.GetInstance("insProvider"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the CON_EstadisticaConsultas Procedure
        /// </summary>
        public static StoredProcedure ConEstadisticaConsultas(int? idZona, int? idEfector, int? idServicio, int? idEspecialidad, int? idProfesional, string fechainicio, string fechafin, int? idTipoAgenda, int? idTipoReporte)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("CON_EstadisticaConsultas", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idZona", idZona, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idEfector", idEfector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idServicio", idServicio, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idEspecialidad", idEspecialidad, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idProfesional", idProfesional, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@fechainicio", fechainicio, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@fechafin", fechafin, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idTipoAgenda", idTipoAgenda, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idTipoReporte", idTipoReporte, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the CON_EstadisticaDiagnosticos Procedure
        /// </summary>
        public static StoredProcedure ConEstadisticaDiagnosticos(int? idZona, int? idEfector, int? idServicio, int? idEspecialidad, int? idProfesional, string fechainicio, string fechafin, string capitulo, int? tipoDiagnostico, int? idTipoAgenda, int? tipoReporte)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("CON_EstadisticaDiagnosticos", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idZona", idZona, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idEfector", idEfector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idServicio", idServicio, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idEspecialidad", idEspecialidad, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idProfesional", idProfesional, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@fechainicio", fechainicio, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@fechafin", fechafin, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@capitulo", capitulo, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@tipoDiagnostico", tipoDiagnostico, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idTipoAgenda", idTipoAgenda, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@tipoReporte", tipoReporte, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the CON_GetAgendas Procedure
        /// </summary>
        public static StoredProcedure ConGetAgendas(int? idZona, int? idEfector, int? idServicio, int? idEspecialidad, int? idProfesional, int? idTipoConsultorio, string fechainicio, string fechafin, int? idTipoAgenda, int? idEstadoAgenda)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("CON_GetAgendas", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idZona", idZona, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idEfector", idEfector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idServicio", idServicio, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idEspecialidad", idEspecialidad, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idProfesional", idProfesional, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idTipoConsultorio", idTipoConsultorio, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@fechainicio", fechainicio, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@fechafin", fechafin, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idTipoAgenda", idTipoAgenda, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idEstadoAgenda", idEstadoAgenda, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the CON_GetAgendasFechas Procedure
        /// </summary>
        public static StoredProcedure ConGetAgendasFechas(int? idEfector, int? idServicio, int? idEspecialidad, int? IdProfesional, int? idTipoConsultorio, string fechaIni, string fechaFin, string disponibles, int? tipoAgenda)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("CON_GetAgendasFechas", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idEfector", idEfector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idServicio", idServicio, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idEspecialidad", idEspecialidad, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@IdProfesional", IdProfesional, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idTipoConsultorio", idTipoConsultorio, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@fechaIni", fechaIni, DbType.AnsiStringFixedLength, null, null);
        	
            sp.Command.AddParameter("@fechaFin", fechaFin, DbType.AnsiStringFixedLength, null, null);
        	
            sp.Command.AddParameter("@disponibles", disponibles, DbType.AnsiStringFixedLength, null, null);
        	
            sp.Command.AddParameter("@tipoAgenda", tipoAgenda, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the CON_GetAgendasTurnos Procedure
        /// </summary>
        public static StoredProcedure ConGetAgendasTurnos(int? idEfector, int? idServicio, int? idEspecialidad, int? IdProfesional, int? idTipoConsultorio, string fecha, string disponibles, int? tipoAgenda)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("CON_GetAgendasTurnos", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idEfector", idEfector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idServicio", idServicio, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idEspecialidad", idEspecialidad, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@IdProfesional", IdProfesional, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idTipoConsultorio", idTipoConsultorio, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@fecha", fecha, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@disponibles", disponibles, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@tipoAgenda", tipoAgenda, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the CON_GetAgendasTurnosProtegidos Procedure
        /// </summary>
        public static StoredProcedure ConGetAgendasTurnosProtegidos(int? idEspecialidad, int? idProfesional)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("CON_GetAgendasTurnosProtegidos", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idEspecialidad", idEspecialidad, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idProfesional", idProfesional, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the CON_GetAtencionPacientes Procedure
        /// </summary>
        public static StoredProcedure ConGetAtencionPacientes(string filtro)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("CON_GetAtencionPacientes", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@filtro", filtro, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the CON_GetConsultas Procedure
        /// </summary>
        public static StoredProcedure ConGetConsultas(int? idEfector, DateTime? finicio, DateTime? ffin, int? tipoProf)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("CON_GetConsultas", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idEfector", idEfector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@finicio", finicio, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@ffin", ffin, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@tipoProf", tipoProf, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the CON_GetConsultasByEfector Procedure
        /// </summary>
        public static StoredProcedure ConGetConsultasByEfector(int? idefector, DateTime? fechainicio, DateTime? fechafin, int? especialidad, int? tipoprof)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("CON_GetConsultasByEfector", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idefector", idefector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@fechainicio", fechainicio, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@fechafin", fechafin, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@especialidad", especialidad, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@tipoprof", tipoprof, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the CON_GetConsultasEcografia Procedure
        /// </summary>
        public static StoredProcedure ConGetConsultasEcografia(int? dni)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("CON_GetConsultasEcografia", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@dni", dni, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the CON_GetConsultasPaciente Procedure
        /// </summary>
        public static StoredProcedure ConGetConsultasPaciente(int? dni)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("CON_GetConsultasPaciente", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@dni", dni, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the CON_GetDemandaRechazada Procedure
        /// </summary>
        public static StoredProcedure ConGetDemandaRechazada(int? idEfector, int? idEspecialidad, string fechaDesde, string fechaHasta, int? idPaciente)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("CON_GetDemandaRechazada", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idEfector", idEfector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idEspecialidad", idEspecialidad, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@fechaDesde", fechaDesde, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@fechaHasta", fechaHasta, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idPaciente", idPaciente, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the CON_GetEspecialidadesTurnosProtegidos Procedure
        /// </summary>
        public static StoredProcedure ConGetEspecialidadesTurnosProtegidos()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("CON_GetEspecialidadesTurnosProtegidos", DataService.GetInstance("insProvider"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the CON_GetHistorialDatosControl Procedure
        /// </summary>
        public static StoredProcedure ConGetHistorialDatosControl(int? idPaciente, int? idEfector)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("CON_GetHistorialDatosControl", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idPaciente", idPaciente, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idEfector", idEfector, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the CON_GetHistorialOdontologia Procedure
        /// </summary>
        public static StoredProcedure ConGetHistorialOdontologia(string fecha, int? idPaciente)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("CON_GetHistorialOdontologia", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@fecha", fecha, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idPaciente", idPaciente, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the CON_GetHistorialOdontologiaPrestacion Procedure
        /// </summary>
        public static StoredProcedure ConGetHistorialOdontologiaPrestacion(int? idTurno, int? idPaciente)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("CON_GetHistorialOdontologiaPrestacion", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idTurno", idTurno, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idPaciente", idPaciente, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the CON_GetMenuPrincipal Procedure
        /// </summary>
        public static StoredProcedure ConGetMenuPrincipal(int? idperfil)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("CON_GetMenuPrincipal", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idperfil", idperfil, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the CON_GetMenuSecundario Procedure
        /// </summary>
        public static StoredProcedure ConGetMenuSecundario(int? idMenu, int? idperfil)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("CON_GetMenuSecundario", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idMenu", idMenu, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idperfil", idperfil, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the CON_GetMotivoInactivacionAgenda Procedure
        /// </summary>
        public static StoredProcedure ConGetMotivoInactivacionAgenda()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("CON_GetMotivoInactivacionAgenda", DataService.GetInstance("insProvider"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the CON_GetOcupacion Procedure
        /// </summary>
        public static StoredProcedure ConGetOcupacion(DateTime? fecha)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("CON_GetOcupacion", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@fecha", fecha, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the CON_GetPacienteenAgendaProtegida Procedure
        /// </summary>
        public static StoredProcedure ConGetPacienteenAgendaProtegida(int? idAgenda, int? numerodocumento, int? existe)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("CON_GetPacienteenAgendaProtegida", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idAgenda", idAgenda, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@numerodocumento", numerodocumento, DbType.Int32, 0, 10);
        	
            sp.Command.AddOutputParameter("@existe", DbType.Int32, 0, 10);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the CON_GetPacientesByApyNom Procedure
        /// </summary>
        public static StoredProcedure ConGetPacientesByApyNom(string nombre, string apellido)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("CON_GetPacientesByApyNom", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@nombre", nombre, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@apellido", apellido, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the CON_GetPacientesPorDocumento Procedure
        /// </summary>
        public static StoredProcedure ConGetPacientesPorDocumento(int? numerodoc)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("CON_GetPacientesPorDocumento", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@numerodoc", numerodoc, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the CON_GetPacientesPorHistoriaClinica Procedure
        /// </summary>
        public static StoredProcedure ConGetPacientesPorHistoriaClinica(int? hc)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("CON_GetPacientesPorHistoriaClinica", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@hc", hc, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the CON_GetProfesionalesTurnosProtegidos Procedure
        /// </summary>
        public static StoredProcedure ConGetProfesionalesTurnosProtegidos(int? idEspecialidad)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("CON_GetProfesionalesTurnosProtegidos", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idEspecialidad", idEspecialidad, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the CON_GetTurnosPacientes Procedure
        /// </summary>
        public static StoredProcedure ConGetTurnosPacientes(string fecha, int? idPaciente, int? tipoBusqueda)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("CON_GetTurnosPacientes", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@fecha", fecha, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idPaciente", idPaciente, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@tipoBusqueda", tipoBusqueda, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the CON_GetTurnosPacientesSMS Procedure
        /// </summary>
        public static StoredProcedure ConGetTurnosPacientesSMS()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("CON_GetTurnosPacientesSMS", DataService.GetInstance("insProvider"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the CON_GetTurnosPorDia Procedure
        /// </summary>
        public static StoredProcedure ConGetTurnosPorDia(string fecha, int? idEfector, int? idTipoAgenda, int? idEspecialidad, int? idProfesional, int? tipoPaciente)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("CON_GetTurnosPorDia", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@fecha", fecha, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idEfector", idEfector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idTipoAgenda", idTipoAgenda, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idEspecialidad", idEspecialidad, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idProfesional", idProfesional, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@tipoPaciente", tipoPaciente, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the CON_GetTurnosProtegidos Procedure
        /// </summary>
        public static StoredProcedure ConGetTurnosProtegidos(int? idAgenda)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("CON_GetTurnosProtegidos", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idAgenda", idAgenda, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the Con_GuardarAgenda Procedure
        /// </summary>
        public static StoredProcedure ConGuardarAgenda(int? idEfector, int? idServicio, int? idEspecialidad, int? idTipoPrestacion, int? idProfesional, DateTime? fecha, string horaInicio, string horaFin, int? duracion, int? idConsultorio, bool? citarPorBloques, int? maximoSobreTurnos, int? cantidadInterconsulta, int? idAgendaEstado, bool? turnosDisponibles, string errorX)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("Con_GuardarAgenda", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idEfector", idEfector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idServicio", idServicio, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idEspecialidad", idEspecialidad, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idTipoPrestacion", idTipoPrestacion, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idProfesional", idProfesional, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@fecha", fecha, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@horaInicio", horaInicio, DbType.AnsiStringFixedLength, null, null);
        	
            sp.Command.AddParameter("@horaFin", horaFin, DbType.AnsiStringFixedLength, null, null);
        	
            sp.Command.AddParameter("@duracion", duracion, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idConsultorio", idConsultorio, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@citarPorBloques", citarPorBloques, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@maximoSobreTurnos", maximoSobreTurnos, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@cantidadInterconsulta", cantidadInterconsulta, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idAgendaEstado", idAgendaEstado, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@turnosDisponibles", turnosDisponibles, DbType.Boolean, null, null);
        	
            sp.Command.AddOutputParameter("@error", DbType.AnsiString, null, null);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the Con_GuardarTurno Procedure
        /// </summary>
        public static StoredProcedure ConGuardarTurno(int? idPaciente, int? idAgenda, int? idObraSocial, int? idTurnoEstado, int? idUsuario, DateTime? fecha, string hora, bool? sobreturno, int? idTipoTurno, string errorX, int? idTurno)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("Con_GuardarTurno", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idPaciente", idPaciente, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idAgenda", idAgenda, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idObraSocial", idObraSocial, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idTurnoEstado", idTurnoEstado, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idUsuario", idUsuario, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@fecha", fecha, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@hora", hora, DbType.AnsiStringFixedLength, null, null);
        	
            sp.Command.AddParameter("@sobreturno", sobreturno, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@idTipoTurno", idTipoTurno, DbType.Int32, 0, 10);
        	
            sp.Command.AddOutputParameter("@error", DbType.String, null, null);
            
            sp.Command.AddOutputParameter("@idTurno", DbType.Int32, 0, 10);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the CON_Insertar_Paciente_En_Agenda_Grupal Procedure
        /// </summary>
        public static StoredProcedure ConInsertarPacienteEnAgendaGrupal(int? idAgendaGrupal, int? idPaciente, string ModifiedBy, DateTime? ModifiedOn)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("CON_Insertar_Paciente_En_Agenda_Grupal", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idAgendaGrupal", idAgendaGrupal, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idPaciente", idPaciente, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@ModifiedBy", ModifiedBy, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@ModifiedOn", ModifiedOn, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the CON_MotivoDeBloqueo Procedure
        /// </summary>
        public static StoredProcedure ConMotivoDeBloqueo()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("CON_MotivoDeBloqueo", DataService.GetInstance("insProvider"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the CON_PlanillaPorAgenda Procedure
        /// </summary>
        public static StoredProcedure ConPlanillaPorAgenda(int? idAgenda)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("CON_PlanillaPorAgenda", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idAgenda", idAgenda, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the Con_TurnoAuditoriaBuscar Procedure
        /// </summary>
        public static StoredProcedure ConTurnoAuditoriaBuscar(string fechaInicio, string fechaFin, int? Agenda, int? Estado, int? consultorio, int? especialidad, int? profesional, int? idTipoAgenda, int? efector, int? documento)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("Con_TurnoAuditoriaBuscar", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@fechaInicio", fechaInicio, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@fechaFin", fechaFin, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@Agenda", Agenda, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@Estado", Estado, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@consultorio", consultorio, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@especialidad", especialidad, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@profesional", profesional, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idTipoAgenda", idTipoAgenda, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@documento", documento, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the CON_TurnosAcompaniante Procedure
        /// </summary>
        public static StoredProcedure ConTurnosAcompaniante(int? idTurno)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("CON_TurnosAcompaniante", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idTurno", idTurno, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the Con_TurnosEspecialidad Procedure
        /// </summary>
        public static StoredProcedure ConTurnosEspecialidad(int? idServicio, int? idTipoAgenda, int? idEspecialidad, string fechainicio, string fechafin)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("Con_TurnosEspecialidad", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idServicio", idServicio, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idTipoAgenda", idTipoAgenda, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idEspecialidad", idEspecialidad, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@fechainicio", fechainicio, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@fechafin", fechafin, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the CON_TurnosPorAgenda Procedure
        /// </summary>
        public static StoredProcedure ConTurnosPorAgenda(int? idAgenda)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("CON_TurnosPorAgenda", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idAgenda", idAgenda, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the CON_UpdateLLamadaDemandaRechazada Procedure
        /// </summary>
        public static StoredProcedure ConUpdateLLamadaDemandaRechazada(int? idDemandaRechazada, string observacionLLamada, int? idUsuario)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("CON_UpdateLLamadaDemandaRechazada", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idDemandaRechazada", idDemandaRechazada, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@observacionLLamada", observacionLLamada, DbType.String, null, null);
        	
            sp.Command.AddParameter("@idUsuario", idUsuario, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the Diccionario Procedure
        /// </summary>
        public static StoredProcedure Diccionario()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("Diccionario", DataService.GetInstance("insProvider"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the GetMaximoNumeroSD Procedure
        /// </summary>
        public static StoredProcedure GetMaximoNumeroSD()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("GetMaximoNumeroSD", DataService.GetInstance("insProvider"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the GetMenu Procedure
        /// </summary>
        public static StoredProcedure GetMenu(int? idusuario)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("GetMenu", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idusuario", idusuario, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the GetMenu2 Procedure
        /// </summary>
        public static StoredProcedure GetMenu2(int? idperfil)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("GetMenu2", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idperfil", idperfil, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the GetModuloObjetos Procedure
        /// </summary>
        public static StoredProcedure GetModuloObjetos(int? idModulo, int? idPerfil)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("GetModuloObjetos", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idModulo", idModulo, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idPerfil", idPerfil, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the GetModulos Procedure
        /// </summary>
        public static StoredProcedure GetModulos(int? idPerfil)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("GetModulos", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idPerfil", idPerfil, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the GetObjetos Procedure
        /// </summary>
        public static StoredProcedure GetObjetos(int? modulo, int? perfil)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("GetObjetos", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@modulo", modulo, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@perfil", perfil, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the GetPacientes Procedure
        /// </summary>
        public static StoredProcedure GetPacientes(string filtro)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("GetPacientes", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@filtro", filtro, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the GetPacientesPorDocumento Procedure
        /// </summary>
        public static StoredProcedure GetPacientesPorDocumento(int? numerodoc)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("GetPacientesPorDocumento", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@numerodoc", numerodoc, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the GetPacientesPorDocumentoSinOSIdentificado Procedure
        /// </summary>
        public static StoredProcedure GetPacientesPorDocumentoSinOSIdentificado(int? numerodoc)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("GetPacientesPorDocumentoSinOSIdentificado", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@numerodoc", numerodoc, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the GetPacientesPorHistoriaClinica Procedure
        /// </summary>
        public static StoredProcedure GetPacientesPorHistoriaClinica(int? hc)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("GetPacientesPorHistoriaClinica", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@hc", hc, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the GetPacientesPorNombres Procedure
        /// </summary>
        public static StoredProcedure GetPacientesPorNombres(DateTime? fnacimiento, string nombre, string apellido, int? dni, string parentNombre, string parentApellido)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("GetPacientesPorNombres", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@fnacimiento", fnacimiento, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@nombre", nombre, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@apellido", apellido, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@dni", dni, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@parentNombre", parentNombre, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@parentApellido", parentApellido, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the GetPacientesReporte Procedure
        /// </summary>
        public static StoredProcedure GetPacientesReporte(int? efector, string apellido, int? sexo, int? estado, DateTime? finicioturno, DateTime? ffinturno)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("GetPacientesReporte", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@apellido", apellido, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@sexo", sexo, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@estado", estado, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@finicioturno", finicioturno, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@ffinturno", ffinturno, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the GetPermisos Procedure
        /// </summary>
        public static StoredProcedure GetPermisos(int? idperfil, int? idefector)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("GetPermisos", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idperfil", idperfil, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idefector", idefector, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the hsp_Guardia_ActualizarTurnoActual Procedure
        /// </summary>
        public static StoredProcedure HspGuardiaActualizarTurnoActual(bool? tipoguardia, bool? avanzarTurno)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("hsp_Guardia_ActualizarTurnoActual", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@tipo_guardia", tipoguardia, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@avanzarTurno", avanzarTurno, DbType.Boolean, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the hsp_Guardia_ActualizarTurnoActualPac Procedure
        /// </summary>
        public static StoredProcedure HspGuardiaActualizarTurnoActualPac(bool? tipoguardia, int? idReg, int? idPac, string NomPac)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("hsp_Guardia_ActualizarTurnoActualPac", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@tipo_guardia", tipoguardia, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@idReg", idReg, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idPac", idPac, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@NomPac", NomPac, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the hsp_Guardia_AsignarTurno Procedure
        /// </summary>
        public static StoredProcedure HspGuardiaAsignarTurno(int? registro, bool? sobreescribir)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("hsp_Guardia_AsignarTurno", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@registro", registro, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@sobreescribir", sobreescribir, DbType.Boolean, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the hsp_Guardia_FiltrarRegistros Procedure
        /// </summary>
        public static StoredProcedure HspGuardiaFiltrarRegistros(int? registroID, string historiaID, string dni, string apellido, string nombre, string idObraSocial, int? edadDesde, int? edadHasta, DateTime? fechaIngresoDesde, DateTime? fechaIngresoHasta, int? tipoIngreso, DateTime? fechaEgresoDesde, DateTime? fechaEgresoHasta, int? tipoEgreso, int? idMedicoResponsable, string tipoGuardia, string DiagnosticoCie10Asignado)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("hsp_Guardia_FiltrarRegistros", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@registroID", registroID, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@historiaID", historiaID, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@dni", dni, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@apellido", apellido, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@nombre", nombre, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idObraSocial", idObraSocial, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@edadDesde", edadDesde, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@edadHasta", edadHasta, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@fechaIngresoDesde", fechaIngresoDesde, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@fechaIngresoHasta", fechaIngresoHasta, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@tipoIngreso", tipoIngreso, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@fechaEgresoDesde", fechaEgresoDesde, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@fechaEgresoHasta", fechaEgresoHasta, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@tipoEgreso", tipoEgreso, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idMedicoResponsable", idMedicoResponsable, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@tipoGuardia", tipoGuardia, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@DiagnosticoCie10Asignado", DiagnosticoCie10Asignado, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the hsp_Guardia_PacienteIngresado Procedure
        /// </summary>
        public static StoredProcedure HspGuardiaPacienteIngresado(int? paciente)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("hsp_Guardia_PacienteIngresado", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@paciente", paciente, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the hsp_Guardia_Registro_Proximo_Turno Procedure
        /// </summary>
        public static StoredProcedure HspGuardiaRegistroProximoTurno(int? idMedico, int? idEfector)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("hsp_Guardia_Registro_Proximo_Turno", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idMedico", idMedico, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idEfector", idEfector, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the hsp_Guardia_Registros_Reporte Procedure
        /// </summary>
        public static StoredProcedure HspGuardiaRegistrosReporte(int? registroID)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("hsp_Guardia_Registros_Reporte", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@registroID", registroID, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the hsp_Guardia_SetTriage Procedure
        /// </summary>
        public static StoredProcedure HspGuardiaSetTriage(int? idRegistro, int? idEfector, int? idUser)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("hsp_Guardia_SetTriage", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idRegistro", idRegistro, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idEfector", idEfector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idUser", idUser, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the InicializarPacientes Procedure
        /// </summary>
        public static StoredProcedure InicializarPacientes()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("InicializarPacientes", DataService.GetInstance("insProvider"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_BorrarInsumosEfector Procedure
        /// </summary>
        public static StoredProcedure InsBorrarInsumosEfector(int? idEfector, string letra)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_BorrarInsumosEfector", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idEfector", idEfector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@letra", letra, DbType.AnsiStringFixedLength, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_ConsumoMedxPaciente Procedure
        /// </summary>
        public static StoredProcedure InsConsumoMedxPaciente(int? insumo, int? efector, DateTime? finicio, DateTime? ffin)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_ConsumoMedxPaciente", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@insumo", insumo, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@finicio", finicio, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@ffin", ffin, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_EliminaInsumosEfector Procedure
        /// </summary>
        public static StoredProcedure InsEliminaInsumosEfector(int? idEfector, int? idInsumo)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_EliminaInsumosEfector", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idEfector", idEfector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idInsumo", idInsumo, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_EntregasMedicamentos Procedure
        /// </summary>
        public static StoredProcedure InsEntregasMedicamentos(int? insumo, int? efector, DateTime? finicio, DateTime? ffin)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_EntregasMedicamentos", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@insumo", insumo, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@finicio", finicio, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@ffin", ffin, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_EntregasMedicamentosDetalle Procedure
        /// </summary>
        public static StoredProcedure InsEntregasMedicamentosDetalle(int? insumo, int? efector, int? deposito)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_EntregasMedicamentosDetalle", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@insumo", insumo, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@deposito", deposito, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetBotiquinServicios Procedure
        /// </summary>
        public static StoredProcedure InsGetBotiquinServicios(DateTime? fecha, int? efector, int? deposito)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetBotiquinServicios", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@fecha", fecha, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@deposito", deposito, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetBotiquinServiciosDetalle Procedure
        /// </summary>
        public static StoredProcedure InsGetBotiquinServiciosDetalle(DateTime? fecha, int? efector, int? deposito, int? servicio)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetBotiquinServiciosDetalle", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@fecha", fecha, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@deposito", deposito, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@servicio", servicio, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetConsultaPedidos Procedure
        /// </summary>
        public static StoredProcedure InsGetConsultaPedidos(DateTime? finicio, DateTime? ffin, int? efector, int? deposito, int? rubro, int? estado, int? nropedido)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetConsultaPedidos", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@finicio", finicio, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@ffin", ffin, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@deposito", deposito, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@rubro", rubro, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@estado", estado, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@nropedido", nropedido, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetConsultasProvisionesH Procedure
        /// </summary>
        public static StoredProcedure InsGetConsultasProvisionesH(DateTime? finicio, DateTime? ffin, int? tipoPedido, int? proveedor, int? efector, int? tipoMov, int? deposito)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetConsultasProvisionesH", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@finicio", finicio, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@ffin", ffin, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@tipoPedido", tipoPedido, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@proveedor", proveedor, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@tipoMov", tipoMov, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@deposito", deposito, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetConsultasProvisionesH_Detalle Procedure
        /// </summary>
        public static StoredProcedure InsGetConsultasProvisionesHDetalle(DateTime? finicio, DateTime? ffin, int? tipoPedido, int? proveedor, int? efector, int? tipoMov, int? deposito, int? insumo)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetConsultasProvisionesH_Detalle", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@finicio", finicio, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@ffin", ffin, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@tipoPedido", tipoPedido, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@proveedor", proveedor, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@tipoMov", tipoMov, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@deposito", deposito, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@insumo", insumo, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetDepositoZona Procedure
        /// </summary>
        public static StoredProcedure InsGetDepositoZona(int? Efector)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetDepositoZona", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@Efector", Efector, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetDispensacion Procedure
        /// </summary>
        public static StoredProcedure InsGetDispensacion(int? dispensacion)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetDispensacion", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@dispensacion", dispensacion, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetDispensacionReceta Procedure
        /// </summary>
        public static StoredProcedure InsGetDispensacionReceta(int? efector, int? prescripcion)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetDispensacionReceta", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@prescripcion", prescripcion, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetEnviosBotiquin Procedure
        /// </summary>
        public static StoredProcedure InsGetEnviosBotiquin(int? pedido)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetEnviosBotiquin", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@pedido", pedido, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetHistorialRecetas Procedure
        /// </summary>
        public static StoredProcedure InsGetHistorialRecetas(int? efector, int? deposito)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetHistorialRecetas", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@deposito", deposito, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetInsumosDisponibles Procedure
        /// </summary>
        public static StoredProcedure InsGetInsumosDisponibles(int? efector, int? deposito)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetInsumosDisponibles", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@deposito", deposito, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetInsumosDisponiblesGrilla Procedure
        /// </summary>
        public static StoredProcedure InsGetInsumosDisponiblesGrilla(int? efector, int? deposito, int? insumo)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetInsumosDisponiblesGrilla", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@deposito", deposito, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@insumo", insumo, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetInsumosDisponiblesStock Procedure
        /// </summary>
        public static StoredProcedure InsGetInsumosDisponiblesStock(int? efector, int? deposito, int? insumo)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetInsumosDisponiblesStock", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@deposito", deposito, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@insumo", insumo, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetInsumosEfectorDeposito Procedure
        /// </summary>
        public static StoredProcedure InsGetInsumosEfectorDeposito(int? efector, int? deposito, int? insumo)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetInsumosEfectorDeposito", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@deposito", deposito, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@insumo", insumo, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetInsumosEfectorxRubro Procedure
        /// </summary>
        public static StoredProcedure InsGetInsumosEfectorxRubro(int? efector, int? codigo)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetInsumosEfectorxRubro", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@codigo", codigo, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetInsumosxEfector Procedure
        /// </summary>
        public static StoredProcedure InsGetInsumosxEfector(int? efector)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetInsumosxEfector", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetInsumosxRubros Procedure
        /// </summary>
        public static StoredProcedure InsGetInsumosxRubros(int? idrubro)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetInsumosxRubros", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idrubro", idrubro, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetListadoAmbulatorias Procedure
        /// </summary>
        public static StoredProcedure InsGetListadoAmbulatorias(DateTime? fecha)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetListadoAmbulatorias", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@fecha", fecha, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetListadoInternacion Procedure
        /// </summary>
        public static StoredProcedure InsGetListadoInternacion(DateTime? fecha)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetListadoInternacion", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@fecha", fecha, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetLoteGrilla Procedure
        /// </summary>
        public static StoredProcedure InsGetLoteGrilla(int? id)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetLoteGrilla", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@id", id, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetMaxCodigoInsumo Procedure
        /// </summary>
        public static StoredProcedure InsGetMaxCodigoInsumo()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetMaxCodigoInsumo", DataService.GetInstance("insProvider"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetMaxCodigoRubro Procedure
        /// </summary>
        public static StoredProcedure InsGetMaxCodigoRubro()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetMaxCodigoRubro", DataService.GetInstance("insProvider"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetMedicacionAnterior Procedure
        /// </summary>
        public static StoredProcedure InsGetMedicacionAnterior(int? idPaciente, DateTime? finicio, DateTime? ffin)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetMedicacionAnterior", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idPaciente", idPaciente, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@finicio", finicio, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@ffin", ffin, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetMedicamentos Procedure
        /// </summary>
        public static StoredProcedure InsGetMedicamentos(int? insumo, DateTime? finicio, DateTime? ffin)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetMedicamentos", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@insumo", insumo, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@finicio", finicio, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@ffin", ffin, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetMenu Procedure
        /// </summary>
        public static StoredProcedure InsGetMenu(int? idperfil)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetMenu", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idperfil", idperfil, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetMenuPrincipal Procedure
        /// </summary>
        public static StoredProcedure InsGetMenuPrincipal(int? idperfil)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetMenuPrincipal", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idperfil", idperfil, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetMenuSecundario Procedure
        /// </summary>
        public static StoredProcedure InsGetMenuSecundario(int? idMenu, int? idperfil)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetMenuSecundario", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idMenu", idMenu, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idperfil", idperfil, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetMovimientos_DepositoEfector Procedure
        /// </summary>
        public static StoredProcedure InsGetMovimientosDepositoEfector(DateTime? finicio, DateTime? ffin, int? tipoMov, int? deposito, int? efector, int? insumo)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetMovimientos_DepositoEfector", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@finicio", finicio, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@ffin", ffin, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@tipoMov", tipoMov, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@deposito", deposito, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@insumo", insumo, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetPacientes Procedure
        /// </summary>
        public static StoredProcedure InsGetPacientes(int? numerodoc)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetPacientes", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@numerodoc", numerodoc, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetPedidoDetalle Procedure
        /// </summary>
        public static StoredProcedure InsGetPedidoDetalle(int? pedido)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetPedidoDetalle", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@pedido", pedido, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetPedidoEncabezado Procedure
        /// </summary>
        public static StoredProcedure InsGetPedidoEncabezado(int? pedido)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetPedidoEncabezado", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@pedido", pedido, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetPedidoProvisionExterna Procedure
        /// </summary>
        public static StoredProcedure InsGetPedidoProvisionExterna(int? efector, int? pedido, string IpServidor)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetPedidoProvisionExterna", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@pedido", pedido, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@IpServidor", IpServidor, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetPedidos Procedure
        /// </summary>
        public static StoredProcedure InsGetPedidos(DateTime? finicio, DateTime? ffin, int? efector, int? deposito)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetPedidos", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@finicio", finicio, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@ffin", ffin, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@deposito", deposito, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetPedidosH Procedure
        /// </summary>
        public static StoredProcedure InsGetPedidosH(DateTime? finicio, DateTime? ffin, int? depositoProveedor, int? deposito, int? rubro, int? estado, int? autorizado, int? efector)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetPedidosH", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@finicio", finicio, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@ffin", ffin, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@depositoProveedor", depositoProveedor, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@deposito", deposito, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@rubro", rubro, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@estado", estado, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@autorizado", autorizado, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetPedidosHGenerados Procedure
        /// </summary>
        public static StoredProcedure InsGetPedidosHGenerados(DateTime? finicio, DateTime? ffin, int? depositoSolicitante, int? depositoProveedor, int? rubro, int? estado, int? autorizado, int? efector)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetPedidosHGenerados", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@finicio", finicio, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@ffin", ffin, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@depositoSolicitante", depositoSolicitante, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@depositoProveedor", depositoProveedor, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@rubro", rubro, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@estado", estado, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@autorizado", autorizado, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetPedidosHZona Procedure
        /// </summary>
        public static StoredProcedure InsGetPedidosHZona(DateTime? finicio, DateTime? ffin, int? solicitante, int? rubro, int? estado, int? efector)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetPedidosHZona", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@finicio", finicio, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@ffin", ffin, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@solicitante", solicitante, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@rubro", rubro, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@estado", estado, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetPedidosInternos Procedure
        /// </summary>
        public static StoredProcedure InsGetPedidosInternos(DateTime? finicio, DateTime? ffin, int? depositop, int? rubro, int? autorizado, int? efector)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetPedidosInternos", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@finicio", finicio, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@ffin", ffin, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@depositop", depositop, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@rubro", rubro, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@autorizado", autorizado, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GEtPedidosRealizados Procedure
        /// </summary>
        public static StoredProcedure InsGEtPedidosRealizados(DateTime? finicio, DateTime? ffin, int? depositop, int? rubro, int? autorizado, int? efector)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GEtPedidosRealizados", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@finicio", finicio, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@ffin", ffin, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@depositop", depositop, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@rubro", rubro, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@autorizado", autorizado, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetPrescripcion Procedure
        /// </summary>
        public static StoredProcedure InsGetPrescripcion(int? receta)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetPrescripcion", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@receta", receta, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetPrescripciones Procedure
        /// </summary>
        public static StoredProcedure InsGetPrescripciones(int? efector, int? tipoPresc, int? tipoTratamiento, DateTime? fInicio, DateTime? fFin, int? dni, int? Vencida)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetPrescripciones", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@tipoPresc", tipoPresc, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@tipoTratamiento", tipoTratamiento, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@fInicio", fInicio, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@fFin", fFin, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@dni", dni, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@Vencida", Vencida, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetProvision Procedure
        /// </summary>
        public static StoredProcedure InsGetProvision(int? pedido)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetProvision", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@pedido", pedido, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetProvisionExterna Procedure
        /// </summary>
        public static StoredProcedure InsGetProvisionExterna(DateTime? finicio, DateTime? ffin, int? efector, string IpServidor)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetProvisionExterna", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@finicio", finicio, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@ffin", ffin, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@IpServidor", IpServidor, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetProvisionInterna Procedure
        /// </summary>
        public static StoredProcedure InsGetProvisionInterna(int? pedido, int? efector)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetProvisionInterna", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@pedido", pedido, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetRubroInsumo Procedure
        /// </summary>
        public static StoredProcedure InsGetRubroInsumo(int? insumo)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetRubroInsumo", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@insumo", insumo, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetRubroPrimerNivel Procedure
        /// </summary>
        public static StoredProcedure InsGetRubroPrimerNivel(int? rubroprimernivel)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetRubroPrimerNivel", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@rubroprimernivel", rubroprimernivel, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetStock Procedure
        /// </summary>
        public static StoredProcedure InsGetStock(int? efector, int? deposito, DateTime? finicio, DateTime? ffin, int? proveedor)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetStock", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@deposito", deposito, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@finicio", finicio, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@ffin", ffin, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@proveedor", proveedor, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetStockInsumo Procedure
        /// </summary>
        public static StoredProcedure InsGetStockInsumo(int? idInsumo)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetStockInsumo", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idInsumo", idInsumo, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetStockInterno Procedure
        /// </summary>
        public static StoredProcedure InsGetStockInterno(int? deposito, int? efector)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetStockInterno", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@deposito", deposito, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetStockMedicamentos Procedure
        /// </summary>
        public static StoredProcedure InsGetStockMedicamentos(int? deposito, int? insumo)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetStockMedicamentos", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@deposito", deposito, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@insumo", insumo, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetStockPrescripcion Procedure
        /// </summary>
        public static StoredProcedure InsGetStockPrescripcion(int? deposito, int? insumo, int? efector)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetStockPrescripcion", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@deposito", deposito, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@insumo", insumo, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetStockxEfector Procedure
        /// </summary>
        public static StoredProcedure InsGetStockxEfector(int? efector, int? rubro, int? deposito, int? insumo)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetStockxEfector", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@rubro", rubro, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@deposito", deposito, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@insumo", insumo, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetTrazabilidadxRubro Procedure
        /// </summary>
        public static StoredProcedure InsGetTrazabilidadxRubro(DateTime? finicio, DateTime? ffin, int? rubro, int? insumo)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetTrazabilidadxRubro", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@finicio", finicio, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@ffin", ffin, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@rubro", rubro, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@insumo", insumo, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetUInsumos Procedure
        /// </summary>
        public static StoredProcedure InsGetUInsumos(int? efector, int? insumo)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetUInsumos", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@insumo", insumo, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_GetVencimiento Procedure
        /// </summary>
        public static StoredProcedure InsGetVencimiento(int? efector, DateTime? finicio, DateTime? ffin)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_GetVencimiento", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@finicio", finicio, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@ffin", ffin, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_InsertProvisionExterna Procedure
        /// </summary>
        public static StoredProcedure InsInsertProvisionExterna(string ipSQL, string dbSQL, int? idEfector, int? idEfectorProveedor, int? idDeposito, int? idDepositoProveedor, DateTime? fecha, DateTime? fechaRecepcion, int? idTipoPedido, int? idEstadoPedido, int? idRubro, string observaciones, string responsable, bool? autorizado, int? idProveedor, int? idTipoComprobante, string numeroComprobante, bool? estado, bool? baja, string CreatedBy, DateTime? CreatedOn, string ModifiedBy, DateTime? ModifiedOn)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_InsertProvisionExterna", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ipSQL", ipSQL, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@dbSQL", dbSQL, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idEfector", idEfector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idEfectorProveedor", idEfectorProveedor, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idDeposito", idDeposito, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idDepositoProveedor", idDepositoProveedor, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@fecha", fecha, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@fechaRecepcion", fechaRecepcion, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@idTipoPedido", idTipoPedido, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idEstadoPedido", idEstadoPedido, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idRubro", idRubro, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@observaciones", observaciones, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@responsable", responsable, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@autorizado", autorizado, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@idProveedor", idProveedor, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idTipoComprobante", idTipoComprobante, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@numeroComprobante", numeroComprobante, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@estado", estado, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@baja", baja, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@CreatedBy", CreatedBy, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@CreatedOn", CreatedOn, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@ModifiedBy", ModifiedBy, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@ModifiedOn", ModifiedOn, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_InsertProvisionExternaDetalle Procedure
        /// </summary>
        public static StoredProcedure InsInsertProvisionExternaDetalle(string ipSQL, string dbSQL, int? idPedido, int? idInsumo, DateTime? fechaPedido, int? cantidad, int? presentacion, int? cantidadSolicitada, int? cantidadAutorizada, int? cantidadEmitida, int? cantidadRecibida, int? stock, decimal? precioUnitario, string observacion, int? renglonOC, int? renglon, string numeroLote, DateTime? fechaVencimiento, bool? baja, string CreatedBy, DateTime? CreatedOn, string ModifiedBy, DateTime? ModifiedOn)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_InsertProvisionExternaDetalle", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ipSQL", ipSQL, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@dbSQL", dbSQL, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idPedido", idPedido, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idInsumo", idInsumo, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@fechaPedido", fechaPedido, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@cantidad", cantidad, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@presentacion", presentacion, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@cantidadSolicitada", cantidadSolicitada, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@cantidadAutorizada", cantidadAutorizada, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@cantidadEmitida", cantidadEmitida, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@cantidadRecibida", cantidadRecibida, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@stock", stock, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@precioUnitario", precioUnitario, DbType.Decimal, 3, 18);
        	
            sp.Command.AddParameter("@observacion", observacion, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@renglonOC", renglonOC, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@renglon", renglon, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@numeroLote", numeroLote, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@fechaVencimiento", fechaVencimiento, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@baja", baja, DbType.Boolean, null, null);
        	
            sp.Command.AddParameter("@CreatedBy", CreatedBy, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@CreatedOn", CreatedOn, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@ModifiedBy", ModifiedBy, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@ModifiedOn", ModifiedOn, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_InsumosEntregados Procedure
        /// </summary>
        public static StoredProcedure InsInsumosEntregados(int? efector, int? deposito, DateTime? finicio, DateTime? ffin)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_InsumosEntregados", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@deposito", deposito, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@finicio", finicio, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@ffin", ffin, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_PacientesInternados Procedure
        /// </summary>
        public static StoredProcedure InsPacientesInternados(int? idEfector, int? documento)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_PacientesInternados", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idEfector", idEfector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@documento", documento, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_RecepcionInsumosH Procedure
        /// </summary>
        public static StoredProcedure InsRecepcionInsumosH(DateTime? finicio, DateTime? ffin, int? deposito, int? rubro, int? estado)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_RecepcionInsumosH", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@finicio", finicio, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@ffin", ffin, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@deposito", deposito, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@rubro", rubro, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@estado", estado, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_RecepcionInternaInsumos Procedure
        /// </summary>
        public static StoredProcedure InsRecepcionInternaInsumos(DateTime? finicio, DateTime? ffin, int? deposito, int? depositoproveedor, int? rubro, int? efector)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_RecepcionInternaInsumos", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@finicio", finicio, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@ffin", ffin, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@deposito", deposito, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@depositoproveedor", depositoproveedor, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@rubro", rubro, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_RecuperaMedicamentos Procedure
        /// </summary>
        public static StoredProcedure InsRecuperaMedicamentos(int? rubro, string nombre)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_RecuperaMedicamentos", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@rubro", rubro, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@nombre", nombre, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_TopPedidos Procedure
        /// </summary>
        public static StoredProcedure InsTopPedidos(int? efector, int? deposito, DateTime? finicio, DateTime? ffin)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_TopPedidos", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@deposito", deposito, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@finicio", finicio, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@ffin", ffin, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INS_TopProvisiones Procedure
        /// </summary>
        public static StoredProcedure InsTopProvisiones(int? efector, int? deposito, DateTime? finicio, DateTime? ffin)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INS_TopProvisiones", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@deposito", deposito, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@finicio", finicio, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@ffin", ffin, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INT_ActualizaCausaExterna Procedure
        /// </summary>
        public static StoredProcedure IntActualizaCausaExterna()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INT_ActualizaCausaExterna", DataService.GetInstance("insProvider"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INT_CamasXHabitacion Procedure
        /// </summary>
        public static StoredProcedure IntCamasXHabitacion(int? idServicio, int? idHabitacion)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INT_CamasXHabitacion", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idServicio", idServicio, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idHabitacion", idHabitacion, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INT_CargarHabitaciones Procedure
        /// </summary>
        public static StoredProcedure IntCargarHabitaciones(int? idServicio)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INT_CargarHabitaciones", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idServicio", idServicio, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INT_CensoDiario Procedure
        /// </summary>
        public static StoredProcedure IntCensoDiario(int? idServicio, DateTime? fecha)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INT_CensoDiario", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idServicio", idServicio, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@fecha", fecha, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INT_CensoMensual Procedure
        /// </summary>
        public static StoredProcedure IntCensoMensual(int? idServicio, string fechaDesde, string fechaHasta)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INT_CensoMensual", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idServicio", idServicio, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@fechaDesde", fechaDesde, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@fechaHasta", fechaHasta, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INT_CodigosEventoObstetrico Procedure
        /// </summary>
        public static StoredProcedure IntCodigosEventoObstetrico()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INT_CodigosEventoObstetrico", DataService.GetInstance("insProvider"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INT_CompruebaServicio Procedure
        /// </summary>
        public static StoredProcedure IntCompruebaServicio(int? idServicio)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INT_CompruebaServicio", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idServicio", idServicio, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INT_Epicrisis Procedure
        /// </summary>
        public static StoredProcedure IntEpicrisis(int? idIngreso)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INT_Epicrisis", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idIngreso", idIngreso, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INT_InformeDiagnostico Procedure
        /// </summary>
        public static StoredProcedure IntInformeDiagnostico(int? tipo, int? idServicio, string fechaDesde, string fechaHasta, string capitulo)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INT_InformeDiagnostico", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@tipo", tipo, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idServicio", idServicio, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@fechaDesde", fechaDesde, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@fechaHasta", fechaHasta, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@capitulo", capitulo, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INT_InformeHospitalizacion Procedure
        /// </summary>
        public static StoredProcedure IntInformeHospitalizacion(int? idIngreso)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INT_InformeHospitalizacion", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idIngreso", idIngreso, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INT_InformeProcedimientos Procedure
        /// </summary>
        public static StoredProcedure IntInformeProcedimientos(int? tipo, int? idServicio, string fechaDesde, string fechaHasta, string capitulo)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INT_InformeProcedimientos", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@tipo", tipo, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idServicio", idServicio, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@fechaDesde", fechaDesde, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@fechaHasta", fechaHasta, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@capitulo", capitulo, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INT_ListaAuditoria Procedure
        /// </summary>
        public static StoredProcedure IntListaAuditoria(int? idIngreso)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INT_ListaAuditoria", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idIngreso", idIngreso, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INT_ListaCamas Procedure
        /// </summary>
        public static StoredProcedure IntListaCamas(int? idHabitacion, int? idServicio, int? idTipoCama, int? tipoCamaOcupacion)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INT_ListaCamas", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idHabitacion", idHabitacion, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idServicio", idServicio, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idTipoCama", idTipoCama, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@tipoCamaOcupacion", tipoCamaOcupacion, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INT_ListaCamasDisponibles Procedure
        /// </summary>
        public static StoredProcedure IntListaCamasDisponibles(int? idServicio, DateTime? fecha)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INT_ListaCamasDisponibles", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idServicio", idServicio, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@fecha", fecha, DbType.DateTime, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INT_ListaCodigoCie10 Procedure
        /// </summary>
        public static StoredProcedure IntListaCodigoCie10(string CODIGO, int? tipoBusqueda)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INT_ListaCodigoCie10", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@CODIGO", CODIGO, DbType.String, null, null);
        	
            sp.Command.AddParameter("@tipoBusqueda", tipoBusqueda, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INT_ListaDiagnosticos Procedure
        /// </summary>
        public static StoredProcedure IntListaDiagnosticos(int? idIngreso)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INT_ListaDiagnosticos", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idIngreso", idIngreso, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INT_ListaInternaciones Procedure
        /// </summary>
        public static StoredProcedure IntListaInternaciones(int? idIngreso, int? idServicio, DateTime? fechaDesde, DateTime? fechaHasta, string dni, string apellido, string nombre, int? motivoEgreso)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INT_ListaInternaciones", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idIngreso", idIngreso, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idServicio", idServicio, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@fechaDesde", fechaDesde, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@fechaHasta", fechaHasta, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@dni", dni, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@apellido", apellido, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@nombre", nombre, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@motivoEgreso", motivoEgreso, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INT_ListaInternaciones_old Procedure
        /// </summary>
        public static StoredProcedure IntListaInternacionesOld(string FiltroBusqueda, int? TipoLista)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INT_ListaInternaciones_old", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@FiltroBusqueda", FiltroBusqueda, DbType.String, null, null);
        	
            sp.Command.AddParameter("@TipoLista", TipoLista, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INT_ListaPacientes Procedure
        /// </summary>
        public static StoredProcedure IntListaPacientes(string dni, string nombre, string apellido, string dniMadre, string nomMadre, string apeMadre)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INT_ListaPacientes", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@dni", dni, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@nombre", nombre, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@apellido", apellido, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@dniMadre", dniMadre, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@nomMadre", nomMadre, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@apeMadre", apeMadre, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INT_ListaResumenDeServicios Procedure
        /// </summary>
        public static StoredProcedure IntListaResumenDeServicios()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INT_ListaResumenDeServicios", DataService.GetInstance("insProvider"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INT_ListaServiciosXIngreso Procedure
        /// </summary>
        public static StoredProcedure IntListaServiciosXIngreso(int? idIngreso)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INT_ListaServiciosXIngreso", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idIngreso", idIngreso, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INT_ProcesaCensoDiario Procedure
        /// </summary>
        public static StoredProcedure IntProcesaCensoDiario(string fecha)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INT_ProcesaCensoDiario", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@fecha", fecha, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INT_ProcesaCensoDiario_Anterior Procedure
        /// </summary>
        public static StoredProcedure IntProcesaCensoDiarioAnterior(string fecha)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INT_ProcesaCensoDiario_Anterior", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@fecha", fecha, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the INT_ResumenInternacion Procedure
        /// </summary>
        public static StoredProcedure IntResumenInternacion()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("INT_ResumenInternacion", DataService.GetInstance("insProvider"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the lab_actualizaunidadesmedida Procedure
        /// </summary>
        public static StoredProcedure LabActualizaunidadesmedida()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("lab_actualizaunidadesmedida", DataService.GetInstance("insProvider"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_ActualizaUsuarios Procedure
        /// </summary>
        public static StoredProcedure LabActualizaUsuarios()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_ActualizaUsuarios", DataService.GetInstance("insProvider"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_AnalisisFueraHT Procedure
        /// </summary>
        public static StoredProcedure LabAnalisisFueraHT(string fechaDesde, string fechaHasta, int? idEfectorSolicitante, int? idOrigen, int? idPrioridad, string idSector, int? numeroDesde, int? numeroHasta, string listaItem, string estado)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_AnalisisFueraHT", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@fechaDesde", fechaDesde, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@fechaHasta", fechaHasta, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idEfectorSolicitante", idEfectorSolicitante, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idOrigen", idOrigen, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idPrioridad", idPrioridad, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idSector", idSector, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@numeroDesde", numeroDesde, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@numeroHasta", numeroHasta, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@listaItem", listaItem, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@estado", estado, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_AntecedentesAnalisis Procedure
        /// </summary>
        public static StoredProcedure LabAntecedentesAnalisis(string idProtocolo, string fechaDesde, string fechaHasta, string idAnalisis, string numeroDocumento)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_AntecedentesAnalisis", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idProtocolo", idProtocolo, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@fechaDesde", fechaDesde, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@fechaHasta", fechaHasta, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idAnalisis", idAnalisis, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@numeroDocumento", numeroDocumento, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_AntecedentesAnalisis2 Procedure
        /// </summary>
        public static StoredProcedure LabAntecedentesAnalisis2(string idProtocolo, string fechaDesde, string fechaHasta, string idAnalisis, int? idPaciente)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_AntecedentesAnalisis2", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idProtocolo", idProtocolo, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@fechaDesde", fechaDesde, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@fechaHasta", fechaHasta, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idAnalisis", idAnalisis, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idPaciente", idPaciente, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_EstadisticaDetalladaDia Procedure
        /// </summary>
        public static StoredProcedure LabEstadisticaDetalladaDia(string fechaDesde, string fechaHasta, string agrupado, string idTipoServicio, string idArea, string idEfector, string idEspecialista, string imprimir, string estado)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_EstadisticaDetalladaDia", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@fechaDesde", fechaDesde, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@fechaHasta", fechaHasta, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@agrupado", agrupado, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idTipoServicio", idTipoServicio, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idArea", idArea, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idEfector", idEfector, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idEspecialista", idEspecialista, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@imprimir", imprimir, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@estado", estado, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_EstadisticaMicrobiologia Procedure
        /// </summary>
        public static StoredProcedure LabEstadisticaMicrobiologia(string fechaDesde, string fechaHasta, int? idAnalisis, string idOrigen, int? idTipoMuestra, int? idGermen, int? idAntibiotico, int? idsubitem, string tipoReporte, int? conATB)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_EstadisticaMicrobiologia", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@fechaDesde", fechaDesde, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@fechaHasta", fechaHasta, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idAnalisis", idAnalisis, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idOrigen", idOrigen, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idTipoMuestra", idTipoMuestra, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idGermen", idGermen, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idAntibiotico", idAntibiotico, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idsubitem", idsubitem, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@tipoReporte", tipoReporte, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@conATB", conATB, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_EstadisticaMicrobiologiaPorPaciente Procedure
        /// </summary>
        public static StoredProcedure LabEstadisticaMicrobiologiaPorPaciente(string fechaDesde, string fechaHasta, int? idAnalisis, int? idTipoMuestra, int? idGermen, int? idAntibiotico, int? idsubitem, string tipoReporte)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_EstadisticaMicrobiologiaPorPaciente", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@fechaDesde", fechaDesde, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@fechaHasta", fechaHasta, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idAnalisis", idAnalisis, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idTipoMuestra", idTipoMuestra, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idGermen", idGermen, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idAntibiotico", idAntibiotico, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idsubitem", idsubitem, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@tipoReporte", tipoReporte, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_EstadisticaPorAnalisis Procedure
        /// </summary>
        public static StoredProcedure LabEstadisticaPorAnalisis(string fechaDesde, string fechaHasta, string agrupado, string idTipoServicio, string idArea, string idEfector, string idEspecialista, string imprimir, string estado)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_EstadisticaPorAnalisis", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@fechaDesde", fechaDesde, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@fechaHasta", fechaHasta, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@agrupado", agrupado, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idTipoServicio", idTipoServicio, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idArea", idArea, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idEfector", idEfector, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idEspecialista", idEspecialista, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@imprimir", imprimir, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@estado", estado, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_EstadisticaPorArea Procedure
        /// </summary>
        public static StoredProcedure LabEstadisticaPorArea(string fechaDesde, string fechaHasta, string agrupado, string idTipoServicio, string idArea, string idEfector, string idEspecialista, string imprimir, string estado)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_EstadisticaPorArea", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@fechaDesde", fechaDesde, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@fechaHasta", fechaHasta, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@agrupado", agrupado, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idTipoServicio", idTipoServicio, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idArea", idArea, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idEfector", idEfector, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idEspecialista", idEspecialista, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@imprimir", imprimir, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@estado", estado, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_EstadisticaPorDerivaciones Procedure
        /// </summary>
        public static StoredProcedure LabEstadisticaPorDerivaciones(string fechaDesde, string fechaHasta, string agrupado, string idTipoServicio, string idArea, string idEfector, string idEspecialista, string imprimir, string estado)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_EstadisticaPorDerivaciones", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@fechaDesde", fechaDesde, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@fechaHasta", fechaHasta, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@agrupado", agrupado, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idTipoServicio", idTipoServicio, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idArea", idArea, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idEfector", idEfector, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idEspecialista", idEspecialista, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@imprimir", imprimir, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@estado", estado, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_EstadisticaPorDiagnostico Procedure
        /// </summary>
        public static StoredProcedure LabEstadisticaPorDiagnostico(string fechaDesde, string fechaHasta, string agrupado, string idTipoServicio, string idArea, string idEfector, string idEspecialista, string imprimir, string estado)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_EstadisticaPorDiagnostico", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@fechaDesde", fechaDesde, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@fechaHasta", fechaHasta, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@agrupado", agrupado, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idTipoServicio", idTipoServicio, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idArea", idArea, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idEfector", idEfector, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idEspecialista", idEspecialista, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@imprimir", imprimir, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@estado", estado, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_EstadisticaPorEfector Procedure
        /// </summary>
        public static StoredProcedure LabEstadisticaPorEfector(string fechaDesde, string fechaHasta, string agrupado, string idTipoServicio, string idArea, string idEfector, string idEspecialista, string imprimir, string estado)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_EstadisticaPorEfector", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@fechaDesde", fechaDesde, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@fechaHasta", fechaHasta, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@agrupado", agrupado, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idTipoServicio", idTipoServicio, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idArea", idArea, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idEfector", idEfector, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idEspecialista", idEspecialista, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@imprimir", imprimir, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@estado", estado, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_EstadisticaPorMedico Procedure
        /// </summary>
        public static StoredProcedure LabEstadisticaPorMedico(string fechaDesde, string fechaHasta, string agrupado, string idTipoServicio, string idArea, string idEfector, string idEspecialista, string imprimir, string estado)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_EstadisticaPorMedico", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@fechaDesde", fechaDesde, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@fechaHasta", fechaHasta, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@agrupado", agrupado, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idTipoServicio", idTipoServicio, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idArea", idArea, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idEfector", idEfector, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idEspecialista", idEspecialista, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@imprimir", imprimir, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@estado", estado, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_EstadisticaPorResultados Procedure
        /// </summary>
        public static StoredProcedure LabEstadisticaPorResultados(string fechaDesde, string fechaHasta, string tipoinforme, string idAnalisis)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_EstadisticaPorResultados", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@fechaDesde", fechaDesde, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@fechaHasta", fechaHasta, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@tipoinforme", tipoinforme, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idAnalisis", idAnalisis, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_EstadisticaPorResultados2 Procedure
        /// </summary>
        public static StoredProcedure LabEstadisticaPorResultados2(string fechaDesde, string fechaHasta, int? idAnalisis, int? tipoPaciente, int? grupoEtareo, int? sexo)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_EstadisticaPorResultados2", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@fechaDesde", fechaDesde, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@fechaHasta", fechaHasta, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idAnalisis", idAnalisis, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@tipoPaciente", tipoPaciente, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@grupoEtareo", grupoEtareo, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@sexo", sexo, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_EstadisticaPorResultadosNum Procedure
        /// </summary>
        public static StoredProcedure LabEstadisticaPorResultadosNum(string fechaDesde, string fechaHasta, int? idAnalisis, int? tipoPaciente, string valorDesde, string valorHasta, string imprimir, int? grupoEtareo, int? sexo)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_EstadisticaPorResultadosNum", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@fechaDesde", fechaDesde, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@fechaHasta", fechaHasta, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idAnalisis", idAnalisis, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@tipoPaciente", tipoPaciente, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@valorDesde", valorDesde, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@valorHasta", valorHasta, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@imprimir", imprimir, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@grupoEtareo", grupoEtareo, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@sexo", sexo, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_EstadisticaPorSector Procedure
        /// </summary>
        public static StoredProcedure LabEstadisticaPorSector(string fechaDesde, string fechaHasta, string agrupado, string idTipoServicio, string idArea, string idEfector, string idEspecialista, string imprimir, string estado)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_EstadisticaPorSector", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@fechaDesde", fechaDesde, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@fechaHasta", fechaHasta, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@agrupado", agrupado, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idTipoServicio", idTipoServicio, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idArea", idArea, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idEfector", idEfector, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idEspecialista", idEspecialista, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@imprimir", imprimir, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@estado", estado, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_EstadisticaProduccion Procedure
        /// </summary>
        public static StoredProcedure LabEstadisticaProduccion(string fechaDesde, string fechaHasta, string idArea, string idOrigen, string idSector)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_EstadisticaProduccion", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@fechaDesde", fechaDesde, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@fechaHasta", fechaHasta, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idArea", idArea, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idOrigen", idOrigen, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idSector", idSector, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_EstadisticaRankingDia Procedure
        /// </summary>
        public static StoredProcedure LabEstadisticaRankingDia(string fechaDesde, string fechaHasta, string agrupado, string idTipoServicio, string idArea, string idEfector, string idEspecialista, string imprimir, string estado)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_EstadisticaRankingDia", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@fechaDesde", fechaDesde, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@fechaHasta", fechaHasta, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@agrupado", agrupado, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idTipoServicio", idTipoServicio, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idArea", idArea, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idEfector", idEfector, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idEspecialista", idEspecialista, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@imprimir", imprimir, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@estado", estado, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_EstadisticasIncidencias Procedure
        /// </summary>
        public static StoredProcedure LabEstadisticasIncidencias(int? tipo, string fechaDesde, string fechaHasta)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_EstadisticasIncidencias", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@tipo", tipo, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@fechaDesde", fechaDesde, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@fechaHasta", fechaHasta, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_EstadisticasPesquisa Procedure
        /// </summary>
        public static StoredProcedure LabEstadisticasPesquisa(int? tipo, string fechaDesde, string fechaHasta, string item)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_EstadisticasPesquisa", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@tipo", tipo, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@fechaDesde", fechaDesde, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@fechaHasta", fechaHasta, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@item", item, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_EstadisticasSivila Procedure
        /// </summary>
        public static StoredProcedure LabEstadisticasSivila(int? grupo, int? subgrupo, int? etiologia, int? anio, string semana, string codigo, string sexo, int? idestablecimiento, string usuariosivila)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_EstadisticasSivila", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@grupo", grupo, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@subgrupo", subgrupo, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@etiologia", etiologia, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@anio", anio, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@semana", semana, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@codigo", codigo, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@sexo", sexo, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@id_establecimiento", idestablecimiento, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@usuario_sivila", usuariosivila, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_EstadisticaTotalizado Procedure
        /// </summary>
        public static StoredProcedure LabEstadisticaTotalizado(string fechaDesde, string fechaHasta, string agrupado, string idTipoServicio, string idArea, string idEfector, string idEspecialista, string imprimir, string estado)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_EstadisticaTotalizado", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@fechaDesde", fechaDesde, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@fechaHasta", fechaHasta, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@agrupado", agrupado, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idTipoServicio", idTipoServicio, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idArea", idArea, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idEfector", idEfector, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idEspecialista", idEspecialista, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@imprimir", imprimir, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@estado", estado, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_EstadisticaTurnos Procedure
        /// </summary>
        public static StoredProcedure LabEstadisticaTurnos(string fechaDesde, string fechaHasta, string idTipoServicio, string agrupado)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_EstadisticaTurnos", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@fechaDesde", fechaDesde, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@fechaHasta", fechaHasta, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idTipoServicio", idTipoServicio, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@agrupado", agrupado, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_ExportacionDatosWhonet Procedure
        /// </summary>
        public static StoredProcedure LabExportacionDatosWhonet(int? idServicio, string ListaProtocolos)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_ExportacionDatosWhonet", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idServicio", idServicio, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@ListaProtocolos", ListaProtocolos, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_ExportaResultadosValidados Procedure
        /// </summary>
        public static StoredProcedure LabExportaResultadosValidados()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_ExportaResultadosValidados", DataService.GetInstance("insProvider"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_ExportaResultadosValidadosScreening Procedure
        /// </summary>
        public static StoredProcedure LabExportaResultadosValidadosScreening()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_ExportaResultadosValidadosScreening", DataService.GetInstance("insProvider"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_GeneraHT Procedure
        /// </summary>
        public static StoredProcedure LabGeneraHT(string fechaDesde, string fechaHasta, int? idHojaTrabajo, int? idEfectorSolicitante, int? idOrigen, int? idPrioridad, string idSector, string estado, int? numeroDesde, int? numeroHasta, int? desdeUltimoNumero)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_GeneraHT", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@fechaDesde", fechaDesde, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@fechaHasta", fechaHasta, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idHojaTrabajo", idHojaTrabajo, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idEfectorSolicitante", idEfectorSolicitante, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idOrigen", idOrigen, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idPrioridad", idPrioridad, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idSector", idSector, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@estado", estado, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@numeroDesde", numeroDesde, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@numeroHasta", numeroHasta, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@desdeUltimoNumero", desdeUltimoNumero, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_GeneraHTconResultados Procedure
        /// </summary>
        public static StoredProcedure LabGeneraHTconResultados(string fechaDesde, string fechaHasta, int? idHojaTrabajo, int? idEfectorSolicitante, int? idOrigen, int? idPrioridad, string idSector, string estado, int? numeroDesde, int? numeroHasta, int? desdeUltimoNumero)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_GeneraHTconResultados", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@fechaDesde", fechaDesde, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@fechaHasta", fechaHasta, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idHojaTrabajo", idHojaTrabajo, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idEfectorSolicitante", idEfectorSolicitante, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idOrigen", idOrigen, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idPrioridad", idPrioridad, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idSector", idSector, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@estado", estado, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@numeroDesde", numeroDesde, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@numeroHasta", numeroHasta, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@desdeUltimoNumero", desdeUltimoNumero, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_GeneraHTconResultadosMicrobiologia Procedure
        /// </summary>
        public static StoredProcedure LabGeneraHTconResultadosMicrobiologia(string fechaDesde, string fechaHasta, int? idHojaTrabajo, int? idEfectorSolicitante, int? idOrigen, int? idPrioridad, string idSector, string estado, int? numeroDesde, int? numeroHasta, int? desdeUltimoNumero, string tipoMuestra)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_GeneraHTconResultadosMicrobiologia", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@fechaDesde", fechaDesde, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@fechaHasta", fechaHasta, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idHojaTrabajo", idHojaTrabajo, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idEfectorSolicitante", idEfectorSolicitante, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idOrigen", idOrigen, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idPrioridad", idPrioridad, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idSector", idSector, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@estado", estado, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@numeroDesde", numeroDesde, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@numeroHasta", numeroHasta, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@desdeUltimoNumero", desdeUltimoNumero, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@tipoMuestra", tipoMuestra, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_GeneraHTconResultadosPesquisa Procedure
        /// </summary>
        public static StoredProcedure LabGeneraHTconResultadosPesquisa(string fechaDesde, string fechaHasta, int? idHojaTrabajo, int? idEfectorSolicitante, int? idOrigen, int? idPrioridad, string idSector, string estado, int? numeroDesde, int? numeroHasta, int? desdeUltimoNumero)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_GeneraHTconResultadosPesquisa", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@fechaDesde", fechaDesde, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@fechaHasta", fechaHasta, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idHojaTrabajo", idHojaTrabajo, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idEfectorSolicitante", idEfectorSolicitante, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idOrigen", idOrigen, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idPrioridad", idPrioridad, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idSector", idSector, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@estado", estado, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@numeroDesde", numeroDesde, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@numeroHasta", numeroHasta, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@desdeUltimoNumero", desdeUltimoNumero, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_GeneraHTMicrobiologia Procedure
        /// </summary>
        public static StoredProcedure LabGeneraHTMicrobiologia(string fechaDesde, string fechaHasta, int? idHojaTrabajo, int? idEfectorSolicitante, int? idOrigen, int? idPrioridad, string idSector, string estado, int? numeroDesde, int? numeroHasta, int? desdeUltimoNumero, string tipoMuestra)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_GeneraHTMicrobiologia", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@fechaDesde", fechaDesde, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@fechaHasta", fechaHasta, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idHojaTrabajo", idHojaTrabajo, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idEfectorSolicitante", idEfectorSolicitante, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idOrigen", idOrigen, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idPrioridad", idPrioridad, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idSector", idSector, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@estado", estado, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@numeroDesde", numeroDesde, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@numeroHasta", numeroHasta, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@desdeUltimoNumero", desdeUltimoNumero, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@tipoMuestra", tipoMuestra, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_GeneraHTPesquisa Procedure
        /// </summary>
        public static StoredProcedure LabGeneraHTPesquisa(string fechaDesde, string fechaHasta, int? idHojaTrabajo, int? idEfectorSolicitante, int? idOrigen, int? idPrioridad, string idSector, string estado, int? numeroDesde, int? numeroHasta, int? desdeUltimoNumero)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_GeneraHTPesquisa", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@fechaDesde", fechaDesde, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@fechaHasta", fechaHasta, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idHojaTrabajo", idHojaTrabajo, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idEfectorSolicitante", idEfectorSolicitante, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idOrigen", idOrigen, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idPrioridad", idPrioridad, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idSector", idSector, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@estado", estado, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@numeroDesde", numeroDesde, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@numeroHasta", numeroHasta, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@desdeUltimoNumero", desdeUltimoNumero, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_GeneraProtocolosEnvio Procedure
        /// </summary>
        public static StoredProcedure LabGeneraProtocolosEnvio(string Equipo, string Param, string TipoMuestra, string Prefijo)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_GeneraProtocolosEnvio", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@Equipo", Equipo, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@Param", Param, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@TipoMuestra", TipoMuestra, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@Prefijo", Prefijo, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_GeneraProtocolosEnvio2 Procedure
        /// </summary>
        public static StoredProcedure LabGeneraProtocolosEnvio2(string Equipo, string Param, string TipoMuestra, string Prefijo, string estado)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_GeneraProtocolosEnvio2", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@Equipo", Equipo, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@Param", Param, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@TipoMuestra", TipoMuestra, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@Prefijo", Prefijo, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@estado", estado, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the Lab_GetAntibiograma Procedure
        /// </summary>
        public static StoredProcedure LabGetAntibiograma(int? idProtocolo, int? idItem)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("Lab_GetAntibiograma", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idProtocolo", idProtocolo, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idItem", idItem, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_GetPeticionesPaciente Procedure
        /// </summary>
        public static StoredProcedure LabGetPeticionesPaciente(int? idPaciente, int? idPeticion)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_GetPeticionesPaciente", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idPaciente", idPaciente, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idPeticion", idPeticion, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_GetPeticionesPendientes Procedure
        /// </summary>
        public static StoredProcedure LabGetPeticionesPendientes()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_GetPeticionesPendientes", DataService.GetInstance("insProvider"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_HistoricoAnalisis Procedure
        /// </summary>
        public static StoredProcedure LabHistoricoAnalisis(string fechaDesde, string fechaHasta, string idAnalisis, string idPaciente)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_HistoricoAnalisis", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@fechaDesde", fechaDesde, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@fechaHasta", fechaHasta, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idAnalisis", idAnalisis, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@idPaciente", idPaciente, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_ImprimirTurno Procedure
        /// </summary>
        public static StoredProcedure LabImprimirTurno(string idTurno)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_ImprimirTurno", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idTurno", idTurno, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_IncorporarResultadosMetrolab Procedure
        /// </summary>
        public static StoredProcedure LabIncorporarResultadosMetrolab()
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_IncorporarResultadosMetrolab", DataService.GetInstance("insProvider"), "");
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_ListaProtocolo Procedure
        /// </summary>
        public static StoredProcedure LabListaProtocolo(string FiltroBusqueda, int? TipoLista, int? idArea, int? idItem)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_ListaProtocolo", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@FiltroBusqueda", FiltroBusqueda, DbType.String, null, null);
        	
            sp.Command.AddParameter("@TipoLista", TipoLista, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idArea", idArea, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idItem", idItem, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_ListaProtocoloReducida Procedure
        /// </summary>
        public static StoredProcedure LabListaProtocoloReducida(string ListaProtocolos)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_ListaProtocoloReducida", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ListaProtocolos", ListaProtocolos, DbType.String, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_ProtocolosPaciente Procedure
        /// </summary>
        public static StoredProcedure LabProtocolosPaciente(string campoFiltro, int? valor)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_ProtocolosPaciente", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@campoFiltro", campoFiltro, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@valor", valor, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_ResultadoLaboratorio Procedure
        /// </summary>
        public static StoredProcedure LabResultadoLaboratorio(string filtro, string orden)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_ResultadoLaboratorio", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@filtro", filtro, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@orden", orden, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_ResultadoMicrobiologia2 Procedure
        /// </summary>
        public static StoredProcedure LabResultadoMicrobiologia2(string filtro)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_ResultadoMicrobiologia2", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@filtro", filtro, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_ResultadoView Procedure
        /// </summary>
        public static StoredProcedure LabResultadoView(int? idProtocolo)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_ResultadoView", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idProtocolo", idProtocolo, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the Lab_TablaCruzada Procedure
        /// </summary>
        public static StoredProcedure LabTablaCruzada(string ListaProtocolos, string IdHojaTrabajo)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("Lab_TablaCruzada", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ListaProtocolos", ListaProtocolos, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@IdHojaTrabajo", IdHojaTrabajo, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the LAB_TablaCruzada2 Procedure
        /// </summary>
        public static StoredProcedure LabTablaCruzada2(string ListaProtocolos, string IdHojaTrabajo)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("LAB_TablaCruzada2", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@ListaProtocolos", ListaProtocolos, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@IdHojaTrabajo", IdHojaTrabajo, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the ProfesionalList Procedure
        /// </summary>
        public static StoredProcedure ProfesionalList(int? idTipoDoc)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("ProfesionalList", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idTipoDoc", idTipoDoc, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the sp_SSO_AuditDB_SetUser Procedure
        /// </summary>
        public static StoredProcedure SpSsoAuditDBSetUser(string username)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("sp_SSO_AuditDB_SetUser", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@username", username, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the Sys_GetEspecialidadByEfector Procedure
        /// </summary>
        public static StoredProcedure SysGetEspecialidadByEfector(int? idefector, int? tipo)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("Sys_GetEspecialidadByEfector", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idefector", idefector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@tipo", tipo, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the Sys_GetEspecialidadEfectorList Procedure
        /// </summary>
        public static StoredProcedure SysGetEspecialidadEfectorList(int? idEfector)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("Sys_GetEspecialidadEfectorList", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idEfector", idEfector, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the Sys_GetHistoriasClinicas Procedure
        /// </summary>
        public static StoredProcedure SysGetHistoriasClinicas(int? dni)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("Sys_GetHistoriasClinicas", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@dni", dni, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the Sys_GetPaciente Procedure
        /// </summary>
        public static StoredProcedure SysGetPaciente(int? idEfector, int? numerodocumento, string apellido, string nombre, int? idSexo, DateTime? fechaNacimiento, int? idUsuario, string errorX, int? idPaciente)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("Sys_GetPaciente", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idEfector", idEfector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@numerodocumento", numerodocumento, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@apellido", apellido, DbType.String, null, null);
        	
            sp.Command.AddParameter("@nombre", nombre, DbType.String, null, null);
        	
            sp.Command.AddParameter("@idSexo", idSexo, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@fechaNacimiento", fechaNacimiento, DbType.DateTime, null, null);
        	
            sp.Command.AddParameter("@idUsuario", idUsuario, DbType.Int32, 0, 10);
        	
            sp.Command.AddOutputParameter("@error", DbType.String, null, null);
            
            sp.Command.AddOutputParameter("@idPaciente", DbType.Int32, 0, 10);
            
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the Sys_GetProfesionalesByEfector Procedure
        /// </summary>
        public static StoredProcedure SysGetProfesionalesByEfector(int? idefector, int? dni)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("Sys_GetProfesionalesByEfector", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idefector", idefector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@dni", dni, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the Sys_GetProfesionalesByEfectorList Procedure
        /// </summary>
        public static StoredProcedure SysGetProfesionalesByEfectorList(int? idefector, int? dni, string nombre)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("Sys_GetProfesionalesByEfectorList", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idefector", idefector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@dni", dni, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@nombre", nombre, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the Sys_GetServicioByEfector Procedure
        /// </summary>
        public static StoredProcedure SysGetServicioByEfector(int? idefector)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("Sys_GetServicioByEfector", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idefector", idefector, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the Sys_GetUltimaHC Procedure
        /// </summary>
        public static StoredProcedure SysGetUltimaHC(int? efector)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("Sys_GetUltimaHC", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the Sys_UnificaPaciente Procedure
        /// </summary>
        public static StoredProcedure SysUnificaPaciente(int? idPacientePrincipal, int? idPacienteSecundario, bool? inactivarPaciente)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("Sys_UnificaPaciente", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idPacientePrincipal", idPacientePrincipal, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@idPacienteSecundario", idPacienteSecundario, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@inactivarPaciente", inactivarPaciente, DbType.Boolean, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the SysGetNroHClinicaxEfector Procedure
        /// </summary>
        public static StoredProcedure SysGetNroHClinicaxEfector(int? efector, int? dni, int? hc, string apellido, string nombre)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("SysGetNroHClinicaxEfector", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@dni", dni, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@hc", hc, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@apellido", apellido, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@nombre", nombre, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the SysGetPacientesHC Procedure
        /// </summary>
        public static StoredProcedure SysGetPacientesHC(int? dni, int? efector)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("SysGetPacientesHC", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@dni", dni, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@efector", efector, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the usr_IsPerfilActionEnabled Procedure
        /// </summary>
        public static StoredProcedure UsrIsPerfilActionEnabled(string pagename, string perfil)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("usr_IsPerfilActionEnabled", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@pagename", pagename, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@perfil", perfil, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the usr_IsPerfilModuleEnabled Procedure
        /// </summary>
        public static StoredProcedure UsrIsPerfilModuleEnabled(string modulename, string perfil)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("usr_IsPerfilModuleEnabled", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@modulename", modulename, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@perfil", perfil, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the usr_IsPerfilPageEnabled Procedure
        /// </summary>
        public static StoredProcedure UsrIsPerfilPageEnabled(string pagename, string perfil)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("usr_IsPerfilPageEnabled", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@pagename", pagename, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@perfil", perfil, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the usr_IsUserPageEnabled Procedure
        /// </summary>
        public static StoredProcedure UsrIsUserPageEnabled(string pagename, string usuario)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("usr_IsUserPageEnabled", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@pagename", pagename, DbType.AnsiString, null, null);
        	
            sp.Command.AddParameter("@usuario", usuario, DbType.AnsiString, null, null);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the WSEventosHospitalarios Procedure
        /// </summary>
        public static StoredProcedure WSEventosHospitalarios(int? idPaciente)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("WSEventosHospitalarios", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idPaciente", idPaciente, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the WSGetEventosCentralizados Procedure
        /// </summary>
        public static StoredProcedure WSGetEventosCentralizados(int? dni)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("WSGetEventosCentralizados", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@dni", dni, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the WSGetEventosHospitalariosSips Procedure
        /// </summary>
        public static StoredProcedure WSGetEventosHospitalariosSips(int? dni)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("WSGetEventosHospitalariosSips", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@dni", dni, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
        /// <summary>
        /// Creates an object wrapper for the WSHCAtencionPrimaria Procedure
        /// </summary>
        public static StoredProcedure WSHCAtencionPrimaria(int? idPaciente, int? tipoBusqueda)
        {
            SubSonic.StoredProcedure sp = new SubSonic.StoredProcedure("WSHCAtencionPrimaria", DataService.GetInstance("insProvider"), "dbo");
        	
            sp.Command.AddParameter("@idPaciente", idPaciente, DbType.Int32, 0, 10);
        	
            sp.Command.AddParameter("@tipoBusqueda", tipoBusqueda, DbType.Int32, 0, 10);
        	
            return sp;
        }
        
    }
    
}
