using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace DalInsumos
{
	/// <summary>
	/// Strongly-typed collection for the InsPrescripcionDetalle class.
	/// </summary>
    [Serializable]
	public partial class InsPrescripcionDetalleCollection : ActiveList<InsPrescripcionDetalle, InsPrescripcionDetalleCollection>
	{	   
		public InsPrescripcionDetalleCollection() {}
        
        /// <summary>
		/// Filters an existing collection based on the set criteria. This is an in-memory filter
		/// Thanks to developingchris for this!
        /// </summary>
        /// <returns>InsPrescripcionDetalleCollection</returns>
		public InsPrescripcionDetalleCollection Filter()
        {
            for (int i = this.Count - 1; i > -1; i--)
            {
                InsPrescripcionDetalle o = this[i];
                foreach (SubSonic.Where w in this.wheres)
                {
                    bool remove = false;
                    System.Reflection.PropertyInfo pi = o.GetType().GetProperty(w.ColumnName);
                    if (pi.CanRead)
                    {
                        object val = pi.GetValue(o, null);
                        switch (w.Comparison)
                        {
                            case SubSonic.Comparison.Equals:
                                if (!val.Equals(w.ParameterValue))
                                {
                                    remove = true;
                                }
                                break;
                        }
                    }
                    if (remove)
                    {
                        this.Remove(o);
                        break;
                    }
                }
            }
            return this;
        }
		
		
	}
	/// <summary>
	/// This is an ActiveRecord class which wraps the INS_PrescripcionDetalle table.
	/// </summary>
	[Serializable]
	public partial class InsPrescripcionDetalle : ActiveRecord<InsPrescripcionDetalle>, IActiveRecord
	{
		#region .ctors and Default Settings
		
		public InsPrescripcionDetalle()
		{
		  SetSQLProps();
		  InitSetDefaults();
		  MarkNew();
		}
		
		private void InitSetDefaults() { SetDefaults(); }
		
		public InsPrescripcionDetalle(bool useDatabaseDefaults)
		{
			SetSQLProps();
			if(useDatabaseDefaults)
				ForceDefaults();
			MarkNew();
		}
        
		public InsPrescripcionDetalle(object keyID)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByKey(keyID);
		}
		 
		public InsPrescripcionDetalle(string columnName, object columnValue)
		{
			SetSQLProps();
			InitSetDefaults();
			LoadByParam(columnName,columnValue);
		}
		
		protected static void SetSQLProps() { GetTableSchema(); }
		
		#endregion
		
		#region Schema and Query Accessor	
		public static Query CreateQuery() { return new Query(Schema); }
		public static TableSchema.Table Schema
		{
			get
			{
				if (BaseSchema == null)
					SetSQLProps();
				return BaseSchema;
			}
		}
		
		private static void GetTableSchema() 
		{
			if(!IsSchemaInitialized)
			{
				//Schema declaration
				TableSchema.Table schema = new TableSchema.Table("INS_PrescripcionDetalle", TableType.Table, DataService.GetInstance("insProvider"));
				schema.Columns = new TableSchema.TableColumnCollection();
				schema.SchemaName = @"dbo";
				//columns
				
				TableSchema.TableColumn colvarIdPrescripcionDetalle = new TableSchema.TableColumn(schema);
				colvarIdPrescripcionDetalle.ColumnName = "idPrescripcionDetalle";
				colvarIdPrescripcionDetalle.DataType = DbType.Int32;
				colvarIdPrescripcionDetalle.MaxLength = 0;
				colvarIdPrescripcionDetalle.AutoIncrement = true;
				colvarIdPrescripcionDetalle.IsNullable = false;
				colvarIdPrescripcionDetalle.IsPrimaryKey = true;
				colvarIdPrescripcionDetalle.IsForeignKey = false;
				colvarIdPrescripcionDetalle.IsReadOnly = false;
				colvarIdPrescripcionDetalle.DefaultSetting = @"";
				colvarIdPrescripcionDetalle.ForeignKeyTableName = "";
				schema.Columns.Add(colvarIdPrescripcionDetalle);
				
				TableSchema.TableColumn colvarIdPrescripcion = new TableSchema.TableColumn(schema);
				colvarIdPrescripcion.ColumnName = "idPrescripcion";
				colvarIdPrescripcion.DataType = DbType.Int32;
				colvarIdPrescripcion.MaxLength = 0;
				colvarIdPrescripcion.AutoIncrement = false;
				colvarIdPrescripcion.IsNullable = true;
				colvarIdPrescripcion.IsPrimaryKey = false;
				colvarIdPrescripcion.IsForeignKey = true;
				colvarIdPrescripcion.IsReadOnly = false;
				colvarIdPrescripcion.DefaultSetting = @"";
				
					colvarIdPrescripcion.ForeignKeyTableName = "INS_Prescripcion";
				schema.Columns.Add(colvarIdPrescripcion);
				
				TableSchema.TableColumn colvarIdInsumo = new TableSchema.TableColumn(schema);
				colvarIdInsumo.ColumnName = "idInsumo";
				colvarIdInsumo.DataType = DbType.Int32;
				colvarIdInsumo.MaxLength = 0;
				colvarIdInsumo.AutoIncrement = false;
				colvarIdInsumo.IsNullable = true;
				colvarIdInsumo.IsPrimaryKey = false;
				colvarIdInsumo.IsForeignKey = true;
				colvarIdInsumo.IsReadOnly = false;
				colvarIdInsumo.DefaultSetting = @"";
				
					colvarIdInsumo.ForeignKeyTableName = "INS_Insumo";
				schema.Columns.Add(colvarIdInsumo);
				
				TableSchema.TableColumn colvarFecha = new TableSchema.TableColumn(schema);
				colvarFecha.ColumnName = "fecha";
				colvarFecha.DataType = DbType.DateTime;
				colvarFecha.MaxLength = 0;
				colvarFecha.AutoIncrement = false;
				colvarFecha.IsNullable = true;
				colvarFecha.IsPrimaryKey = false;
				colvarFecha.IsForeignKey = false;
				colvarFecha.IsReadOnly = false;
				colvarFecha.DefaultSetting = @"";
				colvarFecha.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFecha);
				
				TableSchema.TableColumn colvarRenglon = new TableSchema.TableColumn(schema);
				colvarRenglon.ColumnName = "renglon";
				colvarRenglon.DataType = DbType.Int32;
				colvarRenglon.MaxLength = 0;
				colvarRenglon.AutoIncrement = false;
				colvarRenglon.IsNullable = true;
				colvarRenglon.IsPrimaryKey = false;
				colvarRenglon.IsForeignKey = false;
				colvarRenglon.IsReadOnly = false;
				colvarRenglon.DefaultSetting = @"";
				colvarRenglon.ForeignKeyTableName = "";
				schema.Columns.Add(colvarRenglon);
				
				TableSchema.TableColumn colvarUnidadDosis = new TableSchema.TableColumn(schema);
				colvarUnidadDosis.ColumnName = "unidadDosis";
				colvarUnidadDosis.DataType = DbType.AnsiString;
				colvarUnidadDosis.MaxLength = 10;
				colvarUnidadDosis.AutoIncrement = false;
				colvarUnidadDosis.IsNullable = true;
				colvarUnidadDosis.IsPrimaryKey = false;
				colvarUnidadDosis.IsForeignKey = false;
				colvarUnidadDosis.IsReadOnly = false;
				
						colvarUnidadDosis.DefaultSetting = @"('')";
				colvarUnidadDosis.ForeignKeyTableName = "";
				schema.Columns.Add(colvarUnidadDosis);
				
				TableSchema.TableColumn colvarDiasTratamiento = new TableSchema.TableColumn(schema);
				colvarDiasTratamiento.ColumnName = "diasTratamiento";
				colvarDiasTratamiento.DataType = DbType.Int32;
				colvarDiasTratamiento.MaxLength = 0;
				colvarDiasTratamiento.AutoIncrement = false;
				colvarDiasTratamiento.IsNullable = true;
				colvarDiasTratamiento.IsPrimaryKey = false;
				colvarDiasTratamiento.IsForeignKey = false;
				colvarDiasTratamiento.IsReadOnly = false;
				
						colvarDiasTratamiento.DefaultSetting = @"((0))";
				colvarDiasTratamiento.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDiasTratamiento);
				
				TableSchema.TableColumn colvarCantidadSolicitada = new TableSchema.TableColumn(schema);
				colvarCantidadSolicitada.ColumnName = "cantidadSolicitada";
				colvarCantidadSolicitada.DataType = DbType.Int32;
				colvarCantidadSolicitada.MaxLength = 0;
				colvarCantidadSolicitada.AutoIncrement = false;
				colvarCantidadSolicitada.IsNullable = true;
				colvarCantidadSolicitada.IsPrimaryKey = false;
				colvarCantidadSolicitada.IsForeignKey = false;
				colvarCantidadSolicitada.IsReadOnly = false;
				
						colvarCantidadSolicitada.DefaultSetting = @"((0))";
				colvarCantidadSolicitada.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCantidadSolicitada);
				
				TableSchema.TableColumn colvarCantidadEmitida = new TableSchema.TableColumn(schema);
				colvarCantidadEmitida.ColumnName = "cantidadEmitida";
				colvarCantidadEmitida.DataType = DbType.Int32;
				colvarCantidadEmitida.MaxLength = 0;
				colvarCantidadEmitida.AutoIncrement = false;
				colvarCantidadEmitida.IsNullable = true;
				colvarCantidadEmitida.IsPrimaryKey = false;
				colvarCantidadEmitida.IsForeignKey = false;
				colvarCantidadEmitida.IsReadOnly = false;
				
						colvarCantidadEmitida.DefaultSetting = @"((0))";
				colvarCantidadEmitida.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCantidadEmitida);
				
				TableSchema.TableColumn colvarFrecuencia = new TableSchema.TableColumn(schema);
				colvarFrecuencia.ColumnName = "frecuencia";
				colvarFrecuencia.DataType = DbType.AnsiString;
				colvarFrecuencia.MaxLength = 100;
				colvarFrecuencia.AutoIncrement = false;
				colvarFrecuencia.IsNullable = true;
				colvarFrecuencia.IsPrimaryKey = false;
				colvarFrecuencia.IsForeignKey = false;
				colvarFrecuencia.IsReadOnly = false;
				colvarFrecuencia.DefaultSetting = @"";
				colvarFrecuencia.ForeignKeyTableName = "";
				schema.Columns.Add(colvarFrecuencia);
				
				TableSchema.TableColumn colvarObservacion = new TableSchema.TableColumn(schema);
				colvarObservacion.ColumnName = "observacion";
				colvarObservacion.DataType = DbType.AnsiString;
				colvarObservacion.MaxLength = 500;
				colvarObservacion.AutoIncrement = false;
				colvarObservacion.IsNullable = true;
				colvarObservacion.IsPrimaryKey = false;
				colvarObservacion.IsForeignKey = false;
				colvarObservacion.IsReadOnly = false;
				colvarObservacion.DefaultSetting = @"";
				colvarObservacion.ForeignKeyTableName = "";
				schema.Columns.Add(colvarObservacion);
				
				TableSchema.TableColumn colvarBaja = new TableSchema.TableColumn(schema);
				colvarBaja.ColumnName = "baja";
				colvarBaja.DataType = DbType.Boolean;
				colvarBaja.MaxLength = 0;
				colvarBaja.AutoIncrement = false;
				colvarBaja.IsNullable = false;
				colvarBaja.IsPrimaryKey = false;
				colvarBaja.IsForeignKey = false;
				colvarBaja.IsReadOnly = false;
				
						colvarBaja.DefaultSetting = @"((0))";
				colvarBaja.ForeignKeyTableName = "";
				schema.Columns.Add(colvarBaja);
				
				TableSchema.TableColumn colvarIdInternacionPedido = new TableSchema.TableColumn(schema);
				colvarIdInternacionPedido.ColumnName = "idInternacionPedido";
				colvarIdInternacionPedido.DataType = DbType.Int32;
				colvarIdInternacionPedido.MaxLength = 0;
				colvarIdInternacionPedido.AutoIncrement = false;
				colvarIdInternacionPedido.IsNullable = false;
				colvarIdInternacionPedido.IsPrimaryKey = false;
				colvarIdInternacionPedido.IsForeignKey = true;
				colvarIdInternacionPedido.IsReadOnly = false;
				
						colvarIdInternacionPedido.DefaultSetting = @"((0))";
				
					colvarIdInternacionPedido.ForeignKeyTableName = "INS_InternacionPedido";
				schema.Columns.Add(colvarIdInternacionPedido);
				
				TableSchema.TableColumn colvarIdMotivoRechazo = new TableSchema.TableColumn(schema);
				colvarIdMotivoRechazo.ColumnName = "idMotivoRechazo";
				colvarIdMotivoRechazo.DataType = DbType.Int32;
				colvarIdMotivoRechazo.MaxLength = 0;
				colvarIdMotivoRechazo.AutoIncrement = false;
				colvarIdMotivoRechazo.IsNullable = true;
				colvarIdMotivoRechazo.IsPrimaryKey = false;
				colvarIdMotivoRechazo.IsForeignKey = true;
				colvarIdMotivoRechazo.IsReadOnly = false;
				
						colvarIdMotivoRechazo.DefaultSetting = @"((0))";
				
					colvarIdMotivoRechazo.ForeignKeyTableName = "INS_MotivosRechazo";
				schema.Columns.Add(colvarIdMotivoRechazo);
				
				TableSchema.TableColumn colvarObservacionRechazo = new TableSchema.TableColumn(schema);
				colvarObservacionRechazo.ColumnName = "observacionRechazo";
				colvarObservacionRechazo.DataType = DbType.AnsiString;
				colvarObservacionRechazo.MaxLength = 300;
				colvarObservacionRechazo.AutoIncrement = false;
				colvarObservacionRechazo.IsNullable = true;
				colvarObservacionRechazo.IsPrimaryKey = false;
				colvarObservacionRechazo.IsForeignKey = false;
				colvarObservacionRechazo.IsReadOnly = false;
				colvarObservacionRechazo.DefaultSetting = @"";
				colvarObservacionRechazo.ForeignKeyTableName = "";
				schema.Columns.Add(colvarObservacionRechazo);
				
				TableSchema.TableColumn colvarIdDosis = new TableSchema.TableColumn(schema);
				colvarIdDosis.ColumnName = "idDosis";
				colvarIdDosis.DataType = DbType.Int32;
				colvarIdDosis.MaxLength = 0;
				colvarIdDosis.AutoIncrement = false;
				colvarIdDosis.IsNullable = false;
				colvarIdDosis.IsPrimaryKey = false;
				colvarIdDosis.IsForeignKey = true;
				colvarIdDosis.IsReadOnly = false;
				
						colvarIdDosis.DefaultSetting = @"((0))";
				
					colvarIdDosis.ForeignKeyTableName = "INS_Dosis";
				schema.Columns.Add(colvarIdDosis);
				
				TableSchema.TableColumn colvarCreatedBy = new TableSchema.TableColumn(schema);
				colvarCreatedBy.ColumnName = "CreatedBy";
				colvarCreatedBy.DataType = DbType.AnsiString;
				colvarCreatedBy.MaxLength = 50;
				colvarCreatedBy.AutoIncrement = false;
				colvarCreatedBy.IsNullable = false;
				colvarCreatedBy.IsPrimaryKey = false;
				colvarCreatedBy.IsForeignKey = false;
				colvarCreatedBy.IsReadOnly = false;
				
						colvarCreatedBy.DefaultSetting = @"('')";
				colvarCreatedBy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCreatedBy);
				
				TableSchema.TableColumn colvarCreatedOn = new TableSchema.TableColumn(schema);
				colvarCreatedOn.ColumnName = "CreatedOn";
				colvarCreatedOn.DataType = DbType.DateTime;
				colvarCreatedOn.MaxLength = 0;
				colvarCreatedOn.AutoIncrement = false;
				colvarCreatedOn.IsNullable = false;
				colvarCreatedOn.IsPrimaryKey = false;
				colvarCreatedOn.IsForeignKey = false;
				colvarCreatedOn.IsReadOnly = false;
				
						colvarCreatedOn.DefaultSetting = @"(((1)/(1))/(1900))";
				colvarCreatedOn.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCreatedOn);
				
				TableSchema.TableColumn colvarModifiedBy = new TableSchema.TableColumn(schema);
				colvarModifiedBy.ColumnName = "ModifiedBy";
				colvarModifiedBy.DataType = DbType.AnsiString;
				colvarModifiedBy.MaxLength = 50;
				colvarModifiedBy.AutoIncrement = false;
				colvarModifiedBy.IsNullable = false;
				colvarModifiedBy.IsPrimaryKey = false;
				colvarModifiedBy.IsForeignKey = false;
				colvarModifiedBy.IsReadOnly = false;
				
						colvarModifiedBy.DefaultSetting = @"('')";
				colvarModifiedBy.ForeignKeyTableName = "";
				schema.Columns.Add(colvarModifiedBy);
				
				TableSchema.TableColumn colvarModifiedOn = new TableSchema.TableColumn(schema);
				colvarModifiedOn.ColumnName = "ModifiedOn";
				colvarModifiedOn.DataType = DbType.DateTime;
				colvarModifiedOn.MaxLength = 0;
				colvarModifiedOn.AutoIncrement = false;
				colvarModifiedOn.IsNullable = false;
				colvarModifiedOn.IsPrimaryKey = false;
				colvarModifiedOn.IsForeignKey = false;
				colvarModifiedOn.IsReadOnly = false;
				
						colvarModifiedOn.DefaultSetting = @"(((1)/(1))/(1900))";
				colvarModifiedOn.ForeignKeyTableName = "";
				schema.Columns.Add(colvarModifiedOn);
				
				TableSchema.TableColumn colvarCantidadDisponible = new TableSchema.TableColumn(schema);
				colvarCantidadDisponible.ColumnName = "cantidadDisponible";
				colvarCantidadDisponible.DataType = DbType.Int32;
				colvarCantidadDisponible.MaxLength = 0;
				colvarCantidadDisponible.AutoIncrement = false;
				colvarCantidadDisponible.IsNullable = true;
				colvarCantidadDisponible.IsPrimaryKey = false;
				colvarCantidadDisponible.IsForeignKey = false;
				colvarCantidadDisponible.IsReadOnly = false;
				colvarCantidadDisponible.DefaultSetting = @"";
				colvarCantidadDisponible.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCantidadDisponible);
				
				TableSchema.TableColumn colvarDeuda = new TableSchema.TableColumn(schema);
				colvarDeuda.ColumnName = "deuda";
				colvarDeuda.DataType = DbType.Int32;
				colvarDeuda.MaxLength = 0;
				colvarDeuda.AutoIncrement = false;
				colvarDeuda.IsNullable = false;
				colvarDeuda.IsPrimaryKey = false;
				colvarDeuda.IsForeignKey = false;
				colvarDeuda.IsReadOnly = false;
				
						colvarDeuda.DefaultSetting = @"((0))";
				colvarDeuda.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDeuda);
				
				TableSchema.TableColumn colvarCantidadSolicitadaTotal = new TableSchema.TableColumn(schema);
				colvarCantidadSolicitadaTotal.ColumnName = "cantidadSolicitadaTotal";
				colvarCantidadSolicitadaTotal.DataType = DbType.Int32;
				colvarCantidadSolicitadaTotal.MaxLength = 0;
				colvarCantidadSolicitadaTotal.AutoIncrement = false;
				colvarCantidadSolicitadaTotal.IsNullable = false;
				colvarCantidadSolicitadaTotal.IsPrimaryKey = false;
				colvarCantidadSolicitadaTotal.IsForeignKey = false;
				colvarCantidadSolicitadaTotal.IsReadOnly = false;
				
						colvarCantidadSolicitadaTotal.DefaultSetting = @"((0))";
				colvarCantidadSolicitadaTotal.ForeignKeyTableName = "";
				schema.Columns.Add(colvarCantidadSolicitadaTotal);
				
				TableSchema.TableColumn colvarDosis = new TableSchema.TableColumn(schema);
				colvarDosis.ColumnName = "dosis";
				colvarDosis.DataType = DbType.Decimal;
				colvarDosis.MaxLength = 0;
				colvarDosis.AutoIncrement = false;
				colvarDosis.IsNullable = false;
				colvarDosis.IsPrimaryKey = false;
				colvarDosis.IsForeignKey = false;
				colvarDosis.IsReadOnly = false;
				
						colvarDosis.DefaultSetting = @"((0))";
				colvarDosis.ForeignKeyTableName = "";
				schema.Columns.Add(colvarDosis);
				
				BaseSchema = schema;
				//add this schema to the provider
				//so we can query it later
				DataService.Providers["insProvider"].AddSchema("INS_PrescripcionDetalle",schema);
			}
		}
		#endregion
		
		#region Props
		  
		[XmlAttribute("IdPrescripcionDetalle")]
		[Bindable(true)]
		public int IdPrescripcionDetalle 
		{
			get { return GetColumnValue<int>(Columns.IdPrescripcionDetalle); }
			set { SetColumnValue(Columns.IdPrescripcionDetalle, value); }
		}
		  
		[XmlAttribute("IdPrescripcion")]
		[Bindable(true)]
		public int? IdPrescripcion 
		{
			get { return GetColumnValue<int?>(Columns.IdPrescripcion); }
			set { SetColumnValue(Columns.IdPrescripcion, value); }
		}
		  
		[XmlAttribute("IdInsumo")]
		[Bindable(true)]
		public int? IdInsumo 
		{
			get { return GetColumnValue<int?>(Columns.IdInsumo); }
			set { SetColumnValue(Columns.IdInsumo, value); }
		}
		  
		[XmlAttribute("Fecha")]
		[Bindable(true)]
		public DateTime? Fecha 
		{
			get { return GetColumnValue<DateTime?>(Columns.Fecha); }
			set { SetColumnValue(Columns.Fecha, value); }
		}
		  
		[XmlAttribute("Renglon")]
		[Bindable(true)]
		public int? Renglon 
		{
			get { return GetColumnValue<int?>(Columns.Renglon); }
			set { SetColumnValue(Columns.Renglon, value); }
		}
		  
		[XmlAttribute("UnidadDosis")]
		[Bindable(true)]
		public string UnidadDosis 
		{
			get { return GetColumnValue<string>(Columns.UnidadDosis); }
			set { SetColumnValue(Columns.UnidadDosis, value); }
		}
		  
		[XmlAttribute("DiasTratamiento")]
		[Bindable(true)]
		public int? DiasTratamiento 
		{
			get { return GetColumnValue<int?>(Columns.DiasTratamiento); }
			set { SetColumnValue(Columns.DiasTratamiento, value); }
		}
		  
		[XmlAttribute("CantidadSolicitada")]
		[Bindable(true)]
		public int? CantidadSolicitada 
		{
			get { return GetColumnValue<int?>(Columns.CantidadSolicitada); }
			set { SetColumnValue(Columns.CantidadSolicitada, value); }
		}
		  
		[XmlAttribute("CantidadEmitida")]
		[Bindable(true)]
		public int? CantidadEmitida 
		{
			get { return GetColumnValue<int?>(Columns.CantidadEmitida); }
			set { SetColumnValue(Columns.CantidadEmitida, value); }
		}
		  
		[XmlAttribute("Frecuencia")]
		[Bindable(true)]
		public string Frecuencia 
		{
			get { return GetColumnValue<string>(Columns.Frecuencia); }
			set { SetColumnValue(Columns.Frecuencia, value); }
		}
		  
		[XmlAttribute("Observacion")]
		[Bindable(true)]
		public string Observacion 
		{
			get { return GetColumnValue<string>(Columns.Observacion); }
			set { SetColumnValue(Columns.Observacion, value); }
		}
		  
		[XmlAttribute("Baja")]
		[Bindable(true)]
		public bool Baja 
		{
			get { return GetColumnValue<bool>(Columns.Baja); }
			set { SetColumnValue(Columns.Baja, value); }
		}
		  
		[XmlAttribute("IdInternacionPedido")]
		[Bindable(true)]
		public int IdInternacionPedido 
		{
			get { return GetColumnValue<int>(Columns.IdInternacionPedido); }
			set { SetColumnValue(Columns.IdInternacionPedido, value); }
		}
		  
		[XmlAttribute("IdMotivoRechazo")]
		[Bindable(true)]
		public int? IdMotivoRechazo 
		{
			get { return GetColumnValue<int?>(Columns.IdMotivoRechazo); }
			set { SetColumnValue(Columns.IdMotivoRechazo, value); }
		}
		  
		[XmlAttribute("ObservacionRechazo")]
		[Bindable(true)]
		public string ObservacionRechazo 
		{
			get { return GetColumnValue<string>(Columns.ObservacionRechazo); }
			set { SetColumnValue(Columns.ObservacionRechazo, value); }
		}
		  
		[XmlAttribute("IdDosis")]
		[Bindable(true)]
		public int IdDosis 
		{
			get { return GetColumnValue<int>(Columns.IdDosis); }
			set { SetColumnValue(Columns.IdDosis, value); }
		}
		  
		[XmlAttribute("CreatedBy")]
		[Bindable(true)]
		public string CreatedBy 
		{
			get { return GetColumnValue<string>(Columns.CreatedBy); }
			set { SetColumnValue(Columns.CreatedBy, value); }
		}
		  
		[XmlAttribute("CreatedOn")]
		[Bindable(true)]
		public DateTime CreatedOn 
		{
			get { return GetColumnValue<DateTime>(Columns.CreatedOn); }
			set { SetColumnValue(Columns.CreatedOn, value); }
		}
		  
		[XmlAttribute("ModifiedBy")]
		[Bindable(true)]
		public string ModifiedBy 
		{
			get { return GetColumnValue<string>(Columns.ModifiedBy); }
			set { SetColumnValue(Columns.ModifiedBy, value); }
		}
		  
		[XmlAttribute("ModifiedOn")]
		[Bindable(true)]
		public DateTime ModifiedOn 
		{
			get { return GetColumnValue<DateTime>(Columns.ModifiedOn); }
			set { SetColumnValue(Columns.ModifiedOn, value); }
		}
		  
		[XmlAttribute("CantidadDisponible")]
		[Bindable(true)]
		public int? CantidadDisponible 
		{
			get { return GetColumnValue<int?>(Columns.CantidadDisponible); }
			set { SetColumnValue(Columns.CantidadDisponible, value); }
		}
		  
		[XmlAttribute("Deuda")]
		[Bindable(true)]
		public int Deuda 
		{
			get { return GetColumnValue<int>(Columns.Deuda); }
			set { SetColumnValue(Columns.Deuda, value); }
		}
		  
		[XmlAttribute("CantidadSolicitadaTotal")]
		[Bindable(true)]
		public int CantidadSolicitadaTotal 
		{
			get { return GetColumnValue<int>(Columns.CantidadSolicitadaTotal); }
			set { SetColumnValue(Columns.CantidadSolicitadaTotal, value); }
		}
		  
		[XmlAttribute("Dosis")]
		[Bindable(true)]
		public decimal Dosis 
		{
			get { return GetColumnValue<decimal>(Columns.Dosis); }
			set { SetColumnValue(Columns.Dosis, value); }
		}
		
		#endregion
		
		
		#region PrimaryKey Methods		
		
        protected override void SetPrimaryKey(object oValue)
        {
            base.SetPrimaryKey(oValue);
            
            SetPKValues();
        }
        
				
		private DalInsumos.InsPrescripcionEntregaCollection colInsPrescripcionEntregaRecords;
		public DalInsumos.InsPrescripcionEntregaCollection InsPrescripcionEntregaRecords
		{
			get
			{
				if(colInsPrescripcionEntregaRecords == null)
				{
					colInsPrescripcionEntregaRecords = new DalInsumos.InsPrescripcionEntregaCollection().Where(InsPrescripcionEntrega.Columns.IdPrescripcionDetalle, IdPrescripcionDetalle).Load();
					colInsPrescripcionEntregaRecords.ListChanged += new ListChangedEventHandler(colInsPrescripcionEntregaRecords_ListChanged);
				}
				return colInsPrescripcionEntregaRecords;			
			}
			set 
			{ 
					colInsPrescripcionEntregaRecords = value; 
					colInsPrescripcionEntregaRecords.ListChanged += new ListChangedEventHandler(colInsPrescripcionEntregaRecords_ListChanged);
			}
		}
		
		void colInsPrescripcionEntregaRecords_ListChanged(object sender, ListChangedEventArgs e)
		{
		    if (e.ListChangedType == ListChangedType.ItemAdded)
		    {
		        // Set foreign key value
		        colInsPrescripcionEntregaRecords[e.NewIndex].IdPrescripcionDetalle = IdPrescripcionDetalle;
		    }
		}
		
		#endregion
		
			
		
		#region ForeignKey Properties
		
		/// <summary>
		/// Returns a InsPrescripcion ActiveRecord object related to this InsPrescripcionDetalle
		/// 
		/// </summary>
		public DalInsumos.InsPrescripcion InsPrescripcion
		{
			get { return DalInsumos.InsPrescripcion.FetchByID(this.IdPrescripcion); }
			set { SetColumnValue("idPrescripcion", value.IdPrescripcion); }
		}
		
		
		/// <summary>
		/// Returns a InsInsumo ActiveRecord object related to this InsPrescripcionDetalle
		/// 
		/// </summary>
		public DalInsumos.InsInsumo InsInsumo
		{
			get { return DalInsumos.InsInsumo.FetchByID(this.IdInsumo); }
			set { SetColumnValue("idInsumo", value.Codigo); }
		}
		
		
		/// <summary>
		/// Returns a InsInternacionPedido ActiveRecord object related to this InsPrescripcionDetalle
		/// 
		/// </summary>
		public DalInsumos.InsInternacionPedido InsInternacionPedido
		{
			get { return DalInsumos.InsInternacionPedido.FetchByID(this.IdInternacionPedido); }
			set { SetColumnValue("idInternacionPedido", value.IdInternacionPedido); }
		}
		
		
		/// <summary>
		/// Returns a InsMotivosRechazo ActiveRecord object related to this InsPrescripcionDetalle
		/// 
		/// </summary>
		public DalInsumos.InsMotivosRechazo InsMotivosRechazo
		{
			get { return DalInsumos.InsMotivosRechazo.FetchByID(this.IdMotivoRechazo); }
			set { SetColumnValue("idMotivoRechazo", value.IdMotivoRechazo); }
		}
		
		
		/// <summary>
		/// Returns a InsDosi ActiveRecord object related to this InsPrescripcionDetalle
		/// 
		/// </summary>
		public DalInsumos.InsDosi InsDosi
		{
			get { return DalInsumos.InsDosi.FetchByID(this.IdDosis); }
			set { SetColumnValue("idDosis", value.IdDosis); }
		}
		
		
		#endregion
		
		
		
		//no ManyToMany tables defined (0)
		
        
        
		#region ObjectDataSource support
		
		
		/// <summary>
		/// Inserts a record, can be used with the Object Data Source
		/// </summary>
		public static void Insert(int? varIdPrescripcion,int? varIdInsumo,DateTime? varFecha,int? varRenglon,string varUnidadDosis,int? varDiasTratamiento,int? varCantidadSolicitada,int? varCantidadEmitida,string varFrecuencia,string varObservacion,bool varBaja,int varIdInternacionPedido,int? varIdMotivoRechazo,string varObservacionRechazo,int varIdDosis,string varCreatedBy,DateTime varCreatedOn,string varModifiedBy,DateTime varModifiedOn,int? varCantidadDisponible,int varDeuda,int varCantidadSolicitadaTotal,decimal varDosis)
		{
			InsPrescripcionDetalle item = new InsPrescripcionDetalle();
			
			item.IdPrescripcion = varIdPrescripcion;
			
			item.IdInsumo = varIdInsumo;
			
			item.Fecha = varFecha;
			
			item.Renglon = varRenglon;
			
			item.UnidadDosis = varUnidadDosis;
			
			item.DiasTratamiento = varDiasTratamiento;
			
			item.CantidadSolicitada = varCantidadSolicitada;
			
			item.CantidadEmitida = varCantidadEmitida;
			
			item.Frecuencia = varFrecuencia;
			
			item.Observacion = varObservacion;
			
			item.Baja = varBaja;
			
			item.IdInternacionPedido = varIdInternacionPedido;
			
			item.IdMotivoRechazo = varIdMotivoRechazo;
			
			item.ObservacionRechazo = varObservacionRechazo;
			
			item.IdDosis = varIdDosis;
			
			item.CreatedBy = varCreatedBy;
			
			item.CreatedOn = varCreatedOn;
			
			item.ModifiedBy = varModifiedBy;
			
			item.ModifiedOn = varModifiedOn;
			
			item.CantidadDisponible = varCantidadDisponible;
			
			item.Deuda = varDeuda;
			
			item.CantidadSolicitadaTotal = varCantidadSolicitadaTotal;
			
			item.Dosis = varDosis;
			
		
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		
		/// <summary>
		/// Updates a record, can be used with the Object Data Source
		/// </summary>
		public static void Update(int varIdPrescripcionDetalle,int? varIdPrescripcion,int? varIdInsumo,DateTime? varFecha,int? varRenglon,string varUnidadDosis,int? varDiasTratamiento,int? varCantidadSolicitada,int? varCantidadEmitida,string varFrecuencia,string varObservacion,bool varBaja,int varIdInternacionPedido,int? varIdMotivoRechazo,string varObservacionRechazo,int varIdDosis,string varCreatedBy,DateTime varCreatedOn,string varModifiedBy,DateTime varModifiedOn,int? varCantidadDisponible,int varDeuda,int varCantidadSolicitadaTotal,decimal varDosis)
		{
			InsPrescripcionDetalle item = new InsPrescripcionDetalle();
			
				item.IdPrescripcionDetalle = varIdPrescripcionDetalle;
			
				item.IdPrescripcion = varIdPrescripcion;
			
				item.IdInsumo = varIdInsumo;
			
				item.Fecha = varFecha;
			
				item.Renglon = varRenglon;
			
				item.UnidadDosis = varUnidadDosis;
			
				item.DiasTratamiento = varDiasTratamiento;
			
				item.CantidadSolicitada = varCantidadSolicitada;
			
				item.CantidadEmitida = varCantidadEmitida;
			
				item.Frecuencia = varFrecuencia;
			
				item.Observacion = varObservacion;
			
				item.Baja = varBaja;
			
				item.IdInternacionPedido = varIdInternacionPedido;
			
				item.IdMotivoRechazo = varIdMotivoRechazo;
			
				item.ObservacionRechazo = varObservacionRechazo;
			
				item.IdDosis = varIdDosis;
			
				item.CreatedBy = varCreatedBy;
			
				item.CreatedOn = varCreatedOn;
			
				item.ModifiedBy = varModifiedBy;
			
				item.ModifiedOn = varModifiedOn;
			
				item.CantidadDisponible = varCantidadDisponible;
			
				item.Deuda = varDeuda;
			
				item.CantidadSolicitadaTotal = varCantidadSolicitadaTotal;
			
				item.Dosis = varDosis;
			
			item.IsNew = false;
			if (System.Web.HttpContext.Current != null)
				item.Save(System.Web.HttpContext.Current.User.Identity.Name);
			else
				item.Save(System.Threading.Thread.CurrentPrincipal.Identity.Name);
		}
		#endregion
        
        
        
        #region Typed Columns
        
        
        public static TableSchema.TableColumn IdPrescripcionDetalleColumn
        {
            get { return Schema.Columns[0]; }
        }
        
        
        
        public static TableSchema.TableColumn IdPrescripcionColumn
        {
            get { return Schema.Columns[1]; }
        }
        
        
        
        public static TableSchema.TableColumn IdInsumoColumn
        {
            get { return Schema.Columns[2]; }
        }
        
        
        
        public static TableSchema.TableColumn FechaColumn
        {
            get { return Schema.Columns[3]; }
        }
        
        
        
        public static TableSchema.TableColumn RenglonColumn
        {
            get { return Schema.Columns[4]; }
        }
        
        
        
        public static TableSchema.TableColumn UnidadDosisColumn
        {
            get { return Schema.Columns[5]; }
        }
        
        
        
        public static TableSchema.TableColumn DiasTratamientoColumn
        {
            get { return Schema.Columns[6]; }
        }
        
        
        
        public static TableSchema.TableColumn CantidadSolicitadaColumn
        {
            get { return Schema.Columns[7]; }
        }
        
        
        
        public static TableSchema.TableColumn CantidadEmitidaColumn
        {
            get { return Schema.Columns[8]; }
        }
        
        
        
        public static TableSchema.TableColumn FrecuenciaColumn
        {
            get { return Schema.Columns[9]; }
        }
        
        
        
        public static TableSchema.TableColumn ObservacionColumn
        {
            get { return Schema.Columns[10]; }
        }
        
        
        
        public static TableSchema.TableColumn BajaColumn
        {
            get { return Schema.Columns[11]; }
        }
        
        
        
        public static TableSchema.TableColumn IdInternacionPedidoColumn
        {
            get { return Schema.Columns[12]; }
        }
        
        
        
        public static TableSchema.TableColumn IdMotivoRechazoColumn
        {
            get { return Schema.Columns[13]; }
        }
        
        
        
        public static TableSchema.TableColumn ObservacionRechazoColumn
        {
            get { return Schema.Columns[14]; }
        }
        
        
        
        public static TableSchema.TableColumn IdDosisColumn
        {
            get { return Schema.Columns[15]; }
        }
        
        
        
        public static TableSchema.TableColumn CreatedByColumn
        {
            get { return Schema.Columns[16]; }
        }
        
        
        
        public static TableSchema.TableColumn CreatedOnColumn
        {
            get { return Schema.Columns[17]; }
        }
        
        
        
        public static TableSchema.TableColumn ModifiedByColumn
        {
            get { return Schema.Columns[18]; }
        }
        
        
        
        public static TableSchema.TableColumn ModifiedOnColumn
        {
            get { return Schema.Columns[19]; }
        }
        
        
        
        public static TableSchema.TableColumn CantidadDisponibleColumn
        {
            get { return Schema.Columns[20]; }
        }
        
        
        
        public static TableSchema.TableColumn DeudaColumn
        {
            get { return Schema.Columns[21]; }
        }
        
        
        
        public static TableSchema.TableColumn CantidadSolicitadaTotalColumn
        {
            get { return Schema.Columns[22]; }
        }
        
        
        
        public static TableSchema.TableColumn DosisColumn
        {
            get { return Schema.Columns[23]; }
        }
        
        
        
        #endregion
		#region Columns Struct
		public struct Columns
		{
			 public static string IdPrescripcionDetalle = @"idPrescripcionDetalle";
			 public static string IdPrescripcion = @"idPrescripcion";
			 public static string IdInsumo = @"idInsumo";
			 public static string Fecha = @"fecha";
			 public static string Renglon = @"renglon";
			 public static string UnidadDosis = @"unidadDosis";
			 public static string DiasTratamiento = @"diasTratamiento";
			 public static string CantidadSolicitada = @"cantidadSolicitada";
			 public static string CantidadEmitida = @"cantidadEmitida";
			 public static string Frecuencia = @"frecuencia";
			 public static string Observacion = @"observacion";
			 public static string Baja = @"baja";
			 public static string IdInternacionPedido = @"idInternacionPedido";
			 public static string IdMotivoRechazo = @"idMotivoRechazo";
			 public static string ObservacionRechazo = @"observacionRechazo";
			 public static string IdDosis = @"idDosis";
			 public static string CreatedBy = @"CreatedBy";
			 public static string CreatedOn = @"CreatedOn";
			 public static string ModifiedBy = @"ModifiedBy";
			 public static string ModifiedOn = @"ModifiedOn";
			 public static string CantidadDisponible = @"cantidadDisponible";
			 public static string Deuda = @"deuda";
			 public static string CantidadSolicitadaTotal = @"cantidadSolicitadaTotal";
			 public static string Dosis = @"dosis";
						
		}
		#endregion
		
		#region Update PK Collections
		
        public void SetPKValues()
        {
                if (colInsPrescripcionEntregaRecords != null)
                {
                    foreach (DalInsumos.InsPrescripcionEntrega item in colInsPrescripcionEntregaRecords)
                    {
                        if (item.IdPrescripcionDetalle != IdPrescripcionDetalle)
                        {
                            item.IdPrescripcionDetalle = IdPrescripcionDetalle;
                        }
                    }
               }
		}
        #endregion
    
        #region Deep Save
		
        public void DeepSave()
        {
            Save();
            
                if (colInsPrescripcionEntregaRecords != null)
                {
                    colInsPrescripcionEntregaRecords.SaveAll();
               }
		}
        #endregion
	}
}
