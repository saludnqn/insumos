using System;
using System.Web.UI.WebControls;
using System.Data;
using DalInsumos;
using CrystalDecisions.Web;
using System.IO;

public partial class Recetas_View : System.Web.UI.Page
{
    public CrystalReportSource oCr = new CrystalReportSource();

    protected void Page_PreInit(object sender, EventArgs e)
    {
        oCr.Report.FileName = "";
        oCr.CacheDuration = 0;
        oCr.EnableCaching = false;
    }

    protected void Page_Load(object sender, EventArgs e)
    {
        if (IsPostBack) return;
        int id = SubSonic.Sugar.Web.QueryString<int>("id");
        if (id > 0)
        {
            CargarReceta(id);
        }
    }

    private void CargarReceta(int id)
    {
        InsPrescripcion p = new InsPrescripcion(id);
        lblFecha.Text = Convert.ToDateTime(p.Fecha).ToShortDateString();
        lblPrescripcion.Text = p.InsTipoPrescripcion.Nombre;
        lblDocumento.Text = p.SysPaciente.NumeroDocumento.ToString();
        lblPaciente.Text = p.SysPaciente.Apellido + ", " + p.SysPaciente.Nombre;
        lblFechaNac.Text = Convert.ToDateTime(p.SysPaciente.FechaNacimiento).ToShortDateString();
        lblSexo.Text = p.SysPaciente.SysSexo.Nombre;
        if ((p.Edad > 0) & (p.Edad < 100)) lblEdad.Text = p.Edad.ToString() + " Años";
        else lblEdad.Text = "";
        if (p.SysObraSocial.Nombre == "SELECCIONAR")
            lblOSocial.Text = "--";
        else lblOSocial.Text = p.SysObraSocial.Nombre;
        lblTratamiento.Text = p.InsTipoTratamiento.Nombre;
        if (p.IdTipoTratamiento == 2)
        {
            upCronico.Visible = true;
            lblDuración.Text = p.Duracion.ToString();
            lblUnidadDuracion.Text = p.UnidadDuracion;
            lblProximaFecha.Text = Convert.ToDateTime(p.ProximaFecha).ToShortDateString();
            lblNroDispensacion.Text = p.NumeroDispensación.ToString();
            //calcular la fecha de vencimiento de la receta
            //lblFechaVencimiento.Text = ""; //Convert.ToDateTime(p.ProximaFecha - p.Fecha).ToShortDateString();
        }
        lblDiagnostico.Text = p.Diagnostico;
        lblObservaciones.Text = p.Observaciones;
        lblProfesional.Text = p.SysProfesional.NombreCompleto;
        //detalle de la receta        
        gvReceta.DataSource = p.InsPrescripcionDetalleRecords;
        gvReceta.DataBind();
        //aca deberia traer una consulta que me traiga el precio unitario, fecha de vto y lote del insumo pedido
    }

    protected void btnEditar_Click(object sender, EventArgs e)
    {
        int id = Convert.ToInt32(Request.QueryString["id"]);
        InsPrescripcion p = new InsPrescripcion(id);
        //Response.Redirect("Default.aspx?id=" + p.IdPrescripcion + "&idD=" + pd.IdPrescripcionDetalle + "&idP=" + pac.IdPaciente.ToString());
        Response.Redirect("Default.aspx?id=" + p.IdPrescripcion);
    }

    protected void btnNuevo_Click(object sender, EventArgs e)
    {
        Response.Redirect("Default.aspx", false);
    }

    protected void gvReceta_RowDataBound(object sender, GridViewRowEventArgs e)
    {
        if (e.Row.RowType == DataControlRowType.DataRow)
        {
            InsPrescripcionDetalle pd = (InsPrescripcionDetalle)e.Row.DataItem;

            Label lblSolicitado = (Label)e.Row.FindControl("lblSolicitado");
            pd.CantidadSolicitada = Convert.ToInt32(lblSolicitado.Text);

            Label lblEntregado = (Label)e.Row.FindControl("lblEntregado");
            pd.CantidadEmitida = Convert.ToInt32(lblEntregado.Text);

            int deuda = Convert.ToInt32(pd.CantidadSolicitada - pd.CantidadEmitida);
            Label lblDeuda = (Label)e.Row.FindControl("lblDeuda");
            lblDeuda.Text = deuda.ToString();
        }
    }

    protected void lbTicket_Click(object sender, EventArgs e)
    {
        int id = SubSonic.Sugar.Web.QueryString<int>("id");

        InsPrescripcion p = new InsPrescripcion(id);
        Exportar(id);
    }

    private void Exportar(int id)
    {
        string informe = "Recetas.rpt";

        SysUsuario us = new SysUsuario(Convert.ToInt32(Session["idUsuario"]));

        // ParameterDiscreteValue receta = new ParameterDiscreteValue();
        
        DataSet ds = CargarDatos(id);

        oCr.Report.FileName = informe;
        oCr.ReportDocument.SetDataSource(ds);
        oCr.DataBind();

        MemoryStream oStream; // using System.IO
        oStream = (MemoryStream)oCr.ReportDocument.ExportToStream(CrystalDecisions.Shared.ExportFormatType.PortableDocFormat);
        Response.Clear();
        Response.Buffer = true;
        Response.ContentType = "application/pdf";
        Response.AddHeader("Content-Disposition", "attachment;filename=Receta.pdf");

        Response.BinaryWrite(oStream.ToArray());
        Response.End();
    }

    private DataSet CargarDatos(int id)
    {
        DataSet ds = new DataSet();
        DataTable dtReceta = new DataTable("DSReceta");
        DataTable dtRecetaDetalle = new DataTable("DSRDetalle");
        DataSet x = SPs.InsGetPrescripcion(id).GetDataSet();
        
        dtReceta = x.Tables[0].Copy();
        dtRecetaDetalle = x.Tables[1].Copy();

        dtReceta.TableName = "DSReceta";
        dtRecetaDetalle.TableName = "DSRDetalle";

        ds.Tables.Add(dtReceta);
        ds.Tables.Add(dtRecetaDetalle);

        return ds;
    }
}